
.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

io.realm.RealmConfiguration
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _io_realm_RealmConfiguration:

*Superclass:*

- `java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__

A RealmConfiguration is used to setup a specific Realm instance.Instances of a RealmConfiguration can only created by using the **io.realm.RealmConfiguration.Builder (?)**and calling its **io.realm.RealmConfiguration.Builder#build() (?)**method.



A commonly used RealmConfiguration can easily be accessed by first saving it as **Realm#setDefaultConfiguration(RealmConfiguration) (?)**and then using **io.realm.Realm#getDefaultInstance() (?)**.



A minimal configuration can be created using:

``RealmConfiguration config = new RealmConfiguration.Builder().build()``



This will create a RealmConfiguration with the following properties.

- Realm file is called "default.realm"
   
   
- It is saved in Context.getFilesDir()
   
   
- It has its schema version set to 0.
   
   


Constructors
============

- ``io.realm.RealmConfiguration(File, String, byte[], long, RealmMigration, boolean, OsRealmConfig.Durability, RealmProxyMediator, RxObservableFactory, FlowFactory, Realm.Transaction, boolean, CompactOnLaunchCallback, boolean, long, boolean, boolean)``

Nested Class Summary
====================

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Class and Description
   
   * - public static
     - io.realm.RealmConfiguration.Builder
   
   
Field Summary
=============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Field and Description
   
   * - public static final java.lang.String
       
       
     - DEFAULT_REALM_NAME
       
       
   
   * - protected static final RealmProxyMediator
       
       
     - DEFAULT_MODULE_MEDIATOR
       
       
   
   
Method Summary
==============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Method and Description
   
   * - public `File <https://docs.oracle.com/javase/7/docs/api/java/io/File.html>`__
     - :ref:`getRealmDirectory <io_realm_RealmConfiguration_getRealmDirectory____>` ()
       
       
       
       
       
   
   * - public `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__
     - :ref:`getRealmFileName <io_realm_RealmConfiguration_getRealmFileName____>` ()
       
       
       
       
       
   
   * - public **byte (?)**
     - :ref:`getEncryptionKey <io_realm_RealmConfiguration_getEncryptionKey____>` ()
       
       
       
       
       
   
   * - public **long (?)**
     - :ref:`getSchemaVersion <io_realm_RealmConfiguration_getSchemaVersion____>` ()
       
       
       
       
       
   
   * - public :ref:`RealmMigration <io_realm_RealmMigration>`
     - :ref:`getMigration <io_realm_RealmConfiguration_getMigration____>` ()
       
       
       
       
       
   
   * - public **boolean (?)**
     - :ref:`shouldDeleteRealmIfMigrationNeeded <io_realm_RealmConfiguration_shouldDeleteRealmIfMigrationNeeded____>` ()
       
       
       
       
       
   
   * - public **OsRealmConfig.Durability (?)**
     - :ref:`getDurability <io_realm_RealmConfiguration_getDurability____>` ()
       
       
       
       
       
   
   * - protected **RealmProxyMediator (?)**
     - :ref:`getSchemaMediator <io_realm_RealmConfiguration_getSchemaMediator____>` ()
       
       Returns the mediator instance of schema which is defined by this configuration.
       
       
       
   
   * - protected :ref:`Realm.Transaction <io_realm_Realm_Transaction>`
     - :ref:`getInitialDataTransaction <io_realm_RealmConfiguration_getInitialDataTransaction____>` ()
       
       Returns the transaction instance with initial data.
       
       
       
   
   * - public :ref:`CompactOnLaunchCallback <io_realm_CompactOnLaunchCallback>`
     - :ref:`getCompactOnLaunchCallback <io_realm_RealmConfiguration_getCompactOnLaunchCallback____>` ()
       
       Returns a callback to determine if the Realm file should be compacted before being returned to the user.
       
       
       
   
   * - public `Set <https://docs.oracle.com/javase/7/docs/api/java/util/Set.html>`__
     - :ref:`getRealmObjectClasses <io_realm_RealmConfiguration_getRealmObjectClasses____>` ()
       
       Returns the unmodifiable `Set <https://docs.oracle.com/javase/7/docs/api/java/util/Set/.html>`__of model classes that make up the schema for this Realm.
       
       
       
       
       
   
   * - public `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__
     - :ref:`getPath <io_realm_RealmConfiguration_getPath____>` ()
       
       Returns the absolute path to where the Realm file will be saved.
       
       
       
   
   * - protected **boolean (?)**
     - :ref:`realmExists <io_realm_RealmConfiguration_realmExists____>` ()
       
       Checks if the Realm file defined by this configuration already exists.
       
       
       
   
   * - public :ref:`RxObservableFactory <io_realm_rx_RxObservableFactory>`
     - :ref:`getRxFactory <io_realm_RealmConfiguration_getRxFactory____>` ()
       
       Returns the **RxObservableFactory (?)**that is used to create Rx Observables from Realm objects.
       
       
       
       
       
   
   * - public :ref:`FlowFactory <io_realm_coroutines_FlowFactory>`
     - :ref:`getFlowFactory <io_realm_RealmConfiguration_getFlowFactory____>` ()
       
       Returns the **FlowFactory (?)**that is used to create Kotlin Flows from Realm objects.
       
       
       
       
       
   
   * - public **boolean (?)**
     - :ref:`isReadOnly <io_realm_RealmConfiguration_isReadOnly____>` ()
       
       Returns whether this Realm is read-only or not.
       
       
       
   
   * - public **boolean (?)**
     - :ref:`isRecoveryConfiguration <io_realm_RealmConfiguration_isRecoveryConfiguration____>` ()
       
       
       
       
       
   
   * - public **long (?)**
     - :ref:`getMaxNumberOfActiveVersions <io_realm_RealmConfiguration_getMaxNumberOfActiveVersions____>` ()
       
       
       
       
       
   
   * - public **boolean (?)**
     - :ref:`isAllowWritesOnUiThread <io_realm_RealmConfiguration_isAllowWritesOnUiThread____>` ()
       
       Returns whether calls to **Realm#executeTransaction (?)**can be done on the UI thread.
       
       
       
       
       
   
   * - public **boolean (?)**
     - :ref:`isAllowQueriesOnUiThread <io_realm_RealmConfiguration_isAllowQueriesOnUiThread____>` ()
       
       Returns whether a **RealmQuery (?)**is allowed to be launched from the UI thread.
       
       
       
       
       
   
   * - public **boolean (?)**
     - :ref:`equals <io_realm_RealmConfiguration_equals__Object__>` (`Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ obj)
       
       
       
       
       
   
   * - public **int (?)**
     - :ref:`hashCode <io_realm_RealmConfiguration_hashCode____>` ()
       
       
       
       
       
   
   * - protected static **RealmProxyMediator (?)**
     - :ref:`createSchemaMediator <io_realm_RealmConfiguration_createSchemaMediator__Set_Object___Set_Class___extends_RealmModel____boolean__>` (`java.util.Set\<java.lang.Object> <https://docs.oracle.com/javase/7/docs/api/java/util/Set.html>`__ modules, `java.util.Set\<java.lang.Class\<? extends io.realm.RealmModel>> <https://docs.oracle.com/javase/7/docs/api/java/util/Set.html>`__ debugSchema, **boolean (?)** excludeDebugSchema)
       
       
       
       
       
   
   * - public `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__
     - :ref:`toString <io_realm_RealmConfiguration_toString____>` ()
       
       
       
       
       
   
   * - protected **boolean (?)**
     - :ref:`isSyncConfiguration <io_realm_RealmConfiguration_isSyncConfiguration____>` ()
       
       
       
       
       
   
   * - protected static :ref:`RealmConfiguration <io_realm_RealmConfiguration>`
     - :ref:`forRecovery <io_realm_RealmConfiguration_forRecovery__String__byte[]__RealmProxyMediator__>` (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ canonicalPath, **byte[] (?)** encryptionKey, **RealmProxyMediator (?)** schemaMediator)
       
       
       
       
       
   
   
Field Detail
============

.. _io_realm_RealmConfiguration_DEFAULT_REALM_NAME:

DEFAULT_REALM_NAME
------------------


.. _io_realm_RealmConfiguration_DEFAULT_MODULE_MEDIATOR:

DEFAULT_MODULE_MEDIATOR
-----------------------


Method Detail
=============

.. _io_realm_RealmConfiguration_getRealmDirectory____:

``getRealmDirectory``
---------------------

public `File <https://docs.oracle.com/javase/7/docs/api/java/io/File.html>`__ getRealmDirectory ()


.. _io_realm_RealmConfiguration_getRealmFileName____:

``getRealmFileName``
--------------------

public `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ getRealmFileName ()


.. _io_realm_RealmConfiguration_getEncryptionKey____:

``getEncryptionKey``
--------------------

public **byte (?)** getEncryptionKey ()


.. _io_realm_RealmConfiguration_getSchemaVersion____:

``getSchemaVersion``
--------------------

public **long (?)** getSchemaVersion ()


.. _io_realm_RealmConfiguration_getMigration____:

``getMigration``
----------------

public :ref:`RealmMigration <io_realm_RealmMigration>` getMigration ()


.. _io_realm_RealmConfiguration_shouldDeleteRealmIfMigrationNeeded____:

``shouldDeleteRealmIfMigrationNeeded``
--------------------------------------

public **boolean (?)** shouldDeleteRealmIfMigrationNeeded ()


.. _io_realm_RealmConfiguration_getDurability____:

``getDurability``
-----------------

public **OsRealmConfig.Durability (?)** getDurability ()


.. _io_realm_RealmConfiguration_getSchemaMediator____:

``getSchemaMediator``
---------------------

protected **RealmProxyMediator (?)** getSchemaMediator ()

Returns the mediator instance of schema which is defined by this configuration.
.. _io_realm_RealmConfiguration_getInitialDataTransaction____:

``getInitialDataTransaction``
-----------------------------

protected :ref:`Realm.Transaction <io_realm_Realm_Transaction>` getInitialDataTransaction ()

Returns the transaction instance with initial data.
.. _io_realm_RealmConfiguration_getCompactOnLaunchCallback____:

``getCompactOnLaunchCallback``
------------------------------

public :ref:`CompactOnLaunchCallback <io_realm_CompactOnLaunchCallback>` getCompactOnLaunchCallback ()

Returns a callback to determine if the Realm file should be compacted before being returned to the user.
.. _io_realm_RealmConfiguration_getRealmObjectClasses____:

``getRealmObjectClasses``
-------------------------

public `Set <https://docs.oracle.com/javase/7/docs/api/java/util/Set.html>`__ getRealmObjectClasses ()

Returns the unmodifiable `Set <https://docs.oracle.com/javase/7/docs/api/java/util/Set/.html>`__of model classes that make up the schema for this Realm.


.. _io_realm_RealmConfiguration_getPath____:

``getPath``
-----------

public `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ getPath ()

Returns the absolute path to where the Realm file will be saved.
.. _io_realm_RealmConfiguration_realmExists____:

``realmExists``
---------------

protected **boolean (?)** realmExists ()

Checks if the Realm file defined by this configuration already exists.WARNING: This method is just a point-in-time check. Unless protected by external synchronization another thread or process might have created or deleted the Realm file right after this method has returned.


.. _io_realm_RealmConfiguration_getRxFactory____:

``getRxFactory``
----------------

public :ref:`RxObservableFactory <io_realm_rx_RxObservableFactory>` getRxFactory ()

Returns the **RxObservableFactory (?)**that is used to create Rx Observables from Realm objects.


Throws
~~~~~~

.. _io_realm_RealmConfiguration_getFlowFactory____:

``getFlowFactory``
------------------

public :ref:`FlowFactory <io_realm_coroutines_FlowFactory>` getFlowFactory ()

Returns the **FlowFactory (?)**that is used to create Kotlin Flows from Realm objects.


Throws
~~~~~~

.. _io_realm_RealmConfiguration_isReadOnly____:

``isReadOnly``
--------------

public **boolean (?)** isReadOnly ()

Returns whether this Realm is read-only or not. Read-only Realms cannot be modified and will throw an `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException/.html>`__if **Realm#beginTransaction() (?)**is called on it.


.. _io_realm_RealmConfiguration_isRecoveryConfiguration____:

``isRecoveryConfiguration``
---------------------------

public **boolean (?)** isRecoveryConfiguration ()


See Also
~~~~~~~~

<a href="https://realm.io/docs/java/latest/api/io/realm/ClientResetRequiredError.html">ClientResetRequiredError</a>.. _io_realm_RealmConfiguration_getMaxNumberOfActiveVersions____:

``getMaxNumberOfActiveVersions``
--------------------------------

public **long (?)** getMaxNumberOfActiveVersions ()


.. _io_realm_RealmConfiguration_isAllowWritesOnUiThread____:

``isAllowWritesOnUiThread``
---------------------------

public **boolean (?)** isAllowWritesOnUiThread ()

Returns whether calls to **Realm#executeTransaction (?)**can be done on the UI thread.

**Note: Realm does not allow blocking transactions to be run on the main thread unless users explicitly opt in with \*\*Builder#allowWritesOnUiThread(boolean) (?)\*\*or its Realm Sync builder counterpart.

**


.. _io_realm_RealmConfiguration_isAllowQueriesOnUiThread____:

``isAllowQueriesOnUiThread``
----------------------------

public **boolean (?)** isAllowQueriesOnUiThread ()

Returns whether a **RealmQuery (?)**is allowed to be launched from the UI thread.

By default Realm allows queries on the main thread. To disallow this users have to explicitly opt in with **Builder#allowQueriesOnUiThread(boolean) (?)**or its Realm Sync builder counterpart.




.. _io_realm_RealmConfiguration_equals__Object__:

``equals``
----------

public **boolean (?)** equals (`Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ obj)


.. _io_realm_RealmConfiguration_hashCode____:

``hashCode``
------------

public **int (?)** hashCode ()


.. _io_realm_RealmConfiguration_createSchemaMediator__Set_Object___Set_Class___extends_RealmModel____boolean__:

``createSchemaMediator``
------------------------

protected static **RealmProxyMediator (?)** createSchemaMediator (`java.util.Set\<java.lang.Object> <https://docs.oracle.com/javase/7/docs/api/java/util/Set.html>`__ modules, `java.util.Set\<java.lang.Class\<? extends io.realm.RealmModel>> <https://docs.oracle.com/javase/7/docs/api/java/util/Set.html>`__ debugSchema, **boolean (?)** excludeDebugSchema)


.. _io_realm_RealmConfiguration_toString____:

``toString``
------------

public `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ toString ()


.. _io_realm_RealmConfiguration_isSyncConfiguration____:

``isSyncConfiguration``
-----------------------

protected **boolean (?)** isSyncConfiguration ()


.. _io_realm_RealmConfiguration_forRecovery__String__byte[]__RealmProxyMediator__:

``forRecovery``
---------------

protected static :ref:`RealmConfiguration <io_realm_RealmConfiguration>` forRecovery (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ canonicalPath, **byte[] (?)** encryptionKey, **RealmProxyMediator (?)** schemaMediator)



