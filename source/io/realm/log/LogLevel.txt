
.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol



Class LogLevel
^^^^^^^^^^^^^^

.. _io_realm_log_LogLevel:



io.realm.log
============

`java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ 

The Log levels defined and used by Realm when logging events in the API.Realm uses the log levels defined by Log4J: https://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/Level.html




.. seealso::


   
   - :ref:`RealmLog.add(RealmLogger) <io_realm_log_RealmLog_add_RealmLogger_>` 
      
      
      
   
   
   



Constructors
============



- ``io.realm.log.LogLevel()`` 




Field Summary
=============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Field and Description
   
   * - ``public static final int`` 
       
       
     - ``ALL`` 
       
       The ALL has the lowest possible rank and is intended to turn on all logging.
   
   * - ``public static final int`` 
       
       
     - ``TRACE`` 
       
       The TRACE level designates finer-grained informational events than DEBUG.
   
   * - ``public static final int`` 
       
       
     - ``DEBUG`` 
       
       The DEBUG level designates fine-grained informational events that are mostly useful to debug an application.
   
   * - ``public static final int`` 
       
       
     - ``INFO`` 
       
       The INFO level designates informational messages that highlight the progress of the application at
        coarse-grained level.
   
   * - ``public static final int`` 
       
       
     - ``WARN`` 
       
       The WARN level designates potentially harmful situations.
   
   * - ``public static final int`` 
       
       
     - ``ERROR`` 
       
       The ERROR level designates error events that might still allow the application to continue running.
   
   * - ``public static final int`` 
       
       
     - ``FATAL`` 
       
       The FATAL level designates very severe error events that will presumably lead the application to abort.
   
   * - ``public static final int`` 
       
       
     - ``OFF`` 
       
       The OFF has the highest possible rank and is intended to turn off logging.
   
   


Inherited Methods
=================



- Methods inherited from interface `java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ : ``getClass`` , ``hashCode`` , ``equals`` , ``clone`` , ``toString`` , ``notify`` , ``notifyAll`` , ``wait`` , ``wait`` , ``wait`` , ``finalize`` 




Field Detail
============

.. _io_realm_log_LogLevel_ALL:



``ALL`` 
--------

The ALL has the lowest possible rank and is intended to turn on all logging.
.. _io_realm_log_LogLevel_TRACE:



``TRACE`` 
----------

The TRACE level designates finer-grained informational events than DEBUG.
.. _io_realm_log_LogLevel_DEBUG:



``DEBUG`` 
----------

The DEBUG level designates fine-grained informational events that are mostly useful to debug an application.
.. _io_realm_log_LogLevel_INFO:



``INFO`` 
---------

The INFO level designates informational messages that highlight the progress of the application at coarse-grained level.
.. _io_realm_log_LogLevel_WARN:



``WARN`` 
---------

The WARN level designates potentially harmful situations.
.. _io_realm_log_LogLevel_ERROR:



``ERROR`` 
----------

The ERROR level designates error events that might still allow the application to continue running.
.. _io_realm_log_LogLevel_FATAL:



``FATAL`` 
----------

The FATAL level designates very severe error events that will presumably lead the application to abort.
.. _io_realm_log_LogLevel_OFF:



``OFF`` 
--------

The OFF has the highest possible rank and is intended to turn off logging.

