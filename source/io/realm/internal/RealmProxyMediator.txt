
.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol



Class RealmProxyMediator
^^^^^^^^^^^^^^^^^^^^^^^^

.. _io_realm_internal_RealmProxyMediator:



io.realm.internal
=================

`java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ 

Superclass for the RealmProxyMediator class. This class contains all static methods introduced by the annotation processor as part of the RealmProxy classes.Classes extending this class act as binders between the static methods inside each RealmProxy and the code at runtime. We cannot rely on using reflection as the RealmProxies are generated by the annotation processor before ProGuard is run. So after ProGuard has run there is a mismatch between the name of the RealmProxy and the original RealmObject class.




Constructors
============



- ``io.realm.internal.RealmProxyMediator()`` 




Method Summary
==============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Method and Description
   
   * - 
       protected static **void**
     - 
       :ref:`checkClass <io_realm_internal_RealmProxyMediator_checkClass_Class___extends_RealmModel__>`  (`java.lang.Class\<? extends io.realm.RealmModel> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  clazz)
       
       
       
       
       
   
   * - 
       protected static **void**
     - 
       :ref:`checkClassName <io_realm_internal_RealmProxyMediator_checkClassName_String_>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  className)
       
       
       
       
       
   
   * - 
       public abstract **E (?)**
     - 
       :ref:`copyOrUpdate <io_realm_internal_RealmProxyMediator_copyOrUpdate_Realm__E__boolean__Map_RealmModel__RealmObjectProxy___Set_ImportFlag__>`  <**E (?)** >(:ref:`Realm <io_realm_Realm>`  realm,
                                        **E (?)** object,
                                        **boolean** update,
                                        `java.util.Map\<io.realm.RealmModel, io.realm.internal.RealmObjectProxy> <https://docs.oracle.com/javase/7/docs/api/java/util/Map.html>`__  cache,
                                        `java.util.Set\<io.realm.ImportFlag> <https://docs.oracle.com/javase/7/docs/api/java/util/Set.html>`__  flags)
       
       Copies an unmanaged :ref:`RealmObject <io_realm_RealmObject>`  or a RealmObject from another Realm to this Realm.
       
       
       
       
       
   
   * - 
       public abstract :ref:`ColumnInfo <io_realm_internal_ColumnInfo>` 
     - 
       :ref:`createColumnInfo <io_realm_internal_RealmProxyMediator_createColumnInfo_Class___extends_RealmModel___OsSchemaInfo_>`  (`java.lang.Class\<? extends io.realm.RealmModel> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  clazz,
                                                     :ref:`OsSchemaInfo <io_realm_internal_OsSchemaInfo>`  osSchemaInfo)
       
       Creates :ref:`ColumnInfo <io_realm_internal_ColumnInfo>`  for the given RealmObject class.
       
       
       
       
       
   
   * - 
       public abstract **E (?)**
     - 
       :ref:`createDetachedCopy <io_realm_internal_RealmProxyMediator_createDetachedCopy_E__int__Map_RealmModel__RealmObjectProxy_CacheData_RealmModel___>`  <**E (?)** >(**E (?)** realmObject,
                                              **int** maxDepth,
                                              `java.util.Map\<io.realm.RealmModel, io.realm.internal.RealmObjectProxy.CacheData\<io.realm.RealmModel>> <https://docs.oracle.com/javase/7/docs/api/java/util/Map.html>`__  cache)
       
       Creates a deep unmanaged copy of a RealmObject.
       
       
       
   
   * - 
       public abstract **E (?)**
     - 
       :ref:`createOrUpdateUsingJsonObject <io_realm_internal_RealmProxyMediator_createOrUpdateUsingJsonObject_Class_E___Realm__JSONObject__boolean_>`  <**E (?)** >(`java.lang.Class\<E> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  clazz,
                                                         :ref:`Realm <io_realm_Realm>`  realm,
                                                         **JSONObject (?)** json,
                                                         **boolean** update)
       
       Creates or updates a :ref:`RealmObject <io_realm_RealmObject>`  using the provided JSON data.
       
       
       
       
       
   
   * - 
       public abstract **E (?)**
     - 
       :ref:`createUsingJsonStream <io_realm_internal_RealmProxyMediator_createUsingJsonStream_Class_E___Realm__JsonReader_>`  <**E (?)** >(`java.lang.Class\<E> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  clazz,
                                                 :ref:`Realm <io_realm_Realm>`  realm,
                                                 **JsonReader (?)** reader)
       
       Creates new :ref:`RealmObject <io_realm_RealmObject>`  based on a JSON input stream.
       
       
       
       
       
   
   * - 
       public **boolean**
     - 
       :ref:`equals <io_realm_internal_RealmProxyMediator_equals_Object_>`  (`Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  o)
       
       
       
       
       
   
   * - 
       public final `Class <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ 
     - 
       :ref:`getClazz <io_realm_internal_RealmProxyMediator_getClazz_String_>`  <**T (?)** >(`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  className)
       
       Returns a reference of the class that represents the specified class name.
       
       
       
   
   * - 
       protected abstract `Class <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ 
     - 
       :ref:`getClazzImpl <io_realm_internal_RealmProxyMediator_getClazzImpl_String_>`  <**T (?)** >(`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  className)
       
       Returns a reference of the class that represents the specified class name.
       
       
       
   
   * - 
       public abstract `Map <https://docs.oracle.com/javase/7/docs/api/java/util/Map.html>`__ 
     - 
       :ref:`getExpectedObjectSchemaInfoMap <io_realm_internal_RealmProxyMediator_getExpectedObjectSchemaInfoMap__>`  ()
       
       Returns a map of model classes to their schema information which are defined in this mediator.
       
       
       
   
   * - 
       protected static :ref:`RealmException <io_realm_exceptions_RealmException>` 
     - 
       :ref:`getMissingProxyClassException <io_realm_internal_RealmProxyMediator_getMissingProxyClassException_String_>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  className)
       
       
       
       
       
   
   * - 
       protected static :ref:`RealmException <io_realm_exceptions_RealmException>` 
     - 
       :ref:`getMissingProxyClassException <io_realm_internal_RealmProxyMediator_getMissingProxyClassException_Class___extends_RealmModel__>`  (`java.lang.Class\<? extends io.realm.RealmModel> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  clazz)
       
       
       
       
       
   
   * - 
       public abstract `Set <https://docs.oracle.com/javase/7/docs/api/java/util/Set.html>`__ 
     - 
       :ref:`getModelClasses <io_realm_internal_RealmProxyMediator_getModelClasses__>`  ()
       
       Returns the list of RealmObject classes that can be saved in this Realm.
       
       
       
   
   * - 
       protected static `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__ 
     - 
       :ref:`getNotEmbeddedClassException <io_realm_internal_RealmProxyMediator_getNotEmbeddedClassException_String_>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  className)
       
       
       
       
       
   
   * - 
       public final `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ 
     - 
       :ref:`getSimpleClassName <io_realm_internal_RealmProxyMediator_getSimpleClassName_Class___extends_RealmModel__>`  (`java.lang.Class\<? extends io.realm.RealmModel> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  clazz)
       
       Returns the name that Realm should use for all its internal tables.
       
       
       
   
   * - 
       protected abstract `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ 
     - 
       :ref:`getSimpleClassNameImpl <io_realm_internal_RealmProxyMediator_getSimpleClassNameImpl_Class___extends_RealmModel__>`  (`java.lang.Class\<? extends io.realm.RealmModel> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  clazz)
       
       Returns the name that Realm should use for all its internal tables.
       
       
       
   
   * - 
       public **boolean**
     - 
       :ref:`hasPrimaryKey <io_realm_internal_RealmProxyMediator_hasPrimaryKey_Class___extends_RealmModel__>`  (`java.lang.Class\<? extends io.realm.RealmModel> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  clazz)
       
       Returns ``true``  true if the provided class reference has a primary key defined.
       
       
       
       
       
   
   * - 
       protected abstract **boolean**
     - 
       :ref:`hasPrimaryKeyImpl <io_realm_internal_RealmProxyMediator_hasPrimaryKeyImpl_Class___extends_RealmModel__>`  (`java.lang.Class\<? extends io.realm.RealmModel> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  clazz)
       
       Returns ``true``  if the provided class reference has a primary key defined.
       
       
       
       
       
   
   * - 
       public **int**
     - 
       :ref:`hashCode <io_realm_internal_RealmProxyMediator_hashCode__>`  ()
       
       
       
       
       
   
   * - 
       public abstract **void**
     - 
       :ref:`insert <io_realm_internal_RealmProxyMediator_insert_Realm__Collection___extends_RealmModel__>`  (:ref:`Realm <io_realm_Realm>`  realm,
                                     `java.util.Collection\<? extends io.realm.RealmModel> <https://docs.oracle.com/javase/7/docs/api/java/util/Collection.html>`__  objects)
       
       Inserts a RealmObject.
       
       
       
   
   * - 
       public abstract **long**
     - 
       :ref:`insert <io_realm_internal_RealmProxyMediator_insert_Realm__RealmModel__Map_RealmModel__Long__>`  (:ref:`Realm <io_realm_Realm>`  realm,
                                     :ref:`RealmModel <io_realm_RealmModel>`  object,
                                     `java.util.Map\<io.realm.RealmModel, java.lang.Long> <https://docs.oracle.com/javase/7/docs/api/java/util/Map.html>`__  cache)
       
       Inserts an unmanaged RealmObject.
       
       
       
   
   * - 
       public abstract **void**
     - 
       :ref:`insertOrUpdate <io_realm_internal_RealmProxyMediator_insertOrUpdate_Realm__Collection___extends_RealmModel__>`  (:ref:`Realm <io_realm_Realm>`  realm,
                                             `java.util.Collection\<? extends io.realm.RealmModel> <https://docs.oracle.com/javase/7/docs/api/java/util/Collection.html>`__  objects)
       
       Inserts or updates a RealmObject.
       
       
       
   
   * - 
       public abstract **long**
     - 
       :ref:`insertOrUpdate <io_realm_internal_RealmProxyMediator_insertOrUpdate_Realm__RealmModel__Map_RealmModel__Long__>`  (:ref:`Realm <io_realm_Realm>`  realm,
                                             :ref:`RealmModel <io_realm_RealmModel>`  object,
                                             `java.util.Map\<io.realm.RealmModel, java.lang.Long> <https://docs.oracle.com/javase/7/docs/api/java/util/Map.html>`__  cache)
       
       Inserts or updates a RealmObject.
       
       
       
   
   * - 
       public abstract **boolean**
     - 
       :ref:`isEmbedded <io_realm_internal_RealmProxyMediator_isEmbedded_Class_E__>`  <**E (?)** >(`java.lang.Class\<E> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  clazz)
       
       Returns whether or not this class is considered "embedded".
       
       
       
   
   * - 
       public abstract **E (?)**
     - 
       :ref:`newInstance <io_realm_internal_RealmProxyMediator_newInstance_Class_E___Object__Row__ColumnInfo__boolean__List_String__>`  <**E (?)** >(`java.lang.Class\<E> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  clazz,
                                       `Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  baseRealm,
                                       :ref:`Row <io_realm_internal_Row>`  row,
                                       :ref:`ColumnInfo <io_realm_internal_ColumnInfo>`  columnInfo,
                                       **boolean** acceptDefaultValue,
                                       `java.util.List\<java.lang.String> <https://docs.oracle.com/javase/7/docs/api/java/util/List.html>`__  excludeFields)
       
       Creates a new instance of an :ref:`RealmObjectProxy <io_realm_internal_RealmObjectProxy>`  for the given RealmObject class.
       
       
       
       
       
   
   * - 
       public **boolean**
     - 
       :ref:`transformerApplied <io_realm_internal_RealmProxyMediator_transformerApplied__>`  ()
       
       Returns whether Realm transformer has been applied or not.
       
       
       
   
   * - 
       public abstract **void**
     - 
       :ref:`updateEmbeddedObject <io_realm_internal_RealmProxyMediator_updateEmbeddedObject_Realm__E__E__Map_RealmModel__RealmObjectProxy___Set_ImportFlag__>`  <**E (?)** >(:ref:`Realm <io_realm_Realm>`  realm,
                                                   **E (?)** unmanagedObject,
                                                   **E (?)** managedObject,
                                                   `java.util.Map\<io.realm.RealmModel, io.realm.internal.RealmObjectProxy> <https://docs.oracle.com/javase/7/docs/api/java/util/Map.html>`__  cache,
                                                   `java.util.Set\<io.realm.ImportFlag> <https://docs.oracle.com/javase/7/docs/api/java/util/Set.html>`__  flags)
       
       Updates an embedded object with the values from an unmanaged object.
       
       
       
   
   


Inherited Methods
=================



- Methods inherited from interface `java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ : 
   
   ``getClass`` , ``hashCode`` , ``equals`` , ``clone`` , ``toString`` , ``notify`` , ``notifyAll`` , ``wait`` , ``wait`` , ``wait`` , ``finalize`` 
   
   




Method Detail
=============

.. _checkClass:

.. _checkClass__:

.. _RealmProxyMediator_checkClass:

.. _RealmProxyMediator_checkClass__:



checkClass
----------

.. _io_realm_internal_RealmProxyMediator_checkClass_Class___extends_RealmModel__:

.. _io_realm_internal_RealmProxyMediator_checkClass_Class_:

.. list-table::
   :header-rows: 1
   
   * -    protected static **void** checkClass (`java.lang.Class\<? extends io.realm.RealmModel> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  clazz)
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
   
   
.. _checkClassName:

.. _checkClassName__:

.. _RealmProxyMediator_checkClassName:

.. _RealmProxyMediator_checkClassName__:



checkClassName
--------------

.. _io_realm_internal_RealmProxyMediator_checkClassName_String_:

.. list-table::
   :header-rows: 1
   
   * -    protected static **void** checkClassName (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  className)
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
   
   
.. _copyOrUpdate:

.. _copyOrUpdate__:

.. _RealmProxyMediator_copyOrUpdate:

.. _RealmProxyMediator_copyOrUpdate__:



copyOrUpdate
------------

.. _io_realm_internal_RealmProxyMediator_copyOrUpdate_Realm__E__boolean__Map_RealmModel__RealmObjectProxy___Set_ImportFlag__:

.. _io_realm_internal_RealmProxyMediator_copyOrUpdate_Realm_E_boolean_Map_Set_:

.. _io_realm_internal_RealmProxyMediator_copyOrUpdate_Realm__RealmModel__boolean__Map__Set_:

.. list-table::
   :header-rows: 1
   
   * -    public abstract **E (?)** copyOrUpdate <**E (?)** >(:ref:`Realm <io_realm_Realm>`  realm,
                                        **E (?)** object,
                                        **boolean** update,
                                        `java.util.Map\<io.realm.RealmModel, io.realm.internal.RealmObjectProxy> <https://docs.oracle.com/javase/7/docs/api/java/util/Map.html>`__  cache,
                                        `java.util.Set\<io.realm.ImportFlag> <https://docs.oracle.com/javase/7/docs/api/java/util/Set.html>`__  flags)
   
   * - Copies an unmanaged :ref:`RealmObject <io_realm_RealmObject>`  or a RealmObject from another Realm to this Realm. After being copied any changes to the original object will not be persisted.
       
       
       
       
       
       
       **Parameters**
       
       - ``realm`` - the reference to the :ref:`Realm <io_realm_Realm>`  where the object will be copied.
          
          
          
          
          
       - ``object`` - the object to copy properties from.
          
          
          
       - ``update`` - ``true``  if object has a primary key and should try to update already existing data, ``false``  otherwise.
          
          
          
          
          
       - ``cache`` - the cache for mapping between unmanaged objects and their :ref:`RealmObjectProxy <io_realm_internal_RealmObjectProxy>`  representation.
          
          
          
          
          
       - ``flags`` - any special flags controlling the behaviour of the import.
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _createColumnInfo:

.. _createColumnInfo__:

.. _RealmProxyMediator_createColumnInfo:

.. _RealmProxyMediator_createColumnInfo__:



createColumnInfo
----------------

.. _io_realm_internal_RealmProxyMediator_createColumnInfo_Class___extends_RealmModel___OsSchemaInfo_:

.. _io_realm_internal_RealmProxyMediator_createColumnInfo_Class_OsSchemaInfo_:

.. _io_realm_internal_RealmProxyMediator_createColumnInfo_Class__OsSchemaInfo_:

.. list-table::
   :header-rows: 1
   
   * -    public abstract :ref:`ColumnInfo <io_realm_internal_ColumnInfo>`  createColumnInfo (`java.lang.Class\<? extends io.realm.RealmModel> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  clazz,
                                                     :ref:`OsSchemaInfo <io_realm_internal_OsSchemaInfo>`  osSchemaInfo)
   
   * - Creates :ref:`ColumnInfo <io_realm_internal_ColumnInfo>`  for the given RealmObject class.
       
       
       
       
       
       
       **Parameters**
       
       - ``clazz`` - which :ref:`RealmObject <io_realm_RealmObject>`  model class to create the column info of.
          
          
          
          
          
       - ``osSchemaInfo`` - the :ref:`OsSchemaInfo <io_realm_internal_OsSchemaInfo>`  for the corresponding Realm instance.
          
          
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _createDetachedCopy:

.. _createDetachedCopy__:

.. _RealmProxyMediator_createDetachedCopy:

.. _RealmProxyMediator_createDetachedCopy__:



createDetachedCopy
------------------

.. _io_realm_internal_RealmProxyMediator_createDetachedCopy_E__int__Map_RealmModel__RealmObjectProxy_CacheData_RealmModel___:

.. _io_realm_internal_RealmProxyMediator_createDetachedCopy_E_int_Map_:

.. _io_realm_internal_RealmProxyMediator_createDetachedCopy_RealmModel__int__Map_:

.. list-table::
   :header-rows: 1
   
   * -    public abstract **E (?)** createDetachedCopy <**E (?)** >(**E (?)** realmObject,
                                              **int** maxDepth,
                                              `java.util.Map\<io.realm.RealmModel, io.realm.internal.RealmObjectProxy.CacheData\<io.realm.RealmModel>> <https://docs.oracle.com/javase/7/docs/api/java/util/Map.html>`__  cache)
   
   * - Creates a deep unmanaged copy of a RealmObject. This is a deep copy so all links will be copied as well. The depth can be restricted to a maximum depth after which all links will be turned into null values instead.
       
       
       
       
       **Parameters**
       
       - ``realmObject`` - RealmObject to copy. It must be a valid object.
          
          
          
       - ``maxDepth`` - restrict the depth of the copy to this level. The root object is depth ``0`` .
          
          
          
          
          
       - ``cache`` - cache used to make sure unmanaged objects are reused correctly.
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _createOrUpdateUsingJsonObject:

.. _createOrUpdateUsingJsonObject__:

.. _RealmProxyMediator_createOrUpdateUsingJsonObject:

.. _RealmProxyMediator_createOrUpdateUsingJsonObject__:



createOrUpdateUsingJsonObject
-----------------------------

.. _io_realm_internal_RealmProxyMediator_createOrUpdateUsingJsonObject_Class_E___Realm__JSONObject__boolean_:

.. _io_realm_internal_RealmProxyMediator_createOrUpdateUsingJsonObject_Class_Realm_JSONObject_boolean_:

.. _io_realm_internal_RealmProxyMediator_createOrUpdateUsingJsonObject_Class__Realm__org_json_JSONObject__boolean_:

.. list-table::
   :header-rows: 1
   
   * -    public abstract **E (?)** createOrUpdateUsingJsonObject <**E (?)** >(`java.lang.Class\<E> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  clazz,
                                                         :ref:`Realm <io_realm_Realm>`  realm,
                                                         **JSONObject (?)** json,
                                                         **boolean** update)
   
   * - Creates or updates a :ref:`RealmObject <io_realm_RealmObject>`  using the provided JSON data.
       
       
       
       
       
       
       **Parameters**
       
       - ``clazz`` - the type of :ref:`RealmObject <io_realm_RealmObject>` 
          
          
          
          
          
       - ``realm`` - the reference to :ref:`Realm <io_realm_Realm>`  where to create the object.
          
          
          
          
          
       - ``json`` - the JSON data
          
          
          
       - ``update`` - ``true``  if Realm should try to update a existing object. This requires that the RealmObject class has a @PrimaryKey.
          
          
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - **JSONException (?)** - if the JSON mapping doesn't match the expected class.
          
          
          
       
       
       
       
       
   
   
.. _createUsingJsonStream:

.. _createUsingJsonStream__:

.. _RealmProxyMediator_createUsingJsonStream:

.. _RealmProxyMediator_createUsingJsonStream__:



createUsingJsonStream
---------------------

.. _io_realm_internal_RealmProxyMediator_createUsingJsonStream_Class_E___Realm__JsonReader_:

.. _io_realm_internal_RealmProxyMediator_createUsingJsonStream_Class_Realm_JsonReader_:

.. _io_realm_internal_RealmProxyMediator_createUsingJsonStream_Class__Realm__JsonReader_:

.. list-table::
   :header-rows: 1
   
   * -    public abstract **E (?)** createUsingJsonStream <**E (?)** >(`java.lang.Class\<E> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  clazz,
                                                 :ref:`Realm <io_realm_Realm>`  realm,
                                                 **JsonReader (?)** reader)
   
   * - Creates new :ref:`RealmObject <io_realm_RealmObject>`  based on a JSON input stream.
       
       
       
       
       
       
       **Parameters**
       
       - ``clazz`` - the type of :ref:`RealmObject <io_realm_RealmObject>` 
          
          
          
          
          
       - ``realm`` - the reference to Realm where to create the object.
          
          
          
       - ``reader`` - the reference to the InputStream containing the JSON data.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - :ref:`IOException <io_realm_internal_IOException>`  - if an error occurs with the input stream.
          
          
          
       
       
       
       
       
   
   
.. _equals:

.. _equals__:

.. _RealmProxyMediator_equals:

.. _RealmProxyMediator_equals__:



equals
------

.. _io_realm_internal_RealmProxyMediator_equals_Object_:

.. list-table::
   :header-rows: 1
   
   * -    public **boolean** equals (`Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  o)
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
   
   
.. _getClazz:

.. _getClazz__:

.. _RealmProxyMediator_getClazz:

.. _RealmProxyMediator_getClazz__:



getClazz
--------

.. _io_realm_internal_RealmProxyMediator_getClazz_String_:

.. list-table::
   :header-rows: 1
   
   * -    public final `Class <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  getClazz <**T (?)** >(`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  className)
   
   * - Returns a reference of the class that represents the specified class name. The returning class reference would be a realization of :ref:`RealmModel <io_realm_RealmModel>` .
       
       
       
       
       
       
       **Parameters**
       
       - ``className`` - the class name.
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _getClazzImpl:

.. _getClazzImpl__:

.. _RealmProxyMediator_getClazzImpl:

.. _RealmProxyMediator_getClazzImpl__:



getClazzImpl
------------

.. _io_realm_internal_RealmProxyMediator_getClazzImpl_String_:

.. list-table::
   :header-rows: 1
   
   * -    protected abstract `Class <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  getClazzImpl <**T (?)** >(`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  className)
   
   * - Returns a reference of the class that represents the specified class name. The returning class reference would be a realization of :ref:`RealmModel <io_realm_RealmModel>` .
       
       
       
       
       
       
       **Parameters**
       
       - ``className`` - the class name.
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _getExpectedObjectSchemaInfoMap:

.. _getExpectedObjectSchemaInfoMap__:

.. _RealmProxyMediator_getExpectedObjectSchemaInfoMap:

.. _RealmProxyMediator_getExpectedObjectSchemaInfoMap__:

.. _io_realm_internal_RealmProxyMediator_getExpectedObjectSchemaInfoMap:

.. _io_realm_internal_RealmProxyMediator_getExpectedObjectSchemaInfoMap__:



getExpectedObjectSchemaInfoMap
------------------------------

.. _io_realm_internal_RealmProxyMediator_getExpectedObjectSchemaInfoMap__:

.. list-table::
   :header-rows: 1
   
   * -    public abstract `Map <https://docs.oracle.com/javase/7/docs/api/java/util/Map.html>`__  getExpectedObjectSchemaInfoMap ()
   
   * - Returns a map of model classes to their schema information which are defined in this mediator. Classes which have same class name but in different packages should have different names in the ``OsObjectSchemaInfo`` .
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   
.. _getMissingProxyClassException:

.. _getMissingProxyClassException__:

.. _RealmProxyMediator_getMissingProxyClassException:

.. _RealmProxyMediator_getMissingProxyClassException__:



getMissingProxyClassException
-----------------------------

.. _io_realm_internal_RealmProxyMediator_getMissingProxyClassException_String_:

.. list-table::
   :header-rows: 1
   
   * -    protected static :ref:`RealmException <io_realm_exceptions_RealmException>`  getMissingProxyClassException (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  className)
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_internal_RealmProxyMediator_getMissingProxyClassException_Class___extends_RealmModel__:

.. _io_realm_internal_RealmProxyMediator_getMissingProxyClassException_Class_:

.. list-table::
   :header-rows: 1
   
   * -    protected static :ref:`RealmException <io_realm_exceptions_RealmException>`  getMissingProxyClassException (`java.lang.Class\<? extends io.realm.RealmModel> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  clazz)
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
   
   
.. _getModelClasses:

.. _getModelClasses__:

.. _RealmProxyMediator_getModelClasses:

.. _RealmProxyMediator_getModelClasses__:

.. _io_realm_internal_RealmProxyMediator_getModelClasses:

.. _io_realm_internal_RealmProxyMediator_getModelClasses__:



getModelClasses
---------------

.. _io_realm_internal_RealmProxyMediator_getModelClasses__:

.. list-table::
   :header-rows: 1
   
   * -    public abstract `Set <https://docs.oracle.com/javase/7/docs/api/java/util/Set.html>`__  getModelClasses ()
   
   * - Returns the list of RealmObject classes that can be saved in this Realm.
       
       
       
       
       
       
       
       
       
       
       
   
   
.. _getNotEmbeddedClassException:

.. _getNotEmbeddedClassException__:

.. _RealmProxyMediator_getNotEmbeddedClassException:

.. _RealmProxyMediator_getNotEmbeddedClassException__:



getNotEmbeddedClassException
----------------------------

.. _io_realm_internal_RealmProxyMediator_getNotEmbeddedClassException_String_:

.. list-table::
   :header-rows: 1
   
   * -    protected static `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  getNotEmbeddedClassException (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  className)
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
   
   
.. _getSimpleClassName:

.. _getSimpleClassName__:

.. _RealmProxyMediator_getSimpleClassName:

.. _RealmProxyMediator_getSimpleClassName__:



getSimpleClassName
------------------

.. _io_realm_internal_RealmProxyMediator_getSimpleClassName_Class___extends_RealmModel__:

.. _io_realm_internal_RealmProxyMediator_getSimpleClassName_Class_:

.. list-table::
   :header-rows: 1
   
   * -    public final `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  getSimpleClassName (`java.lang.Class\<? extends io.realm.RealmModel> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  clazz)
   
   * - Returns the name that Realm should use for all its internal tables. This is the un-obfuscated simple name of the class.
       
       
       
       
       **Parameters**
       
       - ``clazz`` - the :ref:`RealmModel <io_realm_RealmModel>`  or the Realm object proxy class reference.
          
          
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _getSimpleClassNameImpl:

.. _getSimpleClassNameImpl__:

.. _RealmProxyMediator_getSimpleClassNameImpl:

.. _RealmProxyMediator_getSimpleClassNameImpl__:



getSimpleClassNameImpl
----------------------

.. _io_realm_internal_RealmProxyMediator_getSimpleClassNameImpl_Class___extends_RealmModel__:

.. _io_realm_internal_RealmProxyMediator_getSimpleClassNameImpl_Class_:

.. list-table::
   :header-rows: 1
   
   * -    protected abstract `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  getSimpleClassNameImpl (`java.lang.Class\<? extends io.realm.RealmModel> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  clazz)
   
   * - Returns the name that Realm should use for all its internal tables. This is the un-obfuscated simple name of the class.
       
       
       
       
       **Parameters**
       
       - ``clazz`` - the :ref:`RealmModel <io_realm_RealmModel>`  class reference.
          
          
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _hasPrimaryKey:

.. _hasPrimaryKey__:

.. _RealmProxyMediator_hasPrimaryKey:

.. _RealmProxyMediator_hasPrimaryKey__:



hasPrimaryKey
-------------

.. _io_realm_internal_RealmProxyMediator_hasPrimaryKey_Class___extends_RealmModel__:

.. _io_realm_internal_RealmProxyMediator_hasPrimaryKey_Class_:

.. list-table::
   :header-rows: 1
   
   * -    public **boolean** hasPrimaryKey (`java.lang.Class\<? extends io.realm.RealmModel> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  clazz)
   
   * - Returns ``true``  true if the provided class reference has a primary key defined.
       
       
       
       
       
       
       **Parameters**
       
       - ``clazz`` - the :ref:`RealmModel <io_realm_RealmModel>`  or the Realm object proxy class reference.
          
          
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _hasPrimaryKeyImpl:

.. _hasPrimaryKeyImpl__:

.. _RealmProxyMediator_hasPrimaryKeyImpl:

.. _RealmProxyMediator_hasPrimaryKeyImpl__:



hasPrimaryKeyImpl
-----------------

.. _io_realm_internal_RealmProxyMediator_hasPrimaryKeyImpl_Class___extends_RealmModel__:

.. _io_realm_internal_RealmProxyMediator_hasPrimaryKeyImpl_Class_:

.. list-table::
   :header-rows: 1
   
   * -    protected abstract **boolean** hasPrimaryKeyImpl (`java.lang.Class\<? extends io.realm.RealmModel> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  clazz)
   
   * - Returns ``true``  if the provided class reference has a primary key defined.
       
       
       
       
       
       
       **Parameters**
       
       - ``clazz`` - the :ref:`RealmModel <io_realm_RealmModel>`  or the Realm object proxy class reference.
          
          
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _hashCode:

.. _hashCode__:

.. _RealmProxyMediator_hashCode:

.. _RealmProxyMediator_hashCode__:

.. _io_realm_internal_RealmProxyMediator_hashCode:

.. _io_realm_internal_RealmProxyMediator_hashCode__:



hashCode
--------

.. _io_realm_internal_RealmProxyMediator_hashCode__:

.. list-table::
   :header-rows: 1
   
   * -    public **int** hashCode ()
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
   
   
.. _insert:

.. _insert__:

.. _RealmProxyMediator_insert:

.. _RealmProxyMediator_insert__:



insert
------

.. _io_realm_internal_RealmProxyMediator_insert_Realm__Collection___extends_RealmModel__:

.. _io_realm_internal_RealmProxyMediator_insert_Realm_Collection_:

.. _io_realm_internal_RealmProxyMediator_insert_Realm__Collection_:

.. list-table::
   :header-rows: 1
   
   * -    public abstract **void** insert (:ref:`Realm <io_realm_Realm>`  realm,
                                     `java.util.Collection\<? extends io.realm.RealmModel> <https://docs.oracle.com/javase/7/docs/api/java/util/Collection.html>`__  objects)
   
   * - Inserts a RealmObject. This is generally faster than :ref:`copyOrUpdate(Realm, RealmModel, boolean, Map, Set) <io_realm_internal_RealmProxyMediator_copyOrUpdate_Realm__RealmModel__boolean__Map__Set_>`  since it doesn't return the inserted elements, and performs minimum allocations and checks. After being inserted any changes to the original objects will not be persisted.
       
       
       
       
       
       
       **Parameters**
       
       - ``realm`` - reference to the :ref:`Realm <io_realm_Realm>`  where the objects will be inserted.
          
          
          
          
          
       - ``objects`` - Collection of :ref:`RealmObject <io_realm_RealmObject>`  to insert or update. This must not be empty.
          
          
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_internal_RealmProxyMediator_insert_Realm__RealmModel__Map_RealmModel__Long__:

.. _io_realm_internal_RealmProxyMediator_insert_Realm_RealmModel_Map_:

.. _io_realm_internal_RealmProxyMediator_insert_Realm__RealmModel__Map_:

.. list-table::
   :header-rows: 1
   
   * -    public abstract **long** insert (:ref:`Realm <io_realm_Realm>`  realm,
                                     :ref:`RealmModel <io_realm_RealmModel>`  object,
                                     `java.util.Map\<io.realm.RealmModel, java.lang.Long> <https://docs.oracle.com/javase/7/docs/api/java/util/Map.html>`__  cache)
   
   * - Inserts an unmanaged RealmObject. This is generally faster than :ref:`copyOrUpdate(Realm, RealmModel, boolean, Map, Set) <io_realm_internal_RealmProxyMediator_copyOrUpdate_Realm__RealmModel__boolean__Map__Set_>`  since it doesn't return the inserted elements, and performs minimum allocations and checks. After being inserted any changes to the original object will not be persisted.
       
       
       
       
       
       
       **Parameters**
       
       - ``realm`` - reference to the :ref:`Realm <io_realm_Realm>`  where the object will be inserted.
          
          
          
          
          
       - ``object`` - :ref:`RealmObject <io_realm_RealmObject>`  to insert.
          
          
          
          
          
       - ``cache`` - the cache for mapping between unmanaged objects and their table row index for eventual reuse.
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _insertOrUpdate:

.. _insertOrUpdate__:

.. _RealmProxyMediator_insertOrUpdate:

.. _RealmProxyMediator_insertOrUpdate__:



insertOrUpdate
--------------

.. _io_realm_internal_RealmProxyMediator_insertOrUpdate_Realm__Collection___extends_RealmModel__:

.. _io_realm_internal_RealmProxyMediator_insertOrUpdate_Realm_Collection_:

.. _io_realm_internal_RealmProxyMediator_insertOrUpdate_Realm__Collection_:

.. list-table::
   :header-rows: 1
   
   * -    public abstract **void** insertOrUpdate (:ref:`Realm <io_realm_Realm>`  realm,
                                             `java.util.Collection\<? extends io.realm.RealmModel> <https://docs.oracle.com/javase/7/docs/api/java/util/Collection.html>`__  objects)
   
   * - Inserts or updates a RealmObject. This is generally faster than :ref:`copyOrUpdate(Realm, RealmModel, boolean, Map, Set) <io_realm_internal_RealmProxyMediator_copyOrUpdate_Realm__RealmModel__boolean__Map__Set_>`  since it doesn't return the inserted elements, and performs minimum allocations and checks. After being inserted any changes to the original objects will not be persisted.
       
       
       
       
       
       
       **Parameters**
       
       - ``realm`` - reference to the :ref:`Realm <io_realm_Realm>`  where the objects will be inserted.
          
          
          
          
          
       - ``objects`` - Collection of :ref:`RealmObject <io_realm_RealmObject>`  to insert or update. This must not be empty.
          
          
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_internal_RealmProxyMediator_insertOrUpdate_Realm__RealmModel__Map_RealmModel__Long__:

.. _io_realm_internal_RealmProxyMediator_insertOrUpdate_Realm_RealmModel_Map_:

.. _io_realm_internal_RealmProxyMediator_insertOrUpdate_Realm__RealmModel__Map_:

.. list-table::
   :header-rows: 1
   
   * -    public abstract **long** insertOrUpdate (:ref:`Realm <io_realm_Realm>`  realm,
                                             :ref:`RealmModel <io_realm_RealmModel>`  object,
                                             `java.util.Map\<io.realm.RealmModel, java.lang.Long> <https://docs.oracle.com/javase/7/docs/api/java/util/Map.html>`__  cache)
   
   * - Inserts or updates a RealmObject. This is generally faster than :ref:`copyOrUpdate(Realm, RealmModel, boolean, Map, Set) <io_realm_internal_RealmProxyMediator_copyOrUpdate_Realm__RealmModel__boolean__Map__Set_>`  since it doesn't return the inserted elements, and performs minimum allocations and checks. After being inserted any changes to the original object will not be persisted.
       
       
       
       
       
       
       **Parameters**
       
       - ``realm`` - reference to the :ref:`Realm <io_realm_Realm>`  where the objects will be inserted.
          
          
          
          
          
       - ``object`` - :ref:`RealmObject <io_realm_RealmObject>`  to insert.
          
          
          
          
          
       - ``cache`` - the cache for mapping between unmanaged objects and their table row index for eventual reuse.
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _isEmbedded:

.. _isEmbedded__:

.. _RealmProxyMediator_isEmbedded:

.. _RealmProxyMediator_isEmbedded__:



isEmbedded
----------

.. _io_realm_internal_RealmProxyMediator_isEmbedded_Class_E__:

.. _io_realm_internal_RealmProxyMediator_isEmbedded_Class_:

.. list-table::
   :header-rows: 1
   
   * -    public abstract **boolean** isEmbedded <**E (?)** >(`java.lang.Class\<E> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  clazz)
   
   * - Returns whether or not this class is considered "embedded".
       
       
       
       
       
       
       
       
       
       
       
   
   
.. _newInstance:

.. _newInstance__:

.. _RealmProxyMediator_newInstance:

.. _RealmProxyMediator_newInstance__:



newInstance
-----------

.. _io_realm_internal_RealmProxyMediator_newInstance_Class_E___Object__Row__ColumnInfo__boolean__List_String__:

.. _io_realm_internal_RealmProxyMediator_newInstance_Class_Object_Row_ColumnInfo_boolean_List_:

.. _io_realm_internal_RealmProxyMediator_newInstance_Class__Object__Row__ColumnInfo__boolean__List_:

.. list-table::
   :header-rows: 1
   
   * -    public abstract **E (?)** newInstance <**E (?)** >(`java.lang.Class\<E> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  clazz,
                                       `Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  baseRealm,
                                       :ref:`Row <io_realm_internal_Row>`  row,
                                       :ref:`ColumnInfo <io_realm_internal_ColumnInfo>`  columnInfo,
                                       **boolean** acceptDefaultValue,
                                       `java.util.List\<java.lang.String> <https://docs.oracle.com/javase/7/docs/api/java/util/List.html>`__  excludeFields)
   
   * - Creates a new instance of an :ref:`RealmObjectProxy <io_realm_internal_RealmObjectProxy>`  for the given RealmObject class.
       
       
       
       
       
       
       **Parameters**
       
       - ``clazz`` - the :ref:`RealmObject <io_realm_RealmObject>`  to create :ref:`RealmObjectProxy <io_realm_internal_RealmObjectProxy>`  for.
          
          
          
          
          
       - ``acceptDefaultValue`` - ``true``  to accept the values set in the constructor, ``false``  otherwise.
          
          
          
          
          
       - ``excludeFields`` - the column names whose default value will be ignored if the ``acceptDefaultValue``  is ``true`` . Only :ref:`io.realm.RealmModel <io_realm_RealmModel>`  and :ref:`io.realm.RealmList <io_realm_RealmList>`  column will respect this. No effects if the ``acceptDefaultValue``  is ``false`` .
          
          
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _transformerApplied:

.. _transformerApplied__:

.. _RealmProxyMediator_transformerApplied:

.. _RealmProxyMediator_transformerApplied__:

.. _io_realm_internal_RealmProxyMediator_transformerApplied:

.. _io_realm_internal_RealmProxyMediator_transformerApplied__:



transformerApplied
------------------

.. _io_realm_internal_RealmProxyMediator_transformerApplied__:

.. list-table::
   :header-rows: 1
   
   * -    public **boolean** transformerApplied ()
   
   * - Returns whether Realm transformer has been applied or not. Subclasses of this class are created by the annotation processor and the Realm transformer will add an override of this method that always return ``true``  if the transform was successful.
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   
.. _updateEmbeddedObject:

.. _updateEmbeddedObject__:

.. _RealmProxyMediator_updateEmbeddedObject:

.. _RealmProxyMediator_updateEmbeddedObject__:



updateEmbeddedObject
--------------------

.. _io_realm_internal_RealmProxyMediator_updateEmbeddedObject_Realm__E__E__Map_RealmModel__RealmObjectProxy___Set_ImportFlag__:

.. _io_realm_internal_RealmProxyMediator_updateEmbeddedObject_Realm_E_E_Map_Set_:

.. _io_realm_internal_RealmProxyMediator_updateEmbeddedObject_Realm__RealmModel__RealmModel__Map__Set_:

.. list-table::
   :header-rows: 1
   
   * -    public abstract **void** updateEmbeddedObject <**E (?)** >(:ref:`Realm <io_realm_Realm>`  realm,
                                                   **E (?)** unmanagedObject,
                                                   **E (?)** managedObject,
                                                   `java.util.Map\<io.realm.RealmModel, io.realm.internal.RealmObjectProxy> <https://docs.oracle.com/javase/7/docs/api/java/util/Map.html>`__  cache,
                                                   `java.util.Set\<io.realm.ImportFlag> <https://docs.oracle.com/javase/7/docs/api/java/util/Set.html>`__  flags)
   
   * - Updates an embedded object with the values from an unmanaged object.
       
       
       
       
       **Parameters**
       
       - ``realm`` - the reference to the :ref:`Realm <io_realm_Realm>`  where the object will be copied.
          
          
          
          
          
       - ``unmanagedObject`` - the unmanaged objects whose values should be used to update the manged object
          
          
          
       - ``managedObject`` - the managed object that should be updated
          
          
          
       - ``cache`` - the cache for mapping between unmanaged objects and their :ref:`RealmObjectProxy <io_realm_internal_RealmObjectProxy>`  representation.
          
          
          
          
          
       - ``flags`` - any special flags controlling the behaviour of the import.
          
          
          
       
       
       
       
       
       
       
       
       
   
   

