
.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol



Class RealmResults
^^^^^^^^^^^^^^^^^^

.. _io_realm_RealmResults:



io.realm
========

`java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ 
 | 		`java.util.AbstractCollection <https://docs.oracle.com/javase/7/docs/api/java/util/AbstractCollection.html>`__ 
 | 					`java.util.AbstractList <https://docs.oracle.com/javase/7/docs/api/java/util/AbstractList.html>`__ 
 | 								**io.realm.OrderedRealmCollectionImpl (?)**

This class holds all the matches of a :ref:`RealmQuery <io_realm_RealmQuery>`  for a given Realm. The objects are not copied from the Realm to the RealmResults list, but are just referenced from the RealmResult instead. This saves memory and increases speed.

RealmResults are live views, which means that if it is on an **Looper (?)** thread, it will automatically update its query results after a transaction has been committed. If on a non-looper thread, **Realm.refresh() (?)** must be called to update the results.



Updates to RealmObjects from a RealmResults list must be done from within a transaction and the modified objects are persisted to the Realm file during the commit of the transaction.

A RealmResults object cannot be passed between different threads.

Notice that a RealmResults is never ``null``  not even in the case where it contains no objects. You should always use the **RealmResults.size() (?)** method to check if a RealmResults is empty or not.



If a RealmResults is built on RealmList through :ref:`RealmList.where() <io_realm_RealmList_where__>` , it will become empty when the source RealmList gets deleted.



:ref:`RealmResults <io_realm_RealmResults>`  can contain more elements than ``Integer.MAX_VALUE`` . In that case, you can access only first ``Integer.MAX_VALUE``  elements in it.






.. seealso::


   
   - :ref:`RealmQuery.findAll() <io_realm_RealmQuery_findAll__>` 
      
      
      
   - :ref:`Realm.executeTransaction(Realm.Transaction) <io_realm_Realm_executeTransaction_Realm_Transaction_>` 
      
      
      
   
   
   



Method Summary
==============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Method and Description
   
   * - 
       public **void**
     - 
       :ref:`addChangeListener <io_realm_RealmResults_addChangeListener_OrderedRealmCollectionChangeListener_RealmResults_E___>`  (:ref:`io.realm.OrderedRealmCollectionChangeListener\<io.realm.RealmResults\<E>> <io_realm_OrderedRealmCollectionChangeListener>`  listener)
       
       Adds a change listener to this :ref:`RealmResults <io_realm_RealmResults>` .
       
       
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`addChangeListener <io_realm_RealmResults_addChangeListener_RealmChangeListener_RealmResults_E___>`  (:ref:`io.realm.RealmChangeListener\<io.realm.RealmResults\<E>> <io_realm_RealmChangeListener>`  listener)
       
       Adds a change listener to this :ref:`RealmResults <io_realm_RealmResults>` .
       
       
       
       
       
   
   * - 
       public **<any> (?)**
     - 
       :ref:`asChangesetObservable <io_realm_RealmResults_asChangesetObservable__>`  ()
       
       Returns an Rx Observable that monitors changes to this RealmResults.
       
       
       
   
   * - 
       public **<any> (?)**
     - 
       :ref:`asFlowable <io_realm_RealmResults_asFlowable__>`  ()
       
       Returns an Rx Flowable that monitors changes to this RealmResults.
       
       
       
   
   * - 
       public `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ 
     - 
       :ref:`asJSON <io_realm_RealmResults_asJSON__>`  ()
       
       Returns a JSON representation of the matches of a :ref:`RealmQuery <io_realm_RealmQuery>` .
       
       
       
       
       
   
   * - 
       public :ref:`RealmResults <io_realm_RealmResults>` 
     - 
       :ref:`freeze <io_realm_RealmResults_freeze__>`  ()
       
       
       
       
       
       
       
   
   * - 
       public **boolean**
     - 
       :ref:`isFrozen <io_realm_RealmResults_isFrozen__>`  ()
       
       
       
       
       
       
       
   
   * - 
       public **boolean**
     - 
       :ref:`isLoaded <io_realm_RealmResults_isLoaded__>`  ()
       
       Returns ``false``  if the results are not yet loaded, ``true``  if they are loaded.
       
       
       
       
       
   
   * - 
       public **boolean**
     - 
       :ref:`load <io_realm_RealmResults_load__>`  ()
       
       Makes an asynchronous query blocking.
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`removeAllChangeListeners <io_realm_RealmResults_removeAllChangeListeners__>`  ()
       
       Removes all user-defined change listeners.
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`removeChangeListener <io_realm_RealmResults_removeChangeListener_OrderedRealmCollectionChangeListener_RealmResults_E___>`  (:ref:`io.realm.OrderedRealmCollectionChangeListener\<io.realm.RealmResults\<E>> <io_realm_OrderedRealmCollectionChangeListener>`  listener)
       
       Removes the specified change listener.
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`removeChangeListener <io_realm_RealmResults_removeChangeListener_RealmChangeListener_RealmResults_E___>`  (:ref:`io.realm.RealmChangeListener\<io.realm.RealmResults\<E>> <io_realm_RealmChangeListener>`  listener)
       
       Removes the specified change listener.
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`setBlob <io_realm_RealmResults_setBlob_String__byte[]_>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                             **byte[]** value)
       
       Sets the binary value of the given field in all of the objects in the collection.
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`setBoolean <io_realm_RealmResults_setBoolean_String__boolean_>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                                **boolean** value)
       
       Sets the ``boolean``  value of the given field in all of the objects in the collection.
       
       
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`setByte <io_realm_RealmResults_setByte_String__byte_>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                             **byte** value)
       
       Sets the ``byte``  value of the given field in all of the objects in the collection.
       
       
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`setDate <io_realm_RealmResults_setDate_String__Date_>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                             `Date <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__  value)
       
       Sets the ``Date``  value of the given field in all of the objects in the collection.
       
       
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`setDecimal128 <io_realm_RealmResults_setDecimal128_String__Decimal128_>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                                   **Decimal128 (?)** value)
       
       Sets the ``Decimal128``  value of the given field in all of the objects in the collection.
       
       
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`setDouble <io_realm_RealmResults_setDouble_String__double_>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                               **double** value)
       
       Sets the ``double``  value of the given field in all of the objects in the collection.
       
       
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`setFloat <io_realm_RealmResults_setFloat_String__float_>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                              **float** value)
       
       Sets the ``float``  value of the given field in all of the objects in the collection.
       
       
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`setInt <io_realm_RealmResults_setInt_String__int_>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                            **int** value)
       
       Sets the ``int``  value of the given field in all of the objects in the collection.
       
       
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`setList <io_realm_RealmResults_setList_String__RealmList_T__>`  <**T (?)** >(`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                             :ref:`io.realm.RealmList\<T> <io_realm_RealmList>`  list)
       
       Replaces the RealmList at the given field on all objects in this collection.
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`setLong <io_realm_RealmResults_setLong_String__long_>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                             **long** value)
       
       Sets the ``long``  value of the given field in all of the objects in the collection.
       
       
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`setNull <io_realm_RealmResults_setNull_String_>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName)
       
       Sets the value to ``null``  for the given field in all of the objects in the collection.
       
       
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`setObject <io_realm_RealmResults_setObject_String__RealmModel_>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                               :ref:`RealmModel <io_realm_RealmModel>`  value)
       
       Sets a reference to another object on the given field in all of the objects in the collection.
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`setObjectId <io_realm_RealmResults_setObjectId_String__ObjectId_>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                                 **ObjectId (?)** value)
       
       Sets the ``ObjectId``  value of the given field in all of the objects in the collection.
       
       
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`setShort <io_realm_RealmResults_setShort_String__short_>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                              **short** value)
       
       Sets the ``short``  value of the given field in all of the objects in the collection.
       
       
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`setString <io_realm_RealmResults_setString_String__String_>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                               `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  value)
       
       Sets the ``String``  value of the given field in all of the objects in the collection.
       
       
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`setUUID <io_realm_RealmResults_setUUID_String__UUID_>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                             `UUID <https://docs.oracle.com/javase/7/docs/api/java/util/UUID.html>`__  value)
       
       Sets the ``UUID``  value of the given field in all of the objects in the collection.
       
       
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`setValue <io_realm_RealmResults_setValue_String__Object_>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                              `Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  value)
       
       Updates the field given by ``fieldName``  in all objects inside the query result.
       
       
       
       
       
   
   * - 
       public :ref:`RealmResults <io_realm_RealmResults>` 
     - 
       :ref:`sort <io_realm_RealmResults_sort_String__Sort__String__Sort_>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName1,
                                  :ref:`Sort <io_realm_Sort>`  sortOrder1,
                                  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName2,
                                  :ref:`Sort <io_realm_Sort>`  sortOrder2)
       
       
       
       
       
       
       
   
   * - 
       public :ref:`RealmQuery <io_realm_RealmQuery>` 
     - 
       :ref:`where <io_realm_RealmResults_where__>`  ()
       
       
       
       
       
       
       
   
   


Inherited Methods
=================



- Methods inherited from interface `java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ : ``getClass`` , ``hashCode`` , ``equals`` , ``clone`` , ``toString`` , ``notify`` , ``notifyAll`` , ``wait`` , ``wait`` , ``wait`` , ``finalize`` 
- Methods inherited from interface `java.util.AbstractCollection <https://docs.oracle.com/javase/7/docs/api/java/util/AbstractCollection.html>`__ : ``iterator`` , ``size`` , ``isEmpty`` , ``contains`` , ``toArray`` , ``toArray`` , ``add`` , ``remove`` , ``containsAll`` , ``addAll`` , ``removeAll`` , ``retainAll`` , ``clear`` , ``toString`` 
- Methods inherited from interface `java.util.AbstractList <https://docs.oracle.com/javase/7/docs/api/java/util/AbstractList.html>`__ : ``add`` , ``get`` , ``set`` , ``add`` , ``remove`` , ``indexOf`` , ``lastIndexOf`` , ``clear`` , ``addAll`` , ``iterator`` , ``listIterator`` , ``listIterator`` , ``subList`` , ``equals`` , ``hashCode`` , ``removeRange`` 
- Methods inherited from interface **io.realm.OrderedRealmCollectionImpl (?)**: ``isValid`` , ``isManaged`` , ``contains`` , ``get`` , ``first`` , ``first`` , ``last`` , ``last`` , ``deleteFromRealm`` , ``deleteAllFromRealm`` , ``iterator`` , ``listIterator`` , ``listIterator`` , ``sort`` , ``sort`` , ``sort`` , ``sort`` , ``size`` , ``min`` , ``minDate`` , ``max`` , ``maxDate`` , ``sum`` , ``average`` , ``remove`` , ``remove`` , ``removeAll`` , ``set`` , ``retainAll`` , ``deleteLastFromRealm`` , ``deleteFirstFromRealm`` , ``clear`` , ``add`` , ``add`` , ``addAll`` , ``addAll`` , ``createSnapshot`` , ``getRealm`` , ``getCollectionOperator`` 




Method Detail
=============

.. _addChangeListener:

.. _addChangeListener__:

.. _RealmResults_addChangeListener:

.. _RealmResults_addChangeListener__:



addChangeListener
-----------------

.. _io_realm_RealmResults_addChangeListener_OrderedRealmCollectionChangeListener_RealmResults_E___:

.. _io_realm_RealmResults_addChangeListener_OrderedRealmCollectionChangeListener_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** addChangeListener (:ref:`io.realm.OrderedRealmCollectionChangeListener\<io.realm.RealmResults\<E>> <io_realm_OrderedRealmCollectionChangeListener>`  listener)
   
   * - Adds a change listener to this :ref:`RealmResults <io_realm_RealmResults>` .
       
       Registering a change listener will not prevent the underlying RealmResults from being garbage collected. If the RealmResults is garbage collected, the change listener will stop being triggered. To avoid this, keep a strong reference for as long as appropriate e.g. in a class variable.
       
        
       
       .. code-block:: java
       
          
           public class MyActivity extends Activity {
          
               private RealmResults<Person> results; // Strong reference to keep listeners alive
          
               @Override
               protected void onCreate(Bundle savedInstanceState) {
                 super.onCreate(savedInstanceState);
                 results = realm.where(Person.class).findAllAsync();
                 results.addChangeListener(new OrderedRealmCollectionChangeListener<RealmResults<Person>>() {
                     @Override
                     public void onChange(RealmResults<Person> persons, OrderedCollectionChangeSet changeSet) {
                         // React to change
                     }
                 });
               }
           }
           
       
       
        
       
       
       
       
       
       
       **Parameters**
       
       - ``listener`` - the change listener to be notified.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the change listener is ``null`` .
          
          
          
          
          
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if you try to add a listener from a non-Looper or **android.app.IntentService (?)** thread.
          
          
          
          
          
       
       
       
       
       
   
   
.. _io_realm_RealmResults_addChangeListener_RealmChangeListener_RealmResults_E___:

.. _io_realm_RealmResults_addChangeListener_RealmChangeListener_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** addChangeListener (:ref:`io.realm.RealmChangeListener\<io.realm.RealmResults\<E>> <io_realm_RealmChangeListener>`  listener)
   
   * - Adds a change listener to this :ref:`RealmResults <io_realm_RealmResults>` .
       
       Registering a change listener will not prevent the underlying RealmResults from being garbage collected. If the RealmResults is garbage collected, the change listener will stop being triggered. To avoid this, keep a strong reference for as long as appropriate e.g. in a class variable.
       
        
       
       .. code-block:: java
       
          
           public class MyActivity extends Activity {
          
               private RealmResults<Person> results; // Strong reference to keep listeners alive
          
               @Override
               protected void onCreate(Bundle savedInstanceState) {
                 super.onCreate(savedInstanceState);
                 results = realm.where(Person.class).findAllAsync();
                 results.addChangeListener(new RealmChangeListener<RealmResults<Person>>() {
                     @Override
                     public void onChange(RealmResults<Person> persons) {
                         // React to change
                     }
                 });
               }
           }
           
       
       
        
       
       
       
       
       
       
       **Parameters**
       
       - ``listener`` - the change listener to be notified.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the change listener is ``null`` .
          
          
          
          
          
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if you try to add a listener from a non-Looper or **android.app.IntentService (?)** thread.
          
          
          
          
          
       
       
       
       
       
   
   
.. _asChangesetObservable:

.. _asChangesetObservable__:

.. _RealmResults_asChangesetObservable:

.. _RealmResults_asChangesetObservable__:

.. _io_realm_RealmResults_asChangesetObservable:

.. _io_realm_RealmResults_asChangesetObservable__:



asChangesetObservable
---------------------

.. list-table::
   :header-rows: 1
   
   * -    public **<any> (?)** asChangesetObservable ()
   
   * - Returns an Rx Observable that monitors changes to this RealmResults. It will emit the current RealmResults when subscribed. For each update to the RealmResult a pair consisting of the RealmResults and the :ref:`OrderedCollectionChangeSet <io_realm_OrderedCollectionChangeSet>`  will be sent. The changeset will be ``null``  the first time an RealmResults is emitted.
       
       RealmResults will continually be emitted as the RealmResults are updated - ``onComplete``  will never be called.
       
       
       
       Items emitted from Realm Observables are frozen (See :ref:`freeze() <io_realm_RealmResults_freeze__>` . This means that they are immutable and can be read on any thread.
       
       
       
       Realm Observables always emit items from the thread holding the live Realm. This means that if you need to do further processing, it is recommend to observe the values on a computation scheduler:
       
       
       
       .. code-block:: java
       
          realm.where(Foo.class).findAllAsync().asChangesetObservable()
           .observeOn(Schedulers.computation())
           .map((rxResults, changes) -> doExpensiveWork(rxResults, changes))
           .observeOn(AndroidSchedulers.mainThread())
           .subscribe( ... );
           
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       **Throws**
       
       - `UnsupportedOperationException <https://docs.oracle.com/javase/7/docs/api/java/lang/UnsupportedOperationException.html>`__  - if the required RxJava framework is not on the classpath or the corresponding Realm instance doesn't support RxJava.
          
          
          
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if the Realm wasn't opened on a Looper thread.
          
          
          
       
       
       
       
       
       
       .. seealso::
       
       
          
          - `RxJava and Realm <https://realm.io/docs/java/latest/#rxjava>`__ 
             
             
             
             
          
          
          
       
       
   
   
.. _asFlowable:

.. _asFlowable__:

.. _RealmResults_asFlowable:

.. _RealmResults_asFlowable__:

.. _io_realm_RealmResults_asFlowable:

.. _io_realm_RealmResults_asFlowable__:



asFlowable
----------

.. list-table::
   :header-rows: 1
   
   * -    public **<any> (?)** asFlowable ()
   
   * - Returns an Rx Flowable that monitors changes to this RealmResults. It will emit the current RealmResults when subscribed to. RealmResults will continually be emitted as the RealmResults are updated - ``onComplete``  will never be called.
       
       Items emitted from Realm Flowables are frozen (See :ref:`freeze() <io_realm_RealmResults_freeze__>` . This means that they are immutable and can be read on any thread.
       
       
       
       Realm Flowables always emit items from the thread holding the live RealmResults. This means that if you need to do further processing, it is recommend to observe the values on a computation scheduler:
       
       
       
       .. code-block:: java
       
          realm.where(Foo.class).findAllAsync().asFlowable()
           .observeOn(Schedulers.computation())
           .map(rxResults -> doExpensiveWork(rxResults))
           .observeOn(AndroidSchedulers.mainThread())
           .subscribe( ... );
           
       
       
       
       
       
       If you would like the ``asFlowable()``  to stop emitting items you can instruct RxJava to only emit only the first item by using the ``first()``  operator:
       
       
       
        
       
       .. code-block:: java
       
          
           realm.where(Foo.class).findAllAsync().asFlowable()
                .filter(results -> results.isLoaded())
                .first()
                .subscribe( ... ) // You only get the results once
           
       
       
        
       
       
       
       
       
       
       
       
       
       
       **Throws**
       
       - `UnsupportedOperationException <https://docs.oracle.com/javase/7/docs/api/java/lang/UnsupportedOperationException.html>`__  - if the required RxJava framework is not on the classpath or the corresponding Realm instance doesn't support RxJava.
          
          
          
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if the Realm wasn't opened on a Looper thread.
          
          
          
       
       
       
       
       
       
       .. seealso::
       
       
          
          - `RxJava and Realm <https://realm.io/docs/java/latest/#rxjava>`__ 
             
             
             
             
          
          
          
       
       
   
   
.. _asJSON:

.. _asJSON__:

.. _RealmResults_asJSON:

.. _RealmResults_asJSON__:

.. _io_realm_RealmResults_asJSON:

.. _io_realm_RealmResults_asJSON__:



asJSON
------

.. list-table::
   :header-rows: 1
   
   * -    public `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  asJSON ()
   
   * - Returns a JSON representation of the matches of a :ref:`RealmQuery <io_realm_RealmQuery>` . Cycles will be returned as row indices. This is a helper method used to inspect data, or for debugging purpose, this method could pull a large string which could cause an OutOfMemory error.
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   
.. _freeze:

.. _freeze__:

.. _RealmResults_freeze:

.. _RealmResults_freeze__:

.. _io_realm_RealmResults_freeze:

.. _io_realm_RealmResults_freeze__:



freeze
------

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResults <io_realm_RealmResults>`  freeze ()
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   
.. _isFrozen:

.. _isFrozen__:

.. _RealmResults_isFrozen:

.. _RealmResults_isFrozen__:

.. _io_realm_RealmResults_isFrozen:

.. _io_realm_RealmResults_isFrozen__:



isFrozen
--------

.. list-table::
   :header-rows: 1
   
   * -    public **boolean** isFrozen ()
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   
.. _isLoaded:

.. _isLoaded__:

.. _RealmResults_isLoaded:

.. _RealmResults_isLoaded__:

.. _io_realm_RealmResults_isLoaded:

.. _io_realm_RealmResults_isLoaded__:



isLoaded
--------

.. list-table::
   :header-rows: 1
   
   * -    public **boolean** isLoaded ()
   
   * - Returns ``false``  if the results are not yet loaded, ``true``  if they are loaded.
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   
.. _load:

.. _load__:

.. _RealmResults_load:

.. _RealmResults_load__:

.. _io_realm_RealmResults_load:

.. _io_realm_RealmResults_load__:



load
----

.. list-table::
   :header-rows: 1
   
   * -    public **boolean** load ()
   
   * - Makes an asynchronous query blocking. This will also trigger any registered :ref:`RealmChangeListener <io_realm_RealmChangeListener>`  when the query completes.
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   
.. _removeAllChangeListeners:

.. _removeAllChangeListeners__:

.. _RealmResults_removeAllChangeListeners:

.. _RealmResults_removeAllChangeListeners__:

.. _io_realm_RealmResults_removeAllChangeListeners:

.. _io_realm_RealmResults_removeAllChangeListeners__:



removeAllChangeListeners
------------------------

.. list-table::
   :header-rows: 1
   
   * -    public **void** removeAllChangeListeners ()
   
   * - Removes all user-defined change listeners.
       
       
       
       
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if you try to remove listeners from a non-Looper Thread.
          
          
          
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`io.realm.RealmChangeListener <io_realm_RealmChangeListener>` 
             
             
             
          
          
          
       
       
   
   
.. _removeChangeListener:

.. _removeChangeListener__:

.. _RealmResults_removeChangeListener:

.. _RealmResults_removeChangeListener__:



removeChangeListener
--------------------

.. _io_realm_RealmResults_removeChangeListener_OrderedRealmCollectionChangeListener_RealmResults_E___:

.. _io_realm_RealmResults_removeChangeListener_OrderedRealmCollectionChangeListener_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** removeChangeListener (:ref:`io.realm.OrderedRealmCollectionChangeListener\<io.realm.RealmResults\<E>> <io_realm_OrderedRealmCollectionChangeListener>`  listener)
   
   * - Removes the specified change listener.
       
       
       
       
       **Parameters**
       
       - ``listener`` - the change listener to be removed.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the change listener is ``null`` .
          
          
          
          
          
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if you try to remove a listener from a non-Looper Thread.
          
          
          
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`io.realm.RealmChangeListener <io_realm_RealmChangeListener>` 
             
             
             
          
          
          
       
       
   
   
.. _io_realm_RealmResults_removeChangeListener_RealmChangeListener_RealmResults_E___:

.. _io_realm_RealmResults_removeChangeListener_RealmChangeListener_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** removeChangeListener (:ref:`io.realm.RealmChangeListener\<io.realm.RealmResults\<E>> <io_realm_RealmChangeListener>`  listener)
   
   * - Removes the specified change listener.
       
       
       
       
       **Parameters**
       
       - ``listener`` - the change listener to be removed.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the change listener is ``null`` .
          
          
          
          
          
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if you try to remove a listener from a non-Looper Thread.
          
          
          
       
       
       
       
       
       
       .. seealso::
       
       
          
          - :ref:`io.realm.RealmChangeListener <io_realm_RealmChangeListener>` 
             
             
             
          
          
          
       
       
   
   
.. _setBlob:

.. _setBlob__:

.. _RealmResults_setBlob:

.. _RealmResults_setBlob__:



setBlob
-------

.. _io_realm_RealmResults_setBlob_String__byte[]_:

.. _io_realm_RealmResults_setBlob_String_byte_:

.. _io_realm_RealmResults_setBlob_String__byte_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** setBlob (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                             **byte[]** value)
   
   * - Sets the binary value of the given field in all of the objects in the collection.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - name of the field to update.
          
          
          
       - ``value`` - new value for the field.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if field name doesn't exist, is a primary key property or isn't a binary field.
          
          
          
       
       
       
       
       
   
   
.. _setBoolean:

.. _setBoolean__:

.. _RealmResults_setBoolean:

.. _RealmResults_setBoolean__:



setBoolean
----------

.. _io_realm_RealmResults_setBoolean_String__boolean_:

.. _io_realm_RealmResults_setBoolean_String_boolean_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** setBoolean (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                                **boolean** value)
   
   * - Sets the ``boolean``  value of the given field in all of the objects in the collection.
       
       
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - name of the field to update.
          
          
          
       - ``value`` - new value for the field.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if field name doesn't exist, is a primary key property or isn't a boolean field.
          
          
          
       
       
       
       
       
   
   
.. _setByte:

.. _setByte__:

.. _RealmResults_setByte:

.. _RealmResults_setByte__:



setByte
-------

.. _io_realm_RealmResults_setByte_String__byte_:

.. _io_realm_RealmResults_setByte_String_byte_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** setByte (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                             **byte** value)
   
   * - Sets the ``byte``  value of the given field in all of the objects in the collection.
       
       
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - name of the field to update.
          
          
          
       - ``value`` - new value for the field.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if field name doesn't exist, is a primary key property or isn't a byte field.
          
          
          
       
       
       
       
       
   
   
.. _setDate:

.. _setDate__:

.. _RealmResults_setDate:

.. _RealmResults_setDate__:



setDate
-------

.. _io_realm_RealmResults_setDate_String__Date_:

.. _io_realm_RealmResults_setDate_String_Date_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** setDate (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                             `Date <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__  value)
   
   * - Sets the ``Date``  value of the given field in all of the objects in the collection.
       
       
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - name of the field to update.
          
          
          
       - ``value`` - new value for the field.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if field name doesn't exist, is a primary key property or isn't a ``Date``  field.
          
          
          
          
          
       
       
       
       
       
   
   
.. _setDecimal128:

.. _setDecimal128__:

.. _RealmResults_setDecimal128:

.. _RealmResults_setDecimal128__:



setDecimal128
-------------

.. _io_realm_RealmResults_setDecimal128_String__Decimal128_:

.. _io_realm_RealmResults_setDecimal128_String_Decimal128_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** setDecimal128 (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                                   **Decimal128 (?)** value)
   
   * - Sets the ``Decimal128``  value of the given field in all of the objects in the collection.
       
       
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - name of the field to update.
          
          
          
       - ``value`` - new value for the field.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if field name doesn't exist, is a primary key property or isn't a ``Decimal128``  field.
          
          
          
          
          
       
       
       
       
       
   
   
.. _setDouble:

.. _setDouble__:

.. _RealmResults_setDouble:

.. _RealmResults_setDouble__:



setDouble
---------

.. _io_realm_RealmResults_setDouble_String__double_:

.. _io_realm_RealmResults_setDouble_String_double_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** setDouble (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                               **double** value)
   
   * - Sets the ``double``  value of the given field in all of the objects in the collection.
       
       
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - name of the field to update.
          
          
          
       - ``value`` - new value for the field.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if field name doesn't exist, is a primary key property or isn't a double field.
          
          
          
       
       
       
       
       
   
   
.. _setFloat:

.. _setFloat__:

.. _RealmResults_setFloat:

.. _RealmResults_setFloat__:



setFloat
--------

.. _io_realm_RealmResults_setFloat_String__float_:

.. _io_realm_RealmResults_setFloat_String_float_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** setFloat (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                              **float** value)
   
   * - Sets the ``float``  value of the given field in all of the objects in the collection.
       
       
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - name of the field to update.
          
          
          
       - ``value`` - new value for the field.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if field name doesn't exist, is a primary key property or isn't a float field.
          
          
          
       
       
       
       
       
   
   
.. _setInt:

.. _setInt__:

.. _RealmResults_setInt:

.. _RealmResults_setInt__:



setInt
------

.. _io_realm_RealmResults_setInt_String__int_:

.. _io_realm_RealmResults_setInt_String_int_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** setInt (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                            **int** value)
   
   * - Sets the ``int``  value of the given field in all of the objects in the collection.
       
       
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - name of the field to update.
          
          
          
       - ``value`` - new value for the field.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if field name doesn't exist, is a primary key property or isn't an integer field.
          
          
          
       
       
       
       
       
   
   
.. _setList:

.. _setList__:

.. _RealmResults_setList:

.. _RealmResults_setList__:



setList
-------

.. _io_realm_RealmResults_setList_String__RealmList_T__:

.. _io_realm_RealmResults_setList_String_RealmList_:

.. _io_realm_RealmResults_setList_String__RealmList_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** setList <**T (?)** >(`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                             :ref:`io.realm.RealmList\<T> <io_realm_RealmList>`  list)
   
   * - Replaces the RealmList at the given field on all objects in this collection.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - name of the field to update.
          
          
          
       - ``list`` - new value for the field.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if field name doesn't exist, isn't a RealmList field , if the objects in the list are not managed or the type of the objects in the list are wrong.
          
          
          
       
       
       
       
       
   
   
.. _setLong:

.. _setLong__:

.. _RealmResults_setLong:

.. _RealmResults_setLong__:



setLong
-------

.. _io_realm_RealmResults_setLong_String__long_:

.. _io_realm_RealmResults_setLong_String_long_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** setLong (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                             **long** value)
   
   * - Sets the ``long``  value of the given field in all of the objects in the collection.
       
       
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - name of the field to update.
          
          
          
       - ``value`` - new value for the field.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if field name doesn't exist, is a primary key property or isn't a long field.
          
          
          
       
       
       
       
       
   
   
.. _setNull:

.. _setNull__:

.. _RealmResults_setNull:

.. _RealmResults_setNull__:



setNull
-------

.. _io_realm_RealmResults_setNull_String_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** setNull (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName)
   
   * - Sets the value to ``null``  for the given field in all of the objects in the collection.
       
       
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - name of the field to update.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if field name doesn't exist or is a primary key property.
          
          
          
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if the field cannot hold ``null``  values.
          
          
          
          
          
       
       
       
       
       
   
   
.. _setObject:

.. _setObject__:

.. _RealmResults_setObject:

.. _RealmResults_setObject__:



setObject
---------

.. _io_realm_RealmResults_setObject_String__RealmModel_:

.. _io_realm_RealmResults_setObject_String_RealmModel_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** setObject (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                               :ref:`RealmModel <io_realm_RealmModel>`  value)
   
   * - Sets a reference to another object on the given field in all of the objects in the collection.
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - name of the field to update.
          
          
          
       - ``value`` - new object referenced by this field.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if field name doesn't exist, is a primary key property or isn't an Object reference field.
          
          
          
       
       
       
       
       
   
   
.. _setObjectId:

.. _setObjectId__:

.. _RealmResults_setObjectId:

.. _RealmResults_setObjectId__:



setObjectId
-----------

.. _io_realm_RealmResults_setObjectId_String__ObjectId_:

.. _io_realm_RealmResults_setObjectId_String_ObjectId_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** setObjectId (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                                 **ObjectId (?)** value)
   
   * - Sets the ``ObjectId``  value of the given field in all of the objects in the collection.
       
       
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - name of the field to update.
          
          
          
       - ``value`` - new value for the field.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if field name doesn't exist, is a primary key property or isn't a ``ObjectId``  field.
          
          
          
          
          
       
       
       
       
       
   
   
.. _setShort:

.. _setShort__:

.. _RealmResults_setShort:

.. _RealmResults_setShort__:



setShort
--------

.. _io_realm_RealmResults_setShort_String__short_:

.. _io_realm_RealmResults_setShort_String_short_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** setShort (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                              **short** value)
   
   * - Sets the ``short``  value of the given field in all of the objects in the collection.
       
       
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - name of the field to update.
          
          
          
       - ``value`` - new value for the field.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if field name doesn't exist, is a primary key property or isn't a short field.
          
          
          
       
       
       
       
       
   
   
.. _setString:

.. _setString__:

.. _RealmResults_setString:

.. _RealmResults_setString__:



setString
---------

.. _io_realm_RealmResults_setString_String__String_:

.. _io_realm_RealmResults_setString_String_String_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** setString (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                               `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  value)
   
   * - Sets the ``String``  value of the given field in all of the objects in the collection.
       
       
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - name of the field to update.
          
          
          
       - ``value`` - new value for the field.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if field name doesn't exist, is a primary key property or isn't a String field.
          
          
          
       
       
       
       
       
   
   
.. _setUUID:

.. _setUUID__:

.. _RealmResults_setUUID:

.. _RealmResults_setUUID__:



setUUID
-------

.. _io_realm_RealmResults_setUUID_String__UUID_:

.. _io_realm_RealmResults_setUUID_String_UUID_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** setUUID (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                             `UUID <https://docs.oracle.com/javase/7/docs/api/java/util/UUID.html>`__  value)
   
   * - Sets the ``UUID``  value of the given field in all of the objects in the collection.
       
       
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - name of the field to update.
          
          
          
       - ``value`` - new value for the field.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if field name doesn't exist, is a primary key property or isn't a ``UUID``  field.
          
          
          
          
          
       
       
       
       
       
   
   
.. _setValue:

.. _setValue__:

.. _RealmResults_setValue:

.. _RealmResults_setValue__:



setValue
--------

.. _io_realm_RealmResults_setValue_String__Object_:

.. _io_realm_RealmResults_setValue_String_Object_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** setValue (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName,
                              `Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  value)
   
   * - Updates the field given by ``fieldName``  in all objects inside the query result.
       
       This method will automatically try to convert numbers and booleans that are given as ``String``  to their appropriate type. For example ``"10"``  will be converted to ``10``  if the field type is :ref:`RealmFieldType.INTEGER <io_realm_RealmFieldType_INTEGER>` .
       
       
       
       Using the typed setters like :ref:`setInt(String, int) <io_realm_RealmResults_setInt_String__int_>`  will be faster than using this method.
       
       
       
       
       
       
       
       
       **Parameters**
       
       - ``fieldName`` - field to update
          
          
          
       - ``value`` - value to update with.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalArgumentException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html>`__  - if the field could not be found, could not be updated or the argument didn't match the field type or could not be converted to match the underlying field type.
          
          
          
       
       
       
       
       
   
   
.. _sort:

.. _sort__:

.. _RealmResults_sort:

.. _RealmResults_sort__:



sort
----

.. _io_realm_RealmResults_sort_String__Sort__String__Sort_:

.. _io_realm_RealmResults_sort_String_Sort_String_Sort_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResults <io_realm_RealmResults>`  sort (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName1,
                                  :ref:`Sort <io_realm_Sort>`  sortOrder1,
                                  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  fieldName2,
                                  :ref:`Sort <io_realm_Sort>`  sortOrder2)
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   
.. _where:

.. _where__:

.. _RealmResults_where:

.. _RealmResults_where__:

.. _io_realm_RealmResults_where:

.. _io_realm_RealmResults_where__:



where
-----

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmQuery <io_realm_RealmQuery>`  where ()
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   

