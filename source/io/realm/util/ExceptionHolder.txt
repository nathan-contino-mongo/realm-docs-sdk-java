
.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol



Class ExceptionHolder
^^^^^^^^^^^^^^^^^^^^^

.. _io_realm_util_ExceptionHolder:



io.realm.util
=============

`java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ 

Utility class for wrapping exceptions from background threads in unit tests. It makes patterns like this possible: {@code final CountDownLatch taskDone = new CountDownLatch(1); final ExceptionHolder bgError = new ExceptionHolder(); new Thread(new Runnable() {


Constructors
============



- ``io.realm.util.ExceptionHolder()`` 




Method Summary
==============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Method and Description
   
   * - 
       public **void**
     - 
       :ref:`setException <io_realm_util_ExceptionHolder_setException_Throwable_>`  (`Throwable <https://docs.oracle.com/javase/7/docs/api/java/lang/Throwable.html>`__  throwable)
       
       Sets the exception held by this container.
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`setError <io_realm_util_ExceptionHolder_setError_String_>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  message)
       
       Sets a custom error message that can be used instead of setting an exception.
       
       
       
   
   * - 
       public `Throwable <https://docs.oracle.com/javase/7/docs/api/java/lang/Throwable.html>`__ 
     - 
       :ref:`getException <io_realm_util_ExceptionHolder_getException__>`  ()
       
       Returns any saved exception.
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`checkFailure <io_realm_util_ExceptionHolder_checkFailure__>`  ()
       
       Checks if an exception has been set and fails the unit test if that is the case.
       
       
       
   
   


Inherited Methods
=================



- Methods inherited from interface `java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ : 
   
   ``getClass`` , ``hashCode`` , ``equals`` , ``clone`` , ``toString`` , ``notify`` , ``notifyAll`` , ``wait`` , ``wait`` , ``wait`` , ``finalize`` 
   
   




Method Detail
=============



setException
------------

.. _io_realm_util_ExceptionHolder_setException_Throwable_:

.. _io_realm_util_ExceptionHolder_setException_Throwable_:

.. _io_realm_util_ExceptionHolder_setException_Throwable_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** setException (`Throwable <https://docs.oracle.com/javase/7/docs/api/java/lang/Throwable.html>`__  throwable)
   
   * - Sets the exception held by this container. This is an one-shot operation.
       
       
       
       
       **Parameters**
       
       - ``throwable`` - error to save.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if an exception have already been put into this holder.
          
          
          
       
       
       
       
       
   
   


setError
--------

.. _io_realm_util_ExceptionHolder_setError_String_:

.. _io_realm_util_ExceptionHolder_setError_String_:

.. _io_realm_util_ExceptionHolder_setError_String_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** setError (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  message)
   
   * - Sets a custom error message that can be used instead of setting an exception. This will still trigger :ref:`checkFailure() <io_realm_util_ExceptionHolder_checkFailure__>` .
       
       
       
       
       
       
       **Parameters**
       
       - ``message`` - error message
          
          
          
       
       
       
       
       
       
       
       
       
   
   


getException
------------

.. _io_realm_util_ExceptionHolder_getException__:

.. _io_realm_util_ExceptionHolder_getException__:

.. _io_realm_util_ExceptionHolder_getException__:

.. list-table::
   :header-rows: 1
   
   * -    public `Throwable <https://docs.oracle.com/javase/7/docs/api/java/lang/Throwable.html>`__  getException ()
   
   * - Returns any saved exception.
       
       
       
       
       
       
       
       
       
       
       
   
   


checkFailure
------------

.. _io_realm_util_ExceptionHolder_checkFailure__:

.. _io_realm_util_ExceptionHolder_checkFailure__:

.. _io_realm_util_ExceptionHolder_checkFailure__:

.. list-table::
   :header-rows: 1
   
   * -    public **void** checkFailure ()
   
   * - Checks if an exception has been set and fails the unit test if that is the case.
       
       
       
       
       
       
       
       
       
       
       
   
   

