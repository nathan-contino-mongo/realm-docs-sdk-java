
.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

io.realm.RealmList<E>
^^^^^^^^^^^^^^^^^^^^^

.. _io_realm_RealmList:

*Superclass:*

- `java.util.AbstractList <https://docs.oracle.com/javase/7/docs/api/java/util/AbstractList.html>`__

*Implemented interfaces:*

- :ref:`io.realm.OrderedRealmCollection <io_realm_OrderedRealmCollection>`

RealmList is used to model one-to-many relationships in a :ref:`io.realm.RealmObject <io_realm_RealmObject>`. RealmList has two modes: A managed and unmanaged mode. In managed mode all objects are persisted inside a Realm, in unmanaged mode it works as a normal ArrayList.

Only Realm can create managed RealmLists. Managed RealmLists will automatically update the content whenever the underlying Realm is updated, and can only be accessed using the getter of a :ref:`io.realm.RealmObject <io_realm_RealmObject>`.



Unmanaged RealmLists can be created by the user and can contain both managed and unmanaged RealmObjects. This is useful when dealing with JSON deserializers like GSON or other frameworks that inject values into a class. Unmanaged elements in this list can be added to a Realm using the **Realm#copyToRealm(Iterable, ImportFlag...) (?)** method.



:ref:`RealmList <io_realm_RealmList>` can contain more elements than ``Integer.MAX_VALUE``. In that case, you can access only first ``Integer.MAX_VALUE`` elements in it.




Constructors
============

- ``io.realm.RealmList()``
- ``io.realm.RealmList(E...)``

Field Summary
=============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Field and Description
   
   * - ``protectedjava.lang.Class<E>``
       
       
     - ``clazz``
       
       
   
   * - ``protectedjava.lang.String``
       
       
     - ``className``
       
       
   
   * - ``public finalio.realm.BaseRealm``
       
       
     - ``baseRealm``
       
       The {@link BaseRealm} instance in which this list resides.
        <p>
        Warning: This field is only exposed for internal usage, and should not be used.
   
   
Method Summary
==============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Method and Description
   
   * - public **boolean**
     - :ref:`isValid <io_realm_RealmList_isValid__>` ()
       
       
       
       
       
       
       
   
   * - public :ref:`RealmList <io_realm_RealmList>`
     - :ref:`freeze <io_realm_RealmList_freeze__>` ()
       
       
       
       
       
       
       
   
   * - public **boolean**
     - :ref:`isFrozen <io_realm_RealmList_isFrozen__>` ()
       
       
       
       
       
       
       
   
   * - public **boolean**
     - :ref:`isManaged <io_realm_RealmList_isManaged__>` ()
       
       
       
       
       
       
       
   
   * - public **void**
     - :ref:`add <io_realm_RealmList_add_int__E_>` (**int** location, **E (?)** element)
       
       Inserts the specified object into this List at the specified location.
       
       
       
   
   * - public **boolean**
     - :ref:`add <io_realm_RealmList_add_E_>` (**E (?)** object)
       
       Adds the specified object at the end of this List.
       
       
       
   
   * - public **E (?)**
     - :ref:`set <io_realm_RealmList_set_int__E_>` (**int** location, **E (?)** object)
       
       Replaces the element at the specified location in this list with the specified object.
       
       
       
   
   * - public **void**
     - :ref:`move <io_realm_RealmList_move_int__int_>` (**int** oldPos, **int** newPos)
       
       Moves an object from one position to another, while maintaining a fixed sized list.
       
       
       
   
   * - public **void**
     - :ref:`clear <io_realm_RealmList_clear__>` ()
       
       Removes all elements from this list, leaving it empty.
       
       
       
   
   * - public **E (?)**
     - :ref:`remove <io_realm_RealmList_remove_int_>` (**int** location)
       
       Removes the object at the specified location from this list.
       
       
       
   
   * - public **boolean**
     - :ref:`remove <io_realm_RealmList_remove_Object_>` (`Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ object)
       
       Removes one instance of the specified object from this ``Collection`` if one is contained.
       
       
       
       
       
   
   * - public **boolean**
     - :ref:`removeAll <io_realm_RealmList_removeAll_Collection____>` (`java.util.Collection\<?> <https://docs.oracle.com/javase/7/docs/api/java/util/Collection.html>`__ collection)
       
       Removes all occurrences in this ``Collection`` of each object in the specified ``Collection``.
       
       
       
       
       
   
   * - public **boolean**
     - :ref:`deleteFirstFromRealm <io_realm_RealmList_deleteFirstFromRealm__>` ()
       
       
       
       
       
       
       
   
   * - public **boolean**
     - :ref:`deleteLastFromRealm <io_realm_RealmList_deleteLastFromRealm__>` ()
       
       
       
       
       
       
       
   
   * - public **E (?)**
     - :ref:`get <io_realm_RealmList_get_int_>` (**int** location)
       
       Returns the element at the specified location in this list.
       
       
       
   
   * - public **E (?)**
     - :ref:`first <io_realm_RealmList_first__>` ()
       
       
       
       
       
       
       
   
   * - public **E (?)**
     - :ref:`first <io_realm_RealmList_first_E_>` (**E (?)** defaultValue)
       
       
       
       
       
       
       
   
   * - public **E (?)**
     - :ref:`last <io_realm_RealmList_last__>` ()
       
       
       
       
       
       
       
   
   * - public **E (?)**
     - :ref:`last <io_realm_RealmList_last_E_>` (**E (?)** defaultValue)
       
       
       
       
       
       
       
   
   * - public :ref:`RealmResults <io_realm_RealmResults>`
     - :ref:`sort <io_realm_RealmList_sort_String_>` (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldName)
       
       
       
       
       
       
       
   
   * - public :ref:`RealmResults <io_realm_RealmResults>`
     - :ref:`sort <io_realm_RealmList_sort_String__Sort_>` (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldName, :ref:`Sort <io_realm_Sort>` sortOrder)
       
       
       
       
       
       
       
   
   * - public :ref:`RealmResults <io_realm_RealmResults>`
     - :ref:`sort <io_realm_RealmList_sort_String__Sort__String__Sort_>` (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldName1, :ref:`Sort <io_realm_Sort>` sortOrder1, `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldName2, :ref:`Sort <io_realm_Sort>` sortOrder2)
       
       
       
       
       
       
       
   
   * - public :ref:`RealmResults <io_realm_RealmResults>`
     - :ref:`sort <io_realm_RealmList_sort_String[]__Sort[]_>` (`java.lang.String[] <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldNames, :ref:`io.realm.Sort[] <io_realm_Sort>` sortOrders)
       
       
       
       
       
       
       
   
   * - public **void**
     - :ref:`deleteFromRealm <io_realm_RealmList_deleteFromRealm_int_>` (**int** location)
       
       
       
       
       
       
       
   
   * - public **int**
     - :ref:`size <io_realm_RealmList_size__>` ()
       
       Returns the number of elements in this ``List``.
       
       
       
       
       
   
   * - public :ref:`RealmQuery <io_realm_RealmQuery>`
     - :ref:`where <io_realm_RealmList_where__>` ()
       
       Returns a RealmQuery, which can be used to query for specific objects of this class.
       
       
       
   
   * - public `Number <https://docs.oracle.com/javase/7/docs/api/java/lang/Number.html>`__
     - :ref:`min <io_realm_RealmList_min_String_>` (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldName)
       
       
       
       
       
       
       
   
   * - public `Number <https://docs.oracle.com/javase/7/docs/api/java/lang/Number.html>`__
     - :ref:`max <io_realm_RealmList_max_String_>` (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldName)
       
       
       
       
       
       
       
   
   * - public `Number <https://docs.oracle.com/javase/7/docs/api/java/lang/Number.html>`__
     - :ref:`sum <io_realm_RealmList_sum_String_>` (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldName)
       
       
       
       
       
       
       
   
   * - public **double**
     - :ref:`average <io_realm_RealmList_average_String_>` (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldName)
       
       
       
       
       
       
       
   
   * - public `Date <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__
     - :ref:`maxDate <io_realm_RealmList_maxDate_String_>` (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldName)
       
       
       
       
       
       
       
   
   * - public `Date <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__
     - :ref:`minDate <io_realm_RealmList_minDate_String_>` (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldName)
       
       
       
       
       
       
       
   
   * - public **boolean**
     - :ref:`deleteAllFromRealm <io_realm_RealmList_deleteAllFromRealm__>` ()
       
       
       
       
       
       
       
   
   * - public **boolean**
     - :ref:`isLoaded <io_realm_RealmList_isLoaded__>` ()
       
       
       
       
       
       
       
   
   * - public **boolean**
     - :ref:`load <io_realm_RealmList_load__>` ()
       
       
       
       
       
       
       
   
   * - public **boolean**
     - :ref:`contains <io_realm_RealmList_contains_Object_>` (`Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ object)
       
       Returns ``true`` if the list contains the specified element when attached to a Realm.
       
       
       
       
       
   
   * - public `Iterator <https://docs.oracle.com/javase/7/docs/api/java/util/Iterator.html>`__
     - :ref:`iterator <io_realm_RealmList_iterator__>` ()
       
       
       
       
       
       
       
   
   * - public `ListIterator <https://docs.oracle.com/javase/7/docs/api/java/util/ListIterator.html>`__
     - :ref:`listIterator <io_realm_RealmList_listIterator__>` ()
       
       
       
       
       
       
       
   
   * - public `ListIterator <https://docs.oracle.com/javase/7/docs/api/java/util/ListIterator.html>`__
     - :ref:`listIterator <io_realm_RealmList_listIterator_int_>` (**int** location)
       
       
       
       
       
       
       
   
   * - public :ref:`OrderedRealmCollectionSnapshot <io_realm_OrderedRealmCollectionSnapshot>`
     - :ref:`createSnapshot <io_realm_RealmList_createSnapshot__>` ()
       
       
       
       
       
       
       
   
   * - public :ref:`Realm <io_realm_Realm>`
     - :ref:`getRealm <io_realm_RealmList_getRealm__>` ()
       
       Returns the :ref:`Realm <io_realm_Realm>` instance to which this collection belongs.
       
       
       
       
       
   
   * - public `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__
     - :ref:`toString <io_realm_RealmList_toString__>` ()
       
       
       
       
       
   
   * - public **<any> (?)**
     - :ref:`asFlowable <io_realm_RealmList_asFlowable__>` ()
       
       Returns an Rx Flowable that monitors changes to this RealmList.
       
       
       
   
   * - public **<any> (?)**
     - :ref:`asChangesetObservable <io_realm_RealmList_asChangesetObservable__>` ()
       
       Returns an Rx Observable that monitors changes to this RealmList.
       
       
       
   
   * - public **void**
     - :ref:`addChangeListener <io_realm_RealmList_addChangeListener_OrderedRealmCollectionChangeListener_RealmList_E___>` (:ref:`io.realm.OrderedRealmCollectionChangeListener\<io.realm.RealmList\<E>> <io_realm_OrderedRealmCollectionChangeListener>` listener)
       
       Adds a change listener to this :ref:`RealmList <io_realm_RealmList>`.
       
       
       
       
       
   
   * - public **void**
     - :ref:`removeChangeListener <io_realm_RealmList_removeChangeListener_OrderedRealmCollectionChangeListener_RealmList_E___>` (:ref:`io.realm.OrderedRealmCollectionChangeListener\<io.realm.RealmList\<E>> <io_realm_OrderedRealmCollectionChangeListener>` listener)
       
       Removes the specified change listener.
       
       
       
   
   * - public **void**
     - :ref:`addChangeListener <io_realm_RealmList_addChangeListener_RealmChangeListener_RealmList_E___>` (:ref:`io.realm.RealmChangeListener\<io.realm.RealmList\<E>> <io_realm_RealmChangeListener>` listener)
       
       Adds a change listener to this :ref:`RealmList <io_realm_RealmList>`.
       
       
       
       
       
   
   * - public **void**
     - :ref:`removeChangeListener <io_realm_RealmList_removeChangeListener_RealmChangeListener_RealmList_E___>` (:ref:`io.realm.RealmChangeListener\<io.realm.RealmList\<E>> <io_realm_RealmChangeListener>` listener)
       
       Removes the specified change listener.
       
       
       
   
   * - public **void**
     - :ref:`removeAllChangeListeners <io_realm_RealmList_removeAllChangeListeners__>` ()
       
       Removes all user-defined change listeners.
       
       
       
   
   
Field Detail
============

.. _io_realm_RealmList_clazz:

``clazz``
---------


.. _io_realm_RealmList_className:

``className``
-------------


.. _io_realm_RealmList_baseRealm:

``baseRealm``
-------------

The **BaseRealm (?)** instance in which this list resides.

Warning: This field is only exposed for internal usage, and should not be used.


Method Detail
=============

isValid
-------

.. _io_realm_RealmList_isValid__:

public **boolean** isValid ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




freeze
------

.. _io_realm_RealmList_freeze__:

public :ref:`RealmList <io_realm_RealmList>` freeze ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




isFrozen
--------

.. _io_realm_RealmList_isFrozen__:

public **boolean** isFrozen ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




isManaged
---------

.. _io_realm_RealmList_isManaged__:

public **boolean** isManaged ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




add
----

.. _io_realm_RealmList_add_int__E_:

public **void** add (**int** location, **E (?)** element)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Inserts the specified object into this List at the specified location. The object is inserted before any previous element at the specified location. If the location is equal to the size of this List, the object is added at the end.1. **Unmanaged RealmLists**: It is possible to add both managed and unmanaged objects. If adding managed objects to an unmanaged RealmList they will not be copied to the Realm again if using **Realm#copyToRealm(RealmModel, ImportFlag...) (?)** afterwards.
   
   
   
   
#. **Managed RealmLists**: It is possible to add unmanaged objects to a RealmList that is already managed. In that case the object will transparently be copied to Realm using **Realm#copyToRealm(RealmModel, ImportFlag...) (?)** or **Realm#copyToRealmOrUpdate(RealmModel, ImportFlag...) (?)** if it has a primary key.
   
   
   
   


Parameters
__________

- ``location - ``the index at which to insert.
   
- ``element - ``the element to add.
   

Throws
______

.. _io_realm_RealmList_add_E_:

public **boolean** add (**E (?)** object)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Adds the specified object at the end of this List.1. **Unmanaged RealmLists**: It is possible to add both managed and unmanaged objects. If adding managed objects to an unmanaged RealmList they will not be copied to the Realm again if using **Realm#copyToRealm(RealmModel, ImportFlag...) (?)** afterwards.
   
   
   
   
#. **Managed RealmLists**: It is possible to add unmanaged objects to a RealmList that is already managed. In that case the object will transparently be copied to Realm using **Realm#copyToRealm(RealmModel, ImportFlag...) (?)** or **Realm#copyToRealmOrUpdate(RealmModel, ImportFlag...) (?)** if it has a primary key.
   
   
   
   


Parameters
__________

- ``object - ``the object to add.
   

Throws
______

set
----

.. _io_realm_RealmList_set_int__E_:

public **E (?)** set (**int** location, **E (?)** object)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Replaces the element at the specified location in this list with the specified object.1. **Unmanaged RealmLists**: It is possible to add both managed and unmanaged objects. If adding managed objects to an unmanaged RealmList they will not be copied to the Realm again if using **Realm#copyToRealm(RealmModel, ImportFlag...) (?)** afterwards.
   
   
   
   
#. **Managed RealmLists**: It is possible to add unmanaged objects to a RealmList that is already managed. In that case the object will transparently be copied to Realm using **Realm#copyToRealm(RealmModel, ImportFlag...) (?)** or **Realm#copyToRealmOrUpdate(RealmModel, ImportFlag...) (?)** if it has a primary key.
   
   
   
   


Parameters
__________

- ``location - ``the index at which to put the specified object.
   
- ``object - ``the object to add.
   

Throws
______

move
----

.. _io_realm_RealmList_move_int__int_:

public **void** move (**int** oldPos, **int** newPos)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Moves an object from one position to another, while maintaining a fixed sized list. RealmObjects will be shifted so no ``null`` values are introduced.


Parameters
__________

- ``oldPos - ``index of RealmObject to move.
   
- ``newPos - ``target position. If newPos < oldPos the object at the location will be shifted to the right. If oldPos < newPos, indexes > oldPos will be shifted once to the left.
   

Throws
______

clear
-----

.. _io_realm_RealmList_clear__:

public **void** clear ()
~~~~~~~~~~~~~~~~~~~~~~~~

Removes all elements from this list, leaving it empty. This method doesn't remove the objects from the Realm.
Throws
______

See Also
________

List#isEmpty

List#size

#deleteAllFromRealm()

remove
------

.. _io_realm_RealmList_remove_int_:

public **E (?)** remove (**int** location)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Removes the object at the specified location from this list.
Parameters
__________

- ``location - ``the index of the object to remove.
   

Throws
______

.. _io_realm_RealmList_remove_Object_:

public **boolean** remove (`Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ object)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Removes one instance of the specified object from this ``Collection`` if one is contained. This implementation iterates over this ``Collection`` and tests each element ``e`` returned by the iterator, whether ``e`` is equal to the given object. If ``object != null`` then this test is performed using ``object.equals(e)``, otherwise using ``object == null``. If an element equal to the given object is found, then the ``remove`` method is called on the iterator and ``true`` is returned, ``false`` otherwise. If the iterator does not support removing elements, an ``UnsupportedOperationException`` is thrown.


Parameters
__________

- ``object - ``the object to remove.
   

Throws
______

removeAll
---------

.. _io_realm_RealmList_removeAll_Collection____:

public **boolean** removeAll (`java.util.Collection\<?> <https://docs.oracle.com/javase/7/docs/api/java/util/Collection.html>`__ collection)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Removes all occurrences in this ``Collection`` of each object in the specified ``Collection``. After this method returns none of the elements in the passed ``Collection`` can be found in this ``Collection`` anymore.

This implementation iterates over the ``Collection`` and tests each element ``e`` returned by the iterator, whether it is contained in the specified ``Collection``. If this test is positive, then the ``remove`` method is called on the iterator.




Parameters
__________

- ``collection - ``the collection of objects to remove.
   

Throws
______

deleteFirstFromRealm
--------------------

.. _io_realm_RealmList_deleteFirstFromRealm__:

public **boolean** deleteFirstFromRealm ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




deleteLastFromRealm
-------------------

.. _io_realm_RealmList_deleteLastFromRealm__:

public **boolean** deleteLastFromRealm ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




get
----

.. _io_realm_RealmList_get_int_:

public **E (?)** get (**int** location)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Returns the element at the specified location in this list.
Parameters
__________

- ``location - ``the index of the element to return.
   

Throws
______

first
-----

.. _io_realm_RealmList_first__:

public **E (?)** first ()
~~~~~~~~~~~~~~~~~~~~~~~~~




.. _io_realm_RealmList_first_E_:

public **E (?)** first (**E (?)** defaultValue)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




last
----

.. _io_realm_RealmList_last__:

public **E (?)** last ()
~~~~~~~~~~~~~~~~~~~~~~~~




.. _io_realm_RealmList_last_E_:

public **E (?)** last (**E (?)** defaultValue)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




sort
----

.. _io_realm_RealmList_sort_String_:

public :ref:`RealmResults <io_realm_RealmResults>` sort (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldName)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




.. _io_realm_RealmList_sort_String__Sort_:

public :ref:`RealmResults <io_realm_RealmResults>` sort (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldName, :ref:`Sort <io_realm_Sort>` sortOrder)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




.. _io_realm_RealmList_sort_String__Sort__String__Sort_:

public :ref:`RealmResults <io_realm_RealmResults>` sort (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldName1, :ref:`Sort <io_realm_Sort>` sortOrder1, `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldName2, :ref:`Sort <io_realm_Sort>` sortOrder2)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




.. _io_realm_RealmList_sort_String[]__Sort[]_:

public :ref:`RealmResults <io_realm_RealmResults>` sort (`java.lang.String[] <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldNames, :ref:`io.realm.Sort[] <io_realm_Sort>` sortOrders)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




deleteFromRealm
---------------

.. _io_realm_RealmList_deleteFromRealm_int_:

public **void** deleteFromRealm (**int** location)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




size
----

.. _io_realm_RealmList_size__:

public **int** size ()
~~~~~~~~~~~~~~~~~~~~~~

Returns the number of elements in this ``List``.


Throws
______

where
-----

.. _io_realm_RealmList_where__:

public :ref:`RealmQuery <io_realm_RealmQuery>` where ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Returns a RealmQuery, which can be used to query for specific objects of this class.
Throws
______

See Also
________

io.realm.RealmQuery

min
----

.. _io_realm_RealmList_min_String_:

public `Number <https://docs.oracle.com/javase/7/docs/api/java/lang/Number.html>`__ min (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldName)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




max
----

.. _io_realm_RealmList_max_String_:

public `Number <https://docs.oracle.com/javase/7/docs/api/java/lang/Number.html>`__ max (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldName)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




sum
----

.. _io_realm_RealmList_sum_String_:

public `Number <https://docs.oracle.com/javase/7/docs/api/java/lang/Number.html>`__ sum (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldName)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




average
-------

.. _io_realm_RealmList_average_String_:

public **double** average (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldName)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




maxDate
-------

.. _io_realm_RealmList_maxDate_String_:

public `Date <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__ maxDate (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldName)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




minDate
-------

.. _io_realm_RealmList_minDate_String_:

public `Date <https://docs.oracle.com/javase/7/docs/api/java/util/Date.html>`__ minDate (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldName)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




deleteAllFromRealm
------------------

.. _io_realm_RealmList_deleteAllFromRealm__:

public **boolean** deleteAllFromRealm ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




isLoaded
--------

.. _io_realm_RealmList_isLoaded__:

public **boolean** isLoaded ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




load
----

.. _io_realm_RealmList_load__:

public **boolean** load ()
~~~~~~~~~~~~~~~~~~~~~~~~~~




contains
--------

.. _io_realm_RealmList_contains_Object_:

public **boolean** contains (`Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ object)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Returns ``true`` if the list contains the specified element when attached to a Realm. This method will query the native Realm underlying storage engine to quickly find the specified element.

If the list is not attached to a Realm, the default `List#contains(Object) <https://docs.oracle.com/javase/7/docs/api/java/util/List/contains(Object).html>`__ implementation will occur.




Parameters
__________

- ``object - ``the element whose presence in this list is to be tested.
   

iterator
--------

.. _io_realm_RealmList_iterator__:

public `Iterator <https://docs.oracle.com/javase/7/docs/api/java/util/Iterator.html>`__ iterator ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




listIterator
------------

.. _io_realm_RealmList_listIterator__:

public `ListIterator <https://docs.oracle.com/javase/7/docs/api/java/util/ListIterator.html>`__ listIterator ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




.. _io_realm_RealmList_listIterator_int_:

public `ListIterator <https://docs.oracle.com/javase/7/docs/api/java/util/ListIterator.html>`__ listIterator (**int** location)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




createSnapshot
--------------

.. _io_realm_RealmList_createSnapshot__:

public :ref:`OrderedRealmCollectionSnapshot <io_realm_OrderedRealmCollectionSnapshot>` createSnapshot ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




getRealm
--------

.. _io_realm_RealmList_getRealm__:

public :ref:`Realm <io_realm_Realm>` getRealm ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Returns the :ref:`Realm <io_realm_Realm>` instance to which this collection belongs.

Calling **Realm#close() (?)** on the returned instance is discouraged as it is the same as calling it on the original Realm instance which may cause the Realm to fully close invalidating the list.




Throws
______

toString
--------

.. _io_realm_RealmList_toString__:

public `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ toString ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


asFlowable
----------

.. _io_realm_RealmList_asFlowable__:

public **<any> (?)** asFlowable ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Returns an Rx Flowable that monitors changes to this RealmList. It will emit the current RealmList when subscribed to. RealmList will continually be emitted as the RealmList is updated - ``onComplete`` will never be called.

Items emitted from Realm Flowables are frozen (See :ref:`#freeze() <io_realm_RealmList_freeze__>`. This means that they are immutable and can be read on any thread.



Realm Flowables always emit items from the thread holding the live RealmList. This means that if you need to do further processing, it is recommend to observe the values on a computation scheduler:



.. code-block:: java

   list.asFlowable()
    .observeOn(Schedulers.computation())
    .map(rxResults -> doExpensiveWork(rxResults))
    .observeOn(AndroidSchedulers.mainThread())
    .subscribe( ... );
    





If you would like the ``asFlowable()`` to stop emitting items you can instruct RxJava to only emit only the first item by using the ``first()`` operator:



 

.. code-block:: java

   
    list.asFlowable()
         .first()
         .subscribe( ... ) // You only get the results once
    


 


Throws
______

See Also
________

<a href="https://realm.io/docs/java/latest/#rxjava">RxJava and Realm</a>

asChangesetObservable
---------------------

.. _io_realm_RealmList_asChangesetObservable__:

public **<any> (?)** asChangesetObservable ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Returns an Rx Observable that monitors changes to this RealmList. It will emit the current RealmList when subscribed. For each update to the RealmList a pair consisting of the RealmList and the :ref:`OrderedCollectionChangeSet <io_realm_OrderedCollectionChangeSet>` will be sent. The changeset will be ``null`` the first time an RealmList is emitted.

RealmList will continually be emitted as the RealmList is updated - ``onComplete`` will never be called.



Items emitted from Realm Observables are frozen (See :ref:`#freeze() <io_realm_RealmList_freeze__>`. This means that they are immutable and can be read on any thread.



Realm Observables always emit items from the thread holding the live Realm. This means that if you need to do further processing, it is recommend to observe the values on a computation scheduler:



.. code-block:: java

   list.asChangesetObservable()
    .observeOn(Schedulers.computation())
    .map((rxList, changes) -> doExpensiveWork(rxList, changes))
    .observeOn(AndroidSchedulers.mainThread())
    .subscribe( ... );
    






Throws
______

See Also
________

<a href="https://realm.io/docs/java/latest/#rxjava">RxJava and Realm</a>

addChangeListener
-----------------

.. _io_realm_RealmList_addChangeListener_OrderedRealmCollectionChangeListener_RealmList_E___:

public **void** addChangeListener (:ref:`io.realm.OrderedRealmCollectionChangeListener\<io.realm.RealmList\<E>> <io_realm_OrderedRealmCollectionChangeListener>` listener)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Adds a change listener to this :ref:`RealmList <io_realm_RealmList>`.

Registering a change listener will not prevent the underlying RealmList from being garbage collected. If the RealmList is garbage collected, the change listener will stop being triggered. To avoid this, keep a strong reference for as long as appropriate e.g. in a class variable.

 

.. code-block:: java

   
    public class MyActivity extends Activity {
   
        private RealmList<Dog> dogs; // Strong reference to keep listeners alive
   
        \@Override
        protected void onCreate(Bundle savedInstanceState) {
          super.onCreate(savedInstanceState);
          dogs = realm.where(Person.class).findFirst().getDogs();
          dogs.addChangeListener(new OrderedRealmCollectionChangeListener<RealmList<Dog>>() {
              \@Override
              public void onChange(RealmList<Dog> dogs, OrderedCollectionChangeSet changeSet) {
                  // React to change
              }
          });
        }
    }
    


 


Parameters
__________

- ``listener - ``the change listener to be notified.
   

Throws
______

.. _io_realm_RealmList_addChangeListener_RealmChangeListener_RealmList_E___:

public **void** addChangeListener (:ref:`io.realm.RealmChangeListener\<io.realm.RealmList\<E>> <io_realm_RealmChangeListener>` listener)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Adds a change listener to this :ref:`RealmList <io_realm_RealmList>`.

Registering a change listener will not prevent the underlying RealmList from being garbage collected. If the RealmList is garbage collected, the change listener will stop being triggered. To avoid this, keep a strong reference for as long as appropriate e.g. in a class variable.

 

.. code-block:: java

   
    public class MyActivity extends Activity {
   
        private RealmList<Dog> dogs; // Strong reference to keep listeners alive
   
        \@Override
        protected void onCreate(Bundle savedInstanceState) {
          super.onCreate(savedInstanceState);
          dogs = realm.where(Person.class).findFirst().getDogs();
          dogs.addChangeListener(new RealmChangeListener<RealmList<Dog>>() {
              \@Override
              public void onChange(RealmList<Dog> dogs) {
                  // React to change
              }
          });
        }
    }
    


 


Parameters
__________

- ``listener - ``the change listener to be notified.
   

Throws
______

removeChangeListener
--------------------

.. _io_realm_RealmList_removeChangeListener_OrderedRealmCollectionChangeListener_RealmList_E___:

public **void** removeChangeListener (:ref:`io.realm.OrderedRealmCollectionChangeListener\<io.realm.RealmList\<E>> <io_realm_OrderedRealmCollectionChangeListener>` listener)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Removes the specified change listener.
Parameters
__________

- ``listener - ``the change listener to be removed.
   

Throws
______

See Also
________

io.realm.RealmChangeListener

.. _io_realm_RealmList_removeChangeListener_RealmChangeListener_RealmList_E___:

public **void** removeChangeListener (:ref:`io.realm.RealmChangeListener\<io.realm.RealmList\<E>> <io_realm_RealmChangeListener>` listener)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Removes the specified change listener.
Parameters
__________

- ``listener - ``the change listener to be removed.
   

Throws
______

See Also
________

io.realm.RealmChangeListener

removeAllChangeListeners
------------------------

.. _io_realm_RealmList_removeAllChangeListeners__:

public **void** removeAllChangeListeners ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Removes all user-defined change listeners.
Throws
______

See Also
________

io.realm.RealmChangeListener


