
.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol



Class DefaultCompactOnLaunchCallback
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _io_realm_DefaultCompactOnLaunchCallback:



io.realm
========

`java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ 

*Implemented interfaces:*



- :ref:`io.realm.CompactOnLaunchCallback <io_realm_CompactOnLaunchCallback>` 


The default implementation for determining if a file should be compacted or not. This implementation will only trigger if the file is above 50 MB and more than 50% can be reclaimed.


Constructors
============



- ``io.realm.DefaultCompactOnLaunchCallback()`` 




Method Summary
==============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Method and Description
   
   * - 
       public **boolean**
     - 
       :ref:`shouldCompact <io_realm_DefaultCompactOnLaunchCallback_shouldCompact_long__long_>`  (**long** totalBytes,
                                      **long** usedBytes)
       
       
       
       
       
   
   


Inherited Methods
=================



- Methods inherited from interface `java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ : ``getClass`` , ``hashCode`` , ``equals`` , ``clone`` , ``toString`` , ``notify`` , ``notifyAll`` , ``wait`` , ``wait`` , ``wait`` , ``finalize`` 




Method Detail
=============

.. _shouldCompact:

.. _shouldCompact__:

.. _DefaultCompactOnLaunchCallback_shouldCompact:

.. _DefaultCompactOnLaunchCallback_shouldCompact__:



shouldCompact
-------------

.. _io_realm_DefaultCompactOnLaunchCallback_shouldCompact_long__long_:

.. _io_realm_DefaultCompactOnLaunchCallback_shouldCompact_long_long_:

.. list-table::
   :header-rows: 1
   
   * -    public **boolean** shouldCompact (**long** totalBytes,
                                      **long** usedBytes)
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
   
   

