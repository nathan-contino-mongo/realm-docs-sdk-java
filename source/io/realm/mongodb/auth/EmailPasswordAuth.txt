
.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol



Class EmailPasswordAuth
^^^^^^^^^^^^^^^^^^^^^^^

.. _io_realm_mongodb_auth_EmailPasswordAuth:



io.realm.mongodb.auth
=====================

`java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ 

Class encapsulating functionality provided when :ref:`User <io_realm_mongodb_User>` 's are logged in through the :ref:`Credentials.Provider.EMAIL_PASSWORD <Credentials_Provider_EMAIL_PASSWORD>`  provider.




Constructors
============



- ``io.realm.mongodb.auth.EmailPasswordAuth(App)`` 




Field Summary
=============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Field and Description
   
   * - ``protected final io.realm.mongodb.App`` 
       
       
     - ``app`` 
       
       
   
   


Method Summary
==============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Method and Description
   
   * - 
       protected abstract **void**
     - 
       :ref:`call <io_realm_mongodb_auth_EmailPasswordAuth_call_int__OsJavaNetworkTransport_NetworkTransportJNIResultCallback__String____>`  (**int** functionType,
                                      :ref:`OsJavaNetworkTransport.NetworkTransportJNIResultCallback <io_realm_internal_objectstore_OsJavaNetworkTransport_NetworkTransportJNIResultCallback>`  callback,
                                      `java.lang.String[] <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  args)
       
       
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`callResetPasswordFunction <io_realm_mongodb_auth_EmailPasswordAuth_callResetPasswordFunction_String__String__Object____>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  email,
                                               `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  newPassword,
                                               `java.lang.Object[] <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  args)
       
       Call the reset password function configured to the :ref:`Credentials.Provider.EMAIL_PASSWORD <Credentials_Provider_EMAIL_PASSWORD>`  provider.
       
       
       
       
       
   
   * - 
       public :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>` 
     - 
       :ref:`callResetPasswordFunctionAsync <io_realm_mongodb_auth_EmailPasswordAuth_callResetPasswordFunctionAsync_String__String__Object[]__App_Callback_Void__>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  email,
                                                              `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  newPassword,
                                                              `java.lang.Object[] <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  args,
                                                              :ref:`io.realm.mongodb.App.Callback\<java.lang.Void> <io_realm_mongodb_App_Callback>`  callback)
       
       Call the reset password function configured to the :ref:`Credentials.Provider.EMAIL_PASSWORD <Credentials_Provider_EMAIL_PASSWORD>`  provider.
       
       
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`confirmUser <io_realm_mongodb_auth_EmailPasswordAuth_confirmUser_String__String_>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  token,
                                 `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  tokenId)
       
       Confirms a user with the given token and token id.
       
       
       
   
   * - 
       public :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>` 
     - 
       :ref:`confirmUserAsync <io_realm_mongodb_auth_EmailPasswordAuth_confirmUserAsync_String__String__App_Callback_Void__>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  token,
                                                `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  tokenId,
                                                :ref:`io.realm.mongodb.App.Callback\<java.lang.Void> <io_realm_mongodb_App_Callback>`  callback)
       
       Confirms a user with the given token and token id.
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`registerUser <io_realm_mongodb_auth_EmailPasswordAuth_registerUser_String__String_>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  email,
                                  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  password)
       
       Registers a new user with the given email and password.
       
       
       
   
   * - 
       public :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>` 
     - 
       :ref:`registerUserAsync <io_realm_mongodb_auth_EmailPasswordAuth_registerUserAsync_String__String__App_Callback_Void__>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  email,
                                                 `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  password,
                                                 :ref:`io.realm.mongodb.App.Callback\<java.lang.Void> <io_realm_mongodb_App_Callback>`  callback)
       
       Registers a new user with the given email and password.
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`resendConfirmationEmail <io_realm_mongodb_auth_EmailPasswordAuth_resendConfirmationEmail_String_>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  email)
       
       Resend the confirmation for a user to the given email.
       
       
       
   
   * - 
       public :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>` 
     - 
       :ref:`resendConfirmationEmailAsync <io_realm_mongodb_auth_EmailPasswordAuth_resendConfirmationEmailAsync_String__App_Callback_Void__>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  email,
                                                            :ref:`io.realm.mongodb.App.Callback\<java.lang.Void> <io_realm_mongodb_App_Callback>`  callback)
       
       Resend the confirmation for a user to the given email.
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`resetPassword <io_realm_mongodb_auth_EmailPasswordAuth_resetPassword_String__String__String_>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  token,
                                   `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  tokenId,
                                   `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  newPassword)
       
       Resets the password of a user with the given token, token id, and new password.
       
       
       
   
   * - 
       public :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>` 
     - 
       :ref:`resetPasswordAsync <io_realm_mongodb_auth_EmailPasswordAuth_resetPasswordAsync_String__String__String__App_Callback_Void__>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  token,
                                                  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  tokenId,
                                                  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  newPassword,
                                                  :ref:`io.realm.mongodb.App.Callback\<java.lang.Void> <io_realm_mongodb_App_Callback>`  callback)
       
       Resets the newPassword of a user with the given token, token id, and new password.
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`retryCustomConfirmation <io_realm_mongodb_auth_EmailPasswordAuth_retryCustomConfirmation_String_>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  email)
       
       Retries the custom confirmation on a user for a given email.
       
       
       
   
   * - 
       public :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>` 
     - 
       :ref:`retryCustomConfirmationAsync <io_realm_mongodb_auth_EmailPasswordAuth_retryCustomConfirmationAsync_String__App_Callback_Void__>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  email,
                                                            :ref:`io.realm.mongodb.App.Callback\<java.lang.Void> <io_realm_mongodb_App_Callback>`  callback)
       
       Retries the custom confirmation on a user for a given email.
       
       
       
   
   * - 
       public **void**
     - 
       :ref:`sendResetPasswordEmail <io_realm_mongodb_auth_EmailPasswordAuth_sendResetPasswordEmail_String_>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  email)
       
       Sends a user a password reset email for the given email.
       
       
       
   
   * - 
       public :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>` 
     - 
       :ref:`sendResetPasswordEmailAsync <io_realm_mongodb_auth_EmailPasswordAuth_sendResetPasswordEmailAsync_String__App_Callback_Void__>`  (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  email,
                                                           :ref:`io.realm.mongodb.App.Callback\<java.lang.Void> <io_realm_mongodb_App_Callback>`  callback)
       
       Sends a user a password reset email for the given email.
       
       
       
   
   


Inherited Methods
=================



- Methods inherited from interface `java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ : 
   
   ``getClass`` , ``hashCode`` , ``equals`` , ``clone`` , ``toString`` , ``notify`` , ``notifyAll`` , ``wait`` , ``wait`` , ``wait`` , ``finalize`` 
   
   




Field Detail
============

.. _io_realm_mongodb_auth_EmailPasswordAuth_app:



``app`` 
--------




Method Detail
=============

.. _call:

.. _call__:

.. _EmailPasswordAuth_call:

.. _EmailPasswordAuth_call__:

.. _io_realm_mongodb_auth_EmailPasswordAuth_call:

.. _io_realm_mongodb_auth_EmailPasswordAuth_call__:



call
----

.. _io_realm_mongodb_auth_EmailPasswordAuth_call_int__OsJavaNetworkTransport_NetworkTransportJNIResultCallback__String____:

.. _io_realm_mongodb_auth_EmailPasswordAuth_call_int_NetworkTransportJNIResultCallback_String_:

.. _io_realm_mongodb_auth_EmailPasswordAuth_call_int__NetworkTransportJNIResultCallback__String_:

.. list-table::
   :header-rows: 1
   
   * -    protected abstract **void** call (**int** functionType,
                                      :ref:`OsJavaNetworkTransport.NetworkTransportJNIResultCallback <io_realm_internal_objectstore_OsJavaNetworkTransport_NetworkTransportJNIResultCallback>`  callback,
                                      `java.lang.String[] <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  args)
   
   * - 
       
       
       
       
       
       
       
       
       
       
       
   
   
.. _callResetPasswordFunction:

.. _callResetPasswordFunction__:

.. _EmailPasswordAuth_callResetPasswordFunction:

.. _EmailPasswordAuth_callResetPasswordFunction__:

.. _io_realm_mongodb_auth_EmailPasswordAuth_callResetPasswordFunction:

.. _io_realm_mongodb_auth_EmailPasswordAuth_callResetPasswordFunction__:



callResetPasswordFunction
-------------------------

.. _io_realm_mongodb_auth_EmailPasswordAuth_callResetPasswordFunction_String__String__Object____:

.. _io_realm_mongodb_auth_EmailPasswordAuth_callResetPasswordFunction_String_String_Object_:

.. _io_realm_mongodb_auth_EmailPasswordAuth_callResetPasswordFunction_String__String__Object_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** callResetPasswordFunction (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  email,
                                               `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  newPassword,
                                               `java.lang.Object[] <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  args)
   
   * - Call the reset password function configured to the :ref:`Credentials.Provider.EMAIL_PASSWORD <Credentials_Provider_EMAIL_PASSWORD>`  provider.
       
       
       
       
       
       
       **Parameters**
       
       - ``email`` - the email of the user.
          
          
          
       - ``newPassword`` - the new password of the user.
          
          
          
       - ``args`` - any additional arguments provided to the reset function. All arguments must be able to be converted to JSON compatible values using ``toString()`` .
          
          
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - :ref:`AppException <io_realm_mongodb_AppException>`  - if the server failed to confirm the user.
          
          
          
       
       
       
       
       
   
   
.. _callResetPasswordFunctionAsync:

.. _callResetPasswordFunctionAsync__:

.. _EmailPasswordAuth_callResetPasswordFunctionAsync:

.. _EmailPasswordAuth_callResetPasswordFunctionAsync__:

.. _io_realm_mongodb_auth_EmailPasswordAuth_callResetPasswordFunctionAsync:

.. _io_realm_mongodb_auth_EmailPasswordAuth_callResetPasswordFunctionAsync__:



callResetPasswordFunctionAsync
------------------------------

.. _io_realm_mongodb_auth_EmailPasswordAuth_callResetPasswordFunctionAsync_String__String__Object[]__App_Callback_Void__:

.. _io_realm_mongodb_auth_EmailPasswordAuth_callResetPasswordFunctionAsync_String_String_Object_Callback_:

.. _io_realm_mongodb_auth_EmailPasswordAuth_callResetPasswordFunctionAsync_String__String__Object__App_Callback_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>`  callResetPasswordFunctionAsync (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  email,
                                                              `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  newPassword,
                                                              `java.lang.Object[] <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__  args,
                                                              :ref:`io.realm.mongodb.App.Callback\<java.lang.Void> <io_realm_mongodb_App_Callback>`  callback)
   
   * - Call the reset password function configured to the :ref:`Credentials.Provider.EMAIL_PASSWORD <Credentials_Provider_EMAIL_PASSWORD>`  provider.
       
       
       
       
       
       
       **Parameters**
       
       - ``email`` - the email of the user.
          
          
          
       - ``newPassword`` - the new password of the user.
          
          
          
       - ``args`` - any additional arguments provided to the reset function. All arguments must be able to be converted to JSON compatible values using ``toString()`` .
          
          
          
          
          
       - ``callback`` - callback when the reset has completed or failed. The callback will always happen on the same thread as this this method is called on.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if called from a non-looper thread.
          
          
          
       
       
       
       
       
   
   
.. _confirmUser:

.. _confirmUser__:

.. _EmailPasswordAuth_confirmUser:

.. _EmailPasswordAuth_confirmUser__:

.. _io_realm_mongodb_auth_EmailPasswordAuth_confirmUser:

.. _io_realm_mongodb_auth_EmailPasswordAuth_confirmUser__:



confirmUser
-----------

.. _io_realm_mongodb_auth_EmailPasswordAuth_confirmUser_String__String_:

.. _io_realm_mongodb_auth_EmailPasswordAuth_confirmUser_String_String_:

.. _io_realm_mongodb_auth_EmailPasswordAuth_confirmUser_String__String_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** confirmUser (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  token,
                                 `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  tokenId)
   
   * - Confirms a user with the given token and token id.
       
       
       
       
       **Parameters**
       
       - ``token`` - the confirmation token.
          
          
          
       - ``tokenId`` - the id of the confirmation token.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - :ref:`AppException <io_realm_mongodb_AppException>`  - if the server failed to confirm the user.
          
          
          
       
       
       
       
       
   
   
.. _confirmUserAsync:

.. _confirmUserAsync__:

.. _EmailPasswordAuth_confirmUserAsync:

.. _EmailPasswordAuth_confirmUserAsync__:

.. _io_realm_mongodb_auth_EmailPasswordAuth_confirmUserAsync:

.. _io_realm_mongodb_auth_EmailPasswordAuth_confirmUserAsync__:



confirmUserAsync
----------------

.. _io_realm_mongodb_auth_EmailPasswordAuth_confirmUserAsync_String__String__App_Callback_Void__:

.. _io_realm_mongodb_auth_EmailPasswordAuth_confirmUserAsync_String_String_Callback_:

.. _io_realm_mongodb_auth_EmailPasswordAuth_confirmUserAsync_String__String__App_Callback_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>`  confirmUserAsync (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  token,
                                                `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  tokenId,
                                                :ref:`io.realm.mongodb.App.Callback\<java.lang.Void> <io_realm_mongodb_App_Callback>`  callback)
   
   * - Confirms a user with the given token and token id.
       
       
       
       
       **Parameters**
       
       - ``token`` - the confirmation token.
          
          
          
       - ``tokenId`` - the id of the confirmation token.
          
          
          
       - ``callback`` - callback when confirmation has completed or failed. The callback will always happen on the same thread as this method is called on.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if called from a non-looper thread.
          
          
          
       
       
       
       
       
   
   
.. _registerUser:

.. _registerUser__:

.. _EmailPasswordAuth_registerUser:

.. _EmailPasswordAuth_registerUser__:

.. _io_realm_mongodb_auth_EmailPasswordAuth_registerUser:

.. _io_realm_mongodb_auth_EmailPasswordAuth_registerUser__:



registerUser
------------

.. _io_realm_mongodb_auth_EmailPasswordAuth_registerUser_String__String_:

.. _io_realm_mongodb_auth_EmailPasswordAuth_registerUser_String_String_:

.. _io_realm_mongodb_auth_EmailPasswordAuth_registerUser_String__String_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** registerUser (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  email,
                                  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  password)
   
   * - Registers a new user with the given email and password.
       
       
       
       
       **Parameters**
       
       - ``email`` - the email to register with. This will be the username used during log in.
          
          
          
       - ``password`` - the password to associate with the email. The password must be between 6 and 128 characters long.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - :ref:`AppException <io_realm_mongodb_AppException>`  - if the server failed to register the user.
          
          
          
       
       
       
       
       
   
   
.. _registerUserAsync:

.. _registerUserAsync__:

.. _EmailPasswordAuth_registerUserAsync:

.. _EmailPasswordAuth_registerUserAsync__:

.. _io_realm_mongodb_auth_EmailPasswordAuth_registerUserAsync:

.. _io_realm_mongodb_auth_EmailPasswordAuth_registerUserAsync__:



registerUserAsync
-----------------

.. _io_realm_mongodb_auth_EmailPasswordAuth_registerUserAsync_String__String__App_Callback_Void__:

.. _io_realm_mongodb_auth_EmailPasswordAuth_registerUserAsync_String_String_Callback_:

.. _io_realm_mongodb_auth_EmailPasswordAuth_registerUserAsync_String__String__App_Callback_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>`  registerUserAsync (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  email,
                                                 `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  password,
                                                 :ref:`io.realm.mongodb.App.Callback\<java.lang.Void> <io_realm_mongodb_App_Callback>`  callback)
   
   * - Registers a new user with the given email and password.
       
       
       
       
       **Parameters**
       
       - ``email`` - the email to register with. This will be the username used during log in.
          
          
          
       - ``password`` - the password to associated with the email. The password must be between 6 and 128 characters long.
          
          
          
       - ``callback`` - callback when registration has completed or failed. The callback will always happen on the same thread as this method is called on.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if called from a non-looper thread.
          
          
          
       - :ref:`AppException <io_realm_mongodb_AppException>`  - if the server failed to register the user.
          
          
          
       
       
       
       
       
   
   
.. _resendConfirmationEmail:

.. _resendConfirmationEmail__:

.. _EmailPasswordAuth_resendConfirmationEmail:

.. _EmailPasswordAuth_resendConfirmationEmail__:

.. _io_realm_mongodb_auth_EmailPasswordAuth_resendConfirmationEmail:

.. _io_realm_mongodb_auth_EmailPasswordAuth_resendConfirmationEmail__:



resendConfirmationEmail
-----------------------

.. _io_realm_mongodb_auth_EmailPasswordAuth_resendConfirmationEmail_String_:

.. _io_realm_mongodb_auth_EmailPasswordAuth_resendConfirmationEmail_String_:

.. _io_realm_mongodb_auth_EmailPasswordAuth_resendConfirmationEmail_String_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** resendConfirmationEmail (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  email)
   
   * - Resend the confirmation for a user to the given email.
       
       
       
       
       **Parameters**
       
       - ``email`` - the email of the user.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - :ref:`AppException <io_realm_mongodb_AppException>`  - if the server failed to confirm the user.
          
          
          
       
       
       
       
       
   
   
.. _resendConfirmationEmailAsync:

.. _resendConfirmationEmailAsync__:

.. _EmailPasswordAuth_resendConfirmationEmailAsync:

.. _EmailPasswordAuth_resendConfirmationEmailAsync__:

.. _io_realm_mongodb_auth_EmailPasswordAuth_resendConfirmationEmailAsync:

.. _io_realm_mongodb_auth_EmailPasswordAuth_resendConfirmationEmailAsync__:



resendConfirmationEmailAsync
----------------------------

.. _io_realm_mongodb_auth_EmailPasswordAuth_resendConfirmationEmailAsync_String__App_Callback_Void__:

.. _io_realm_mongodb_auth_EmailPasswordAuth_resendConfirmationEmailAsync_String_Callback_:

.. _io_realm_mongodb_auth_EmailPasswordAuth_resendConfirmationEmailAsync_String__App_Callback_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>`  resendConfirmationEmailAsync (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  email,
                                                            :ref:`io.realm.mongodb.App.Callback\<java.lang.Void> <io_realm_mongodb_App_Callback>`  callback)
   
   * - Resend the confirmation for a user to the given email.
       
       
       
       
       **Parameters**
       
       - ``email`` - the email of the user.
          
          
          
       - ``callback`` - callback when resending the email has completed or failed. The callback will always happen on the same thread as this method is called on.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if called from a non-looper thread.
          
          
          
       
       
       
       
       
   
   
.. _resetPassword:

.. _resetPassword__:

.. _EmailPasswordAuth_resetPassword:

.. _EmailPasswordAuth_resetPassword__:

.. _io_realm_mongodb_auth_EmailPasswordAuth_resetPassword:

.. _io_realm_mongodb_auth_EmailPasswordAuth_resetPassword__:



resetPassword
-------------

.. _io_realm_mongodb_auth_EmailPasswordAuth_resetPassword_String__String__String_:

.. _io_realm_mongodb_auth_EmailPasswordAuth_resetPassword_String_String_String_:

.. _io_realm_mongodb_auth_EmailPasswordAuth_resetPassword_String__String__String_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** resetPassword (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  token,
                                   `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  tokenId,
                                   `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  newPassword)
   
   * - Resets the password of a user with the given token, token id, and new password.
       
       
       
       
       **Parameters**
       
       - ``token`` - the reset password token.
          
          
          
       - ``tokenId`` - the id of the reset password token.
          
          
          
       - ``newPassword`` - the new password for the user identified by the ``token`` . The password must be between 6 and 128 characters long.
          
          
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - :ref:`AppException <io_realm_mongodb_AppException>`  - if the server failed to confirm the user.
          
          
          
       
       
       
       
       
   
   
.. _resetPasswordAsync:

.. _resetPasswordAsync__:

.. _EmailPasswordAuth_resetPasswordAsync:

.. _EmailPasswordAuth_resetPasswordAsync__:

.. _io_realm_mongodb_auth_EmailPasswordAuth_resetPasswordAsync:

.. _io_realm_mongodb_auth_EmailPasswordAuth_resetPasswordAsync__:



resetPasswordAsync
------------------

.. _io_realm_mongodb_auth_EmailPasswordAuth_resetPasswordAsync_String__String__String__App_Callback_Void__:

.. _io_realm_mongodb_auth_EmailPasswordAuth_resetPasswordAsync_String_String_String_Callback_:

.. _io_realm_mongodb_auth_EmailPasswordAuth_resetPasswordAsync_String__String__String__App_Callback_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>`  resetPasswordAsync (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  token,
                                                  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  tokenId,
                                                  `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  newPassword,
                                                  :ref:`io.realm.mongodb.App.Callback\<java.lang.Void> <io_realm_mongodb_App_Callback>`  callback)
   
   * - Resets the newPassword of a user with the given token, token id, and new password.
       
       
       
       
       **Parameters**
       
       - ``token`` - the reset password token.
          
          
          
       - ``tokenId`` - the id of the reset password token.
          
          
          
       - ``newPassword`` - the new password for the user identified by the ``token`` . The password must be between 6 and 128 characters long.
          
          
          
          
          
       - ``callback`` - callback when the reset has completed or failed. The callback will always happen on the same thread as this this method is called on.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if called from a non-looper thread.
          
          
          
       
       
       
       
       
   
   
.. _retryCustomConfirmation:

.. _retryCustomConfirmation__:

.. _EmailPasswordAuth_retryCustomConfirmation:

.. _EmailPasswordAuth_retryCustomConfirmation__:

.. _io_realm_mongodb_auth_EmailPasswordAuth_retryCustomConfirmation:

.. _io_realm_mongodb_auth_EmailPasswordAuth_retryCustomConfirmation__:



retryCustomConfirmation
-----------------------

.. _io_realm_mongodb_auth_EmailPasswordAuth_retryCustomConfirmation_String_:

.. _io_realm_mongodb_auth_EmailPasswordAuth_retryCustomConfirmation_String_:

.. _io_realm_mongodb_auth_EmailPasswordAuth_retryCustomConfirmation_String_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** retryCustomConfirmation (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  email)
   
   * - Retries the custom confirmation on a user for a given email.
       
       
       
       
       **Parameters**
       
       - ``email`` - the email of the user.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - :ref:`AppException <io_realm_mongodb_AppException>`  - if the server failed to confirm the user.
          
          
          
       
       
       
       
       
   
   
.. _retryCustomConfirmationAsync:

.. _retryCustomConfirmationAsync__:

.. _EmailPasswordAuth_retryCustomConfirmationAsync:

.. _EmailPasswordAuth_retryCustomConfirmationAsync__:

.. _io_realm_mongodb_auth_EmailPasswordAuth_retryCustomConfirmationAsync:

.. _io_realm_mongodb_auth_EmailPasswordAuth_retryCustomConfirmationAsync__:



retryCustomConfirmationAsync
----------------------------

.. _io_realm_mongodb_auth_EmailPasswordAuth_retryCustomConfirmationAsync_String__App_Callback_Void__:

.. _io_realm_mongodb_auth_EmailPasswordAuth_retryCustomConfirmationAsync_String_Callback_:

.. _io_realm_mongodb_auth_EmailPasswordAuth_retryCustomConfirmationAsync_String__App_Callback_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>`  retryCustomConfirmationAsync (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  email,
                                                            :ref:`io.realm.mongodb.App.Callback\<java.lang.Void> <io_realm_mongodb_App_Callback>`  callback)
   
   * - Retries the custom confirmation on a user for a given email.
       
       
       
       
       **Parameters**
       
       - ``email`` - the email of the user.
          
          
          
       - ``callback`` - callback when retrying the custom confirmation has completed or failed. The callback will always happen on the same thread as this method is called on.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - `IllegalStateException <https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html>`__  - if called from a non-looper thread.
          
          
          
       
       
       
       
       
   
   
.. _sendResetPasswordEmail:

.. _sendResetPasswordEmail__:

.. _EmailPasswordAuth_sendResetPasswordEmail:

.. _EmailPasswordAuth_sendResetPasswordEmail__:

.. _io_realm_mongodb_auth_EmailPasswordAuth_sendResetPasswordEmail:

.. _io_realm_mongodb_auth_EmailPasswordAuth_sendResetPasswordEmail__:



sendResetPasswordEmail
----------------------

.. _io_realm_mongodb_auth_EmailPasswordAuth_sendResetPasswordEmail_String_:

.. _io_realm_mongodb_auth_EmailPasswordAuth_sendResetPasswordEmail_String_:

.. _io_realm_mongodb_auth_EmailPasswordAuth_sendResetPasswordEmail_String_:

.. list-table::
   :header-rows: 1
   
   * -    public **void** sendResetPasswordEmail (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  email)
   
   * - Sends a user a password reset email for the given email.
       
       
       
       
       **Parameters**
       
       - ``email`` - the email of the user.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - :ref:`AppException <io_realm_mongodb_AppException>`  - if the server failed to confirm the user.
          
          
          
       
       
       
       
       
   
   
.. _sendResetPasswordEmailAsync:

.. _sendResetPasswordEmailAsync__:

.. _EmailPasswordAuth_sendResetPasswordEmailAsync:

.. _EmailPasswordAuth_sendResetPasswordEmailAsync__:

.. _io_realm_mongodb_auth_EmailPasswordAuth_sendResetPasswordEmailAsync:

.. _io_realm_mongodb_auth_EmailPasswordAuth_sendResetPasswordEmailAsync__:



sendResetPasswordEmailAsync
---------------------------

.. _io_realm_mongodb_auth_EmailPasswordAuth_sendResetPasswordEmailAsync_String__App_Callback_Void__:

.. _io_realm_mongodb_auth_EmailPasswordAuth_sendResetPasswordEmailAsync_String_Callback_:

.. _io_realm_mongodb_auth_EmailPasswordAuth_sendResetPasswordEmailAsync_String__App_Callback_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmAsyncTask <io_realm_RealmAsyncTask>`  sendResetPasswordEmailAsync (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  email,
                                                           :ref:`io.realm.mongodb.App.Callback\<java.lang.Void> <io_realm_mongodb_App_Callback>`  callback)
   
   * - Sends a user a password reset email for the given email.
       
       
       
       
       **Parameters**
       
       - ``email`` - the email of the user.
          
          
          
       - ``callback`` - callback when sending the email has completed or failed. The callback will always happen on the same thread as this method is called on.
          
          
          
       
       
       
       
       
       
       **Throws**
       
       - :ref:`AppException <io_realm_mongodb_AppException>`  - if the server failed to confirm the user.
          
          
          
       
       
       
       
       
   
   

