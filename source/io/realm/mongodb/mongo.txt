
.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

io.realm.mongodb.mongo
^^^^^^^^^^^^^^^^^^^^^^

.. _io_realm_mongodb_mongo_MongoCollection:

*Superclass:*

- `java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__

The MongoCollection interface provides read and write access to documents.Use **MongoDatabase#getCollection (?)**to get a collection instance.



Before any access is possible, there must be an active, logged-in user.


Method Summary
==============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Method and Description
   
   * - public :ref:`MongoNamespace <io_realm_mongodb_mongo_MongoNamespace>`
     - :ref:`getNamespace <io_realm_mongodb_mongo_MongoCollection_getNamespace____>` ()
       
       Gets the namespace of this collection, i.e.
       
       
       
   
   * - public `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__
     - :ref:`getName <io_realm_mongodb_mongo_MongoCollection_getName____>` ()
       
       Gets the name of this collection
       
       
       
   
   * - public `Class <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__
     - :ref:`getDocumentClass <io_realm_mongodb_mongo_MongoCollection_getDocumentClass____>` ()
       
       Gets the class of documents stored in this collection.
       
       
       
   
   * - public **CodecRegistry (?)**
     - :ref:`getCodecRegistry <io_realm_mongodb_mongo_MongoCollection_getCodecRegistry____>` ()
       
       Gets the codec registry for the MongoCollection.
       
       
       
   
   * - public :ref:`MongoCollection <io_realm_mongodb_mongo_MongoCollection>`
     - :ref:`withDocumentClass <io_realm_mongodb_mongo_MongoCollection_withDocumentClass__Class_NewDocumentT___>` <**NewDocumentT (?)** >(`java.lang.Class\<NewDocumentT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ clazz)
       
       Creates a new MongoCollection instance with a different default class to cast any documents returned from the database into.
       
       
       
   
   * - public :ref:`MongoCollection <io_realm_mongodb_mongo_MongoCollection>`
     - :ref:`withCodecRegistry <io_realm_mongodb_mongo_MongoCollection_withCodecRegistry__CodecRegistry__>` (**CodecRegistry (?)** codecRegistry)
       
       Creates a new MongoCollection instance with a different codec registry.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`count <io_realm_mongodb_mongo_MongoCollection_count____>` ()
       
       Counts the number of documents in the collection.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`count <io_realm_mongodb_mongo_MongoCollection_count__Bson__>` (**Bson (?)** filter)
       
       Counts the number of documents in the collection according to the given options.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`count <io_realm_mongodb_mongo_MongoCollection_count__Bson__CountOptions__>` (**Bson (?)** filter, :ref:`CountOptions <io_realm_mongodb_mongo_options_CountOptions>` options)
       
       Counts the number of documents in the collection according to the given options.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOne <io_realm_mongodb_mongo_MongoCollection_findOne____>` ()
       
       Finds a document in the collection.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOne <io_realm_mongodb_mongo_MongoCollection_findOne__Class_ResultT___>` <**ResultT (?)** >(`java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ resultClass)
       
       Finds a document in the collection.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOne <io_realm_mongodb_mongo_MongoCollection_findOne__Bson__>` (**Bson (?)** filter)
       
       Finds a document in the collection.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOne <io_realm_mongodb_mongo_MongoCollection_findOne__Bson__Class_ResultT___>` <**ResultT (?)** >(**Bson (?)** filter, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ resultClass)
       
       Finds a document in the collection.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOne <io_realm_mongodb_mongo_MongoCollection_findOne__Bson__FindOptions__>` (**Bson (?)** filter, :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` options)
       
       Finds a document in the collection.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOne <io_realm_mongodb_mongo_MongoCollection_findOne__Bson__FindOptions__Class_ResultT___>` <**ResultT (?)** >(**Bson (?)** filter, :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` options, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ resultClass)
       
       Finds a document in the collection.
       
       
       
   
   * - public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`
     - :ref:`find <io_realm_mongodb_mongo_MongoCollection_find____>` ()
       
       Finds all documents in the collection.
       
       
       
   
   * - public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`
     - :ref:`find <io_realm_mongodb_mongo_MongoCollection_find__FindOptions__>` (:ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` options)
       
       Finds all documents in the collection using **FindOptions (?)**to build the query.
       
       
       
       
       
   
   * - public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`
     - :ref:`find <io_realm_mongodb_mongo_MongoCollection_find__Class_ResultT___>` <**ResultT (?)** >(`java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ resultClass)
       
       Finds all documents in the collection specifying an output class.
       
       
       
   
   * - public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`
     - :ref:`find <io_realm_mongodb_mongo_MongoCollection_find__Class_ResultT___FindOptions__>` <**ResultT (?)** >(`java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ resultClass, :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` options)
       
       Finds all documents in the collection specifying an output class and also using **FindOptions (?)**to build the query.
       
       
       
       
       
   
   * - public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`
     - :ref:`find <io_realm_mongodb_mongo_MongoCollection_find__Bson__>` (**Bson (?)** filter)
       
       Finds all documents in the collection that match the given filter.
       
       
       
   
   * - public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`
     - :ref:`find <io_realm_mongodb_mongo_MongoCollection_find__Bson__FindOptions__>` (**Bson (?)** filter, :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` options)
       
       Finds all documents in the collection that match the given filter using **FindOptions (?)**to build the query.
       
       
       
       
       
   
   * - public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`
     - :ref:`find <io_realm_mongodb_mongo_MongoCollection_find__Bson__Class_ResultT___>` <**ResultT (?)** >(**Bson (?)** filter, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ resultClass)
       
       Finds all documents in the collection that match the given filter specifying an output class.
       
       
       
   
   * - public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`
     - :ref:`find <io_realm_mongodb_mongo_MongoCollection_find__Bson__Class_ResultT___FindOptions__>` <**ResultT (?)** >(**Bson (?)** filter, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ resultClass, :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` options)
       
       Finds all documents in the collection that match the given filter specifying an output class and also using **FindOptions (?)**to build the query.
       
       
       
       
       
   
   * - public :ref:`AggregateIterable <io_realm_mongodb_mongo_iterable_AggregateIterable>`
     - :ref:`aggregate <io_realm_mongodb_mongo_MongoCollection_aggregate__List___extends_Bson___>` (`java.util.List\<? extends Bson> <https://docs.oracle.com/javase/7/docs/api/java/util/List.html>`__ pipeline)
       
       Aggregates documents according to the specified aggregation pipeline.
       
       
       
   
   * - public :ref:`AggregateIterable <io_realm_mongodb_mongo_iterable_AggregateIterable>`
     - :ref:`aggregate <io_realm_mongodb_mongo_MongoCollection_aggregate__List___extends_Bson___Class_ResultT___>` <**ResultT (?)** >(`java.util.List\<? extends Bson> <https://docs.oracle.com/javase/7/docs/api/java/util/List.html>`__ pipeline, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ resultClass)
       
       Aggregates documents according to the specified aggregation pipeline specifying an output class.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`insertOne <io_realm_mongodb_mongo_MongoCollection_insertOne__DocumentT__>` (**DocumentT (?)** document)
       
       Inserts the provided document.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`insertMany <io_realm_mongodb_mongo_MongoCollection_insertMany__List___extends_DocumentT___>` (`java.util.List\<? extends DocumentT> <https://docs.oracle.com/javase/7/docs/api/java/util/List.html>`__ documents)
       
       Inserts one or more documents.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`deleteOne <io_realm_mongodb_mongo_MongoCollection_deleteOne__Bson__>` (**Bson (?)** filter)
       
       Removes at most one document from the collection that matches the given filter.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`deleteMany <io_realm_mongodb_mongo_MongoCollection_deleteMany__Bson__>` (**Bson (?)** filter)
       
       Removes all documents from the collection that match the given query filter.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`updateOne <io_realm_mongodb_mongo_MongoCollection_updateOne__Bson__Bson__>` (**Bson (?)** filter, **Bson (?)** update)
       
       Update a single document in the collection according to the specified arguments.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`updateOne <io_realm_mongodb_mongo_MongoCollection_updateOne__Bson__Bson__UpdateOptions__>` (**Bson (?)** filter, **Bson (?)** update, :ref:`UpdateOptions <io_realm_mongodb_mongo_options_UpdateOptions>` updateOptions)
       
       Update a single document in the collection according to the specified arguments.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`updateMany <io_realm_mongodb_mongo_MongoCollection_updateMany__Bson__Bson__>` (**Bson (?)** filter, **Bson (?)** update)
       
       Update all documents in the collection according to the specified arguments.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`updateMany <io_realm_mongodb_mongo_MongoCollection_updateMany__Bson__Bson__UpdateOptions__>` (**Bson (?)** filter, **Bson (?)** update, :ref:`UpdateOptions <io_realm_mongodb_mongo_options_UpdateOptions>` updateOptions)
       
       Update all documents in the collection according to the specified arguments.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOneAndUpdate <io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate__Bson__Bson__>` (**Bson (?)** filter, **Bson (?)** update)
       
       Finds a document in the collection and performs the given update.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOneAndUpdate <io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate__Bson__Bson__Class_ResultT___>` <**ResultT (?)** >(**Bson (?)** filter, **Bson (?)** update, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ resultClass)
       
       Finds a document in the collection and performs the given update.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOneAndUpdate <io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate__Bson__Bson__FindOneAndModifyOptions__>` (**Bson (?)** filter, **Bson (?)** update, :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` options)
       
       Finds a document in the collection and performs the given update.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOneAndUpdate <io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate__Bson__Bson__FindOneAndModifyOptions__Class_ResultT___>` <**ResultT (?)** >(**Bson (?)** filter, **Bson (?)** update, :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` options, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ resultClass)
       
       Finds a document in the collection and performs the given update.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOneAndReplace <io_realm_mongodb_mongo_MongoCollection_findOneAndReplace__Bson__Bson__>` (**Bson (?)** filter, **Bson (?)** replacement)
       
       Finds a document in the collection and replaces it with the given document.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOneAndReplace <io_realm_mongodb_mongo_MongoCollection_findOneAndReplace__Bson__Bson__Class_ResultT___>` <**ResultT (?)** >(**Bson (?)** filter, **Bson (?)** replacement, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ resultClass)
       
       Finds a document in the collection and replaces it with the given document.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOneAndReplace <io_realm_mongodb_mongo_MongoCollection_findOneAndReplace__Bson__Bson__FindOneAndModifyOptions__>` (**Bson (?)** filter, **Bson (?)** replacement, :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` options)
       
       Finds a document in the collection and replaces it with the given document.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOneAndReplace <io_realm_mongodb_mongo_MongoCollection_findOneAndReplace__Bson__Bson__FindOneAndModifyOptions__Class_ResultT___>` <**ResultT (?)** >(**Bson (?)** filter, **Bson (?)** replacement, :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` options, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ resultClass)
       
       Finds a document in the collection and replaces it with the given document.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOneAndDelete <io_realm_mongodb_mongo_MongoCollection_findOneAndDelete__Bson__>` (**Bson (?)** filter)
       
       Finds a document in the collection and delete it.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOneAndDelete <io_realm_mongodb_mongo_MongoCollection_findOneAndDelete__Bson__Class_ResultT___>` <**ResultT (?)** >(**Bson (?)** filter, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ resultClass)
       
       Finds a document in the collection and delete it.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOneAndDelete <io_realm_mongodb_mongo_MongoCollection_findOneAndDelete__Bson__FindOneAndModifyOptions__>` (**Bson (?)** filter, :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` options)
       
       Finds a document in the collection and delete it.
       
       
       
   
   * - public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`
     - :ref:`findOneAndDelete <io_realm_mongodb_mongo_MongoCollection_findOneAndDelete__Bson__FindOneAndModifyOptions__Class_ResultT___>` <**ResultT (?)** >(**Bson (?)** filter, :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` options, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ resultClass)
       
       Finds a document in the collection and delete it.
       
       
       
   
   * - public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>`
     - :ref:`watch <io_realm_mongodb_mongo_MongoCollection_watch____>` ()
       
       Watches a collection.
       
       
       
   
   * - public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>`
     - :ref:`watch <io_realm_mongodb_mongo_MongoCollection_watch__BsonValue_____>` (**BsonValue[] (?)** ids)
       
       Watches specified IDs in a collection.
       
       
       
   
   * - public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>`
     - :ref:`watch <io_realm_mongodb_mongo_MongoCollection_watch__ObjectId_____>` (**ObjectId[] (?)** ids)
       
       Watches specified IDs in a collection.
       
       
       
   
   * - public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>`
     - :ref:`watchWithFilter <io_realm_mongodb_mongo_MongoCollection_watchWithFilter__Document__>` (**Document (?)** matchFilter)
       
       Watches a collection.
       
       
       
   
   * - public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>`
     - :ref:`watchWithFilter <io_realm_mongodb_mongo_MongoCollection_watchWithFilter__BsonDocument__>` (**BsonDocument (?)** matchFilter)
       
       Watches a collection.
       
       
       
   
   * - public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>`
     - :ref:`watchAsync <io_realm_mongodb_mongo_MongoCollection_watchAsync____>` ()
       
       Watches a collection asynchronously.
       
       
       
   
   * - public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>`
     - :ref:`watchAsync <io_realm_mongodb_mongo_MongoCollection_watchAsync__BsonValue_____>` (**BsonValue[] (?)** ids)
       
       Watches specified IDs in a collection asynchronously.
       
       
       
   
   * - public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>`
     - :ref:`watchAsync <io_realm_mongodb_mongo_MongoCollection_watchAsync__ObjectId_____>` (**ObjectId[] (?)** ids)
       
       Watches specified IDs in a collection asynchronously.
       
       
       
   
   * - public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>`
     - :ref:`watchWithFilterAsync <io_realm_mongodb_mongo_MongoCollection_watchWithFilterAsync__Document__>` (**Document (?)** matchFilter)
       
       Watches a collection asynchronously.
       
       
       
   
   * - public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>`
     - :ref:`watchWithFilterAsync <io_realm_mongodb_mongo_MongoCollection_watchWithFilterAsync__BsonDocument__>` (**BsonDocument (?)** matchFilter)
       
       Watches a collection asynchronously.
       
       
       
   
   
Method Detail
=============

.. _io_realm_mongodb_mongo_MongoCollection_getNamespace____:

``getNamespace``
----------------

public :ref:`MongoNamespace <io_realm_mongodb_mongo_MongoNamespace>` getNamespace ()

Gets the namespace of this collection, i.e. the database and collection names together.
.. _io_realm_mongodb_mongo_MongoCollection_getName____:

``getName``
-----------

public `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ getName ()

Gets the name of this collection
.. _io_realm_mongodb_mongo_MongoCollection_getDocumentClass____:

``getDocumentClass``
--------------------

public `Class <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ getDocumentClass ()

Gets the class of documents stored in this collection.If you used the simple **MongoDatabase#getCollection(String) (?)**to get this collection, this is **org.bson.Document (?)**.




.. _io_realm_mongodb_mongo_MongoCollection_getCodecRegistry____:

``getCodecRegistry``
--------------------

public **CodecRegistry (?)** getCodecRegistry ()

Gets the codec registry for the MongoCollection.
.. _io_realm_mongodb_mongo_MongoCollection_withDocumentClass__Class_NewDocumentT___:

``withDocumentClass``
---------------------

public :ref:`MongoCollection <io_realm_mongodb_mongo_MongoCollection>` withDocumentClass <**NewDocumentT (?)** >(`java.lang.Class\<NewDocumentT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ clazz)

Creates a new MongoCollection instance with a different default class to cast any documents returned from the database into.
Type Parameters
~~~~~~~~~~~~~~~

- ``NewDocumentT - ``The type that the new collection will encode documents from and decode documents to.
   

Parameters
~~~~~~~~~~

- ``clazz - ``the default class to which any documents returned from the database will be cast.
   

.. _io_realm_mongodb_mongo_MongoCollection_withCodecRegistry__CodecRegistry__:

``withCodecRegistry``
---------------------

public :ref:`MongoCollection <io_realm_mongodb_mongo_MongoCollection>` withCodecRegistry (**CodecRegistry (?)** codecRegistry)

Creates a new MongoCollection instance with a different codec registry.
Parameters
~~~~~~~~~~

- ``codecRegistry - ``the new **CodecRegistry (?)**for the collection.
   
   
   

.. _io_realm_mongodb_mongo_MongoCollection_count____:

``count``
---------

public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` count ()

Counts the number of documents in the collection.
.. _io_realm_mongodb_mongo_MongoCollection_count__Bson__:

``count``
---------

public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` count (**Bson (?)** filter)

Counts the number of documents in the collection according to the given options.
Parameters
~~~~~~~~~~

- ``filter - ``the query filter
   

.. _io_realm_mongodb_mongo_MongoCollection_count__Bson__CountOptions__:

``count``
---------

public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` count (**Bson (?)** filter, :ref:`CountOptions <io_realm_mongodb_mongo_options_CountOptions>` options)

Counts the number of documents in the collection according to the given options.
Parameters
~~~~~~~~~~

- ``filter - ``the query filter
   
- ``options - ``the options describing the count
   

.. _io_realm_mongodb_mongo_MongoCollection_findOne____:

``findOne``
-----------

public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOne ()

Finds a document in the collection.
.. _io_realm_mongodb_mongo_MongoCollection_findOne__Class_ResultT___:

``findOne``
-----------

public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOne <**ResultT (?)** >(`java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ resultClass)

Finds a document in the collection.
Type Parameters
~~~~~~~~~~~~~~~

- ``ResultT - ``the target document type
   

Parameters
~~~~~~~~~~

- ``resultClass - ``the class to decode each document into
   

.. _io_realm_mongodb_mongo_MongoCollection_findOne__Bson__:

``findOne``
-----------

public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOne (**Bson (?)** filter)

Finds a document in the collection.
Parameters
~~~~~~~~~~

- ``filter - ``the query filter
   

.. _io_realm_mongodb_mongo_MongoCollection_findOne__Bson__Class_ResultT___:

``findOne``
-----------

public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOne <**ResultT (?)** >(**Bson (?)** filter, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ resultClass)

Finds a document in the collection.
Type Parameters
~~~~~~~~~~~~~~~

- ``ResultT - ``the target document type of the iterable.
   

Parameters
~~~~~~~~~~

- ``filter - ``the query filter
   
- ``resultClass - ``the class to decode each document into
   

.. _io_realm_mongodb_mongo_MongoCollection_findOne__Bson__FindOptions__:

``findOne``
-----------

public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOne (**Bson (?)** filter, :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` options)

Finds a document in the collection.
Parameters
~~~~~~~~~~

- ``filter - ``the query filter
   
- ``options - ``a **FindOptions (?)**struct
   
   
   

.. _io_realm_mongodb_mongo_MongoCollection_findOne__Bson__FindOptions__Class_ResultT___:

``findOne``
-----------

public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOne <**ResultT (?)** >(**Bson (?)** filter, :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` options, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ resultClass)

Finds a document in the collection.
Type Parameters
~~~~~~~~~~~~~~~

- ``ResultT - ``the target document type of the iterable.
   

Parameters
~~~~~~~~~~

- ``filter - ``the query filter
   
- ``options - ``a **FindOptions (?)**struct
   
   
   
- ``resultClass - ``the class to decode each document into
   

.. _io_realm_mongodb_mongo_MongoCollection_find____:

``find``
--------

public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` find ()

Finds all documents in the collection.All documents will be delivered in the form of a **FindIterable (?)**from which individual elements can be extracted.




.. _io_realm_mongodb_mongo_MongoCollection_find__FindOptions__:

``find``
--------

public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` find (:ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` options)

Finds all documents in the collection using **FindOptions (?)**to build the query.

All documents will be delivered in the form of a **FindIterable (?)**from which individual elements can be extracted.




Parameters
~~~~~~~~~~

- ``options - ``a **FindOptions (?)**struct for building the query
   
   
   

.. _io_realm_mongodb_mongo_MongoCollection_find__Class_ResultT___:

``find``
--------

public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` find <**ResultT (?)** >(`java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ resultClass)

Finds all documents in the collection specifying an output class.All documents will be delivered in the form of a **FindIterable (?)**from which individual elements can be extracted.




Type Parameters
~~~~~~~~~~~~~~~

- ``ResultT - ``the target document type of the iterable.
   

Parameters
~~~~~~~~~~

- ``resultClass - ``the class to decode each document into
   

.. _io_realm_mongodb_mongo_MongoCollection_find__Class_ResultT___FindOptions__:

``find``
--------

public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` find <**ResultT (?)** >(`java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ resultClass, :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` options)

Finds all documents in the collection specifying an output class and also using **FindOptions (?)**to build the query.

All documents will be delivered in the form of a **FindIterable (?)**from which individual elements can be extracted.




Type Parameters
~~~~~~~~~~~~~~~

- ``ResultT - ``the target document type of the iterable.
   

Parameters
~~~~~~~~~~

- ``resultClass - ``the class to decode each document into
   
- ``options - ``a **FindOptions (?)**struct for building the query
   
   
   

.. _io_realm_mongodb_mongo_MongoCollection_find__Bson__:

``find``
--------

public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` find (**Bson (?)** filter)

Finds all documents in the collection that match the given filter.All documents will be delivered in the form of a **FindIterable (?)**from which individual elements can be extracted.




Parameters
~~~~~~~~~~

- ``filter - ``the query filter
   

.. _io_realm_mongodb_mongo_MongoCollection_find__Bson__FindOptions__:

``find``
--------

public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` find (**Bson (?)** filter, :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` options)

Finds all documents in the collection that match the given filter using **FindOptions (?)**to build the query.

All documents will be delivered in the form of a **FindIterable (?)**from which individual elements can be extracted.




Parameters
~~~~~~~~~~

- ``filter - ``the query filter
   
- ``options - ``a **FindOptions (?)**struct
   
   
   

.. _io_realm_mongodb_mongo_MongoCollection_find__Bson__Class_ResultT___:

``find``
--------

public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` find <**ResultT (?)** >(**Bson (?)** filter, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ resultClass)

Finds all documents in the collection that match the given filter specifying an output class.All documents will be delivered in the form of a **FindIterable (?)**from which individual elements can be extracted.




Type Parameters
~~~~~~~~~~~~~~~

- ``ResultT - ``the target document type of the iterable.
   

Parameters
~~~~~~~~~~

- ``filter - ``the query filter
   
- ``resultClass - ``the class to decode each document into
   

.. _io_realm_mongodb_mongo_MongoCollection_find__Bson__Class_ResultT___FindOptions__:

``find``
--------

public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` find <**ResultT (?)** >(**Bson (?)** filter, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ resultClass, :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>` options)

Finds all documents in the collection that match the given filter specifying an output class and also using **FindOptions (?)**to build the query.

All documents will be delivered in the form of a **FindIterable (?)**from which individual elements can be extracted.




Type Parameters
~~~~~~~~~~~~~~~

- ``ResultT - ``the target document type of the iterable.
   

Parameters
~~~~~~~~~~

- ``filter - ``the query filter
   
- ``resultClass - ``the class to decode each document into
   
- ``options - ``a **FindOptions (?)**struct
   
   
   

.. _io_realm_mongodb_mongo_MongoCollection_aggregate__List___extends_Bson___:

``aggregate``
-------------

public :ref:`AggregateIterable <io_realm_mongodb_mongo_iterable_AggregateIterable>` aggregate (`java.util.List\<? extends Bson> <https://docs.oracle.com/javase/7/docs/api/java/util/List.html>`__ pipeline)

Aggregates documents according to the specified aggregation pipeline.All documents will be delivered in the form of an **AggregateIterable (?)**from which individual elements can be extracted.




Parameters
~~~~~~~~~~

- ``pipeline - ``the aggregation pipeline
   

.. _io_realm_mongodb_mongo_MongoCollection_aggregate__List___extends_Bson___Class_ResultT___:

``aggregate``
-------------

public :ref:`AggregateIterable <io_realm_mongodb_mongo_iterable_AggregateIterable>` aggregate <**ResultT (?)** >(`java.util.List\<? extends Bson> <https://docs.oracle.com/javase/7/docs/api/java/util/List.html>`__ pipeline, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ resultClass)

Aggregates documents according to the specified aggregation pipeline specifying an output class.All documents will be delivered in the form of an **AggregateIterable (?)**from which individual elements can be extracted.




Type Parameters
~~~~~~~~~~~~~~~

- ``ResultT - ``the target document type of the iterable.
   

Parameters
~~~~~~~~~~

- ``pipeline - ``the aggregation pipeline
   
- ``resultClass - ``the class to decode each document into
   

.. _io_realm_mongodb_mongo_MongoCollection_insertOne__DocumentT__:

``insertOne``
-------------

public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` insertOne (**DocumentT (?)** document)

Inserts the provided document. If the document is missing an identifier, the client should generate one.
Parameters
~~~~~~~~~~

- ``document - ``the document to insert
   

.. _io_realm_mongodb_mongo_MongoCollection_insertMany__List___extends_DocumentT___:

``insertMany``
--------------

public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` insertMany (`java.util.List\<? extends DocumentT> <https://docs.oracle.com/javase/7/docs/api/java/util/List.html>`__ documents)

Inserts one or more documents.
Parameters
~~~~~~~~~~

- ``documents - ``the documents to insert
   

.. _io_realm_mongodb_mongo_MongoCollection_deleteOne__Bson__:

``deleteOne``
-------------

public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` deleteOne (**Bson (?)** filter)

Removes at most one document from the collection that matches the given filter. If no documents match, the collection is not modified.
Parameters
~~~~~~~~~~

- ``filter - ``the query filter to apply the the delete operation
   

.. _io_realm_mongodb_mongo_MongoCollection_deleteMany__Bson__:

``deleteMany``
--------------

public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` deleteMany (**Bson (?)** filter)

Removes all documents from the collection that match the given query filter. If no documents match, the collection is not modified.
Parameters
~~~~~~~~~~

- ``filter - ``the query filter to apply the the delete operation
   

.. _io_realm_mongodb_mongo_MongoCollection_updateOne__Bson__Bson__:

``updateOne``
-------------

public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` updateOne (**Bson (?)** filter, **Bson (?)** update)

Update a single document in the collection according to the specified arguments.
Parameters
~~~~~~~~~~

- ``filter - ``a document describing the query filter, which may not be null.
   
- ``update - ``a document describing the update, which may not be null. The update to apply must include only update operators.
   

.. _io_realm_mongodb_mongo_MongoCollection_updateOne__Bson__Bson__UpdateOptions__:

``updateOne``
-------------

public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` updateOne (**Bson (?)** filter, **Bson (?)** update, :ref:`UpdateOptions <io_realm_mongodb_mongo_options_UpdateOptions>` updateOptions)

Update a single document in the collection according to the specified arguments.
Parameters
~~~~~~~~~~

- ``filter - ``a document describing the query filter, which may not be null.
   
- ``update - ``a document describing the update, which may not be null. The update to apply must include only update operators.
   
- ``updateOptions - ``the options to apply to the update operation
   

.. _io_realm_mongodb_mongo_MongoCollection_updateMany__Bson__Bson__:

``updateMany``
--------------

public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` updateMany (**Bson (?)** filter, **Bson (?)** update)

Update all documents in the collection according to the specified arguments.
Parameters
~~~~~~~~~~

- ``filter - ``a document describing the query filter, which may not be null.
   
- ``update - ``a document describing the update, which may not be null. The update to apply must include only update operators.
   

.. _io_realm_mongodb_mongo_MongoCollection_updateMany__Bson__Bson__UpdateOptions__:

``updateMany``
--------------

public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` updateMany (**Bson (?)** filter, **Bson (?)** update, :ref:`UpdateOptions <io_realm_mongodb_mongo_options_UpdateOptions>` updateOptions)

Update all documents in the collection according to the specified arguments.
Parameters
~~~~~~~~~~

- ``filter - ``a document describing the query filter, which may not be null.
   
- ``update - ``a document describing the update, which may not be null. The update to apply must include only update operators.
   
- ``updateOptions - ``the options to apply to the update operation
   

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate__Bson__Bson__:

``findOneAndUpdate``
--------------------

public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOneAndUpdate (**Bson (?)** filter, **Bson (?)** update)

Finds a document in the collection and performs the given update.
Parameters
~~~~~~~~~~

- ``filter - ``the query filter
   
- ``update - ``the update document
   

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate__Bson__Bson__Class_ResultT___:

``findOneAndUpdate``
--------------------

public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOneAndUpdate <**ResultT (?)** >(**Bson (?)** filter, **Bson (?)** update, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ resultClass)

Finds a document in the collection and performs the given update.
Type Parameters
~~~~~~~~~~~~~~~

- ``ResultT - ``the target document type of the iterable.
   

Parameters
~~~~~~~~~~

- ``filter - ``the query filter
   
- ``update - ``the update document
   
- ``resultClass - ``the class to decode each document into
   

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate__Bson__Bson__FindOneAndModifyOptions__:

``findOneAndUpdate``
--------------------

public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOneAndUpdate (**Bson (?)** filter, **Bson (?)** update, :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` options)

Finds a document in the collection and performs the given update.
Parameters
~~~~~~~~~~

- ``filter - ``the query filter
   
- ``update - ``the update document
   
- ``options - ``a **FindOneAndModifyOptions (?)**struct
   
   
   

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate__Bson__Bson__FindOneAndModifyOptions__Class_ResultT___:

``findOneAndUpdate``
--------------------

public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOneAndUpdate <**ResultT (?)** >(**Bson (?)** filter, **Bson (?)** update, :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` options, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ resultClass)

Finds a document in the collection and performs the given update.
Type Parameters
~~~~~~~~~~~~~~~

- ``ResultT - ``the target document type of the iterable.
   

Parameters
~~~~~~~~~~

- ``filter - ``the query filter
   
- ``update - ``the update document
   
- ``options - ``a **FindOneAndModifyOptions (?)**struct
   
   
   
- ``resultClass - ``the class to decode each document into
   

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndReplace__Bson__Bson__:

``findOneAndReplace``
---------------------

public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOneAndReplace (**Bson (?)** filter, **Bson (?)** replacement)

Finds a document in the collection and replaces it with the given document.
Parameters
~~~~~~~~~~

- ``filter - ``the query filter
   
- ``replacement - ``the document to replace the matched document with
   

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndReplace__Bson__Bson__Class_ResultT___:

``findOneAndReplace``
---------------------

public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOneAndReplace <**ResultT (?)** >(**Bson (?)** filter, **Bson (?)** replacement, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ resultClass)

Finds a document in the collection and replaces it with the given document.
Type Parameters
~~~~~~~~~~~~~~~

- ``ResultT - ``the target document type of the iterable.
   

Parameters
~~~~~~~~~~

- ``filter - ``the query filter
   
- ``replacement - ``the document to replace the matched document with
   
- ``resultClass - ``the class to decode each document into
   

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndReplace__Bson__Bson__FindOneAndModifyOptions__:

``findOneAndReplace``
---------------------

public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOneAndReplace (**Bson (?)** filter, **Bson (?)** replacement, :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` options)

Finds a document in the collection and replaces it with the given document.
Parameters
~~~~~~~~~~

- ``filter - ``the query filter
   
- ``replacement - ``the document to replace the matched document with
   
- ``options - ``a **FindOneAndModifyOptions (?)**struct
   
   
   

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndReplace__Bson__Bson__FindOneAndModifyOptions__Class_ResultT___:

``findOneAndReplace``
---------------------

public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOneAndReplace <**ResultT (?)** >(**Bson (?)** filter, **Bson (?)** replacement, :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` options, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ resultClass)

Finds a document in the collection and replaces it with the given document.
Type Parameters
~~~~~~~~~~~~~~~

- ``ResultT - ``the target document type of the iterable.
   

Parameters
~~~~~~~~~~

- ``filter - ``the query filter
   
- ``replacement - ``the document to replace the matched document with
   
- ``options - ``a **FindOneAndModifyOptions (?)**struct
   
   
   
- ``resultClass - ``the class to decode each document into
   

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndDelete__Bson__:

``findOneAndDelete``
--------------------

public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOneAndDelete (**Bson (?)** filter)

Finds a document in the collection and delete it.
Parameters
~~~~~~~~~~

- ``filter - ``the query filter
   

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndDelete__Bson__Class_ResultT___:

``findOneAndDelete``
--------------------

public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOneAndDelete <**ResultT (?)** >(**Bson (?)** filter, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ resultClass)

Finds a document in the collection and delete it.
Type Parameters
~~~~~~~~~~~~~~~

- ``ResultT - ``the target document type of the iterable.
   

Parameters
~~~~~~~~~~

- ``filter - ``the query filter
   
- ``resultClass - ``the class to decode each document into
   

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndDelete__Bson__FindOneAndModifyOptions__:

``findOneAndDelete``
--------------------

public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOneAndDelete (**Bson (?)** filter, :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` options)

Finds a document in the collection and delete it.
Parameters
~~~~~~~~~~

- ``filter - ``the query filter
   
- ``options - ``a **FindOneAndModifyOptions (?)**struct
   
   
   

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndDelete__Bson__FindOneAndModifyOptions__Class_ResultT___:

``findOneAndDelete``
--------------------

public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` findOneAndDelete <**ResultT (?)** >(**Bson (?)** filter, :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>` options, `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ resultClass)

Finds a document in the collection and delete it.
Type Parameters
~~~~~~~~~~~~~~~

- ``ResultT - ``the target document type of the iterable.
   

Parameters
~~~~~~~~~~

- ``filter - ``the query filter
   
- ``options - ``a **FindOneAndModifyOptions (?)**struct
   
   
   
- ``resultClass - ``the class to decode each document into
   

.. _io_realm_mongodb_mongo_MongoCollection_watch____:

``watch``
---------

public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>` watch ()

Watches a collection. The resulting stream will be notified of all events on this collection that the active user is authorized to see based on the configured MongoDB Realm rules.
.. _io_realm_mongodb_mongo_MongoCollection_watch__BsonValue_____:

``watch``
---------

public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>` watch (**BsonValue[] (?)** ids)

Watches specified IDs in a collection.
Parameters
~~~~~~~~~~

- ``ids - ``the ids to watch.
   

.. _io_realm_mongodb_mongo_MongoCollection_watch__ObjectId_____:

``watch``
---------

public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>` watch (**ObjectId[] (?)** ids)

Watches specified IDs in a collection. This convenience overload supports the use case of non-**BsonValue (?)**instances of **ObjectId (?)**by wrapping them in **BsonObjectId (?)**instances for the user.


Parameters
~~~~~~~~~~

- ``ids - ``unique object identifiers of the IDs to watch.
   

.. _io_realm_mongodb_mongo_MongoCollection_watchWithFilter__Document__:

``watchWithFilter``
-------------------

public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>` watchWithFilter (**Document (?)** matchFilter)

Watches a collection. The provided document will be used as a match expression filter on the change events coming from the stream. This convenience overload supports the use of non-**BsonDocument (?)**instances for the user.

See `how to define a match filter <https://docs.mongodb.com/manual/reference/operator/aggregation/match/>`__.

Defining the match expression to filter ChangeEvents is similar to `how to define the match expression for triggers <https://docs.mongodb.com/realm/triggers/database-triggers/>`__


Parameters
~~~~~~~~~~

- ``matchFilter - ``the $match filter to apply to incoming change events
   

.. _io_realm_mongodb_mongo_MongoCollection_watchWithFilter__BsonDocument__:

``watchWithFilter``
-------------------

public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>` watchWithFilter (**BsonDocument (?)** matchFilter)

Watches a collection. The provided BSON document will be used as a match expression filter on the change events coming from the stream.See `how to define a match filter <https://docs.mongodb.com/manual/reference/operator/aggregation/match/>`__.

Defining the match expression to filter ChangeEvents is similar to `how to define the match expression for triggers <https://docs.mongodb.com/realm/triggers/database-triggers/>`__


Parameters
~~~~~~~~~~

- ``matchFilter - ``the $match filter to apply to incoming change events
   

.. _io_realm_mongodb_mongo_MongoCollection_watchAsync____:

``watchAsync``
--------------

public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>` watchAsync ()

Watches a collection asynchronously. The resulting stream will be notified of all events on this collection that the active user is authorized to see based on the configured MongoDB Realm rules.
.. _io_realm_mongodb_mongo_MongoCollection_watchAsync__BsonValue_____:

``watchAsync``
--------------

public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>` watchAsync (**BsonValue[] (?)** ids)

Watches specified IDs in a collection asynchronously.
Parameters
~~~~~~~~~~

- ``ids - ``the ids to watch.
   

.. _io_realm_mongodb_mongo_MongoCollection_watchAsync__ObjectId_____:

``watchAsync``
--------------

public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>` watchAsync (**ObjectId[] (?)** ids)

Watches specified IDs in a collection asynchronously. This convenience overload supports the use case of non-**BsonValue (?)**instances of **ObjectId (?)**by wrapping them in **BsonObjectId (?)**instances for the user.


Parameters
~~~~~~~~~~

- ``ids - ``unique object identifiers of the IDs to watch.
   

.. _io_realm_mongodb_mongo_MongoCollection_watchWithFilterAsync__Document__:

``watchWithFilterAsync``
------------------------

public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>` watchWithFilterAsync (**Document (?)** matchFilter)

Watches a collection asynchronously. The provided document will be used as a match expression filter on the change events coming from the stream. This convenience overload supports the use of non-**BsonDocument (?)**instances for the user.

See `how to define a match filter <https://docs.mongodb.com/manual/reference/operator/aggregation/match/>`__.

Defining the match expression to filter ChangeEvents is similar to `how to define the match expression for triggers <https://docs.mongodb.com/realm/triggers/database-triggers/>`__


Parameters
~~~~~~~~~~

- ``matchFilter - ``the $match filter to apply to incoming change events
   

.. _io_realm_mongodb_mongo_MongoCollection_watchWithFilterAsync__BsonDocument__:

``watchWithFilterAsync``
------------------------

public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>` watchWithFilterAsync (**BsonDocument (?)** matchFilter)

Watches a collection asynchronously. The provided BSON document will be used as a match expression filter on the change events coming from the stream.See `how to define a match filter <https://docs.mongodb.com/manual/reference/operator/aggregation/match/>`__.

Defining the match expression to filter ChangeEvents is similar to `how to define the match expression for triggers <https://docs.mongodb.com/realm/triggers/database-triggers/>`__


Parameters
~~~~~~~~~~

- ``matchFilter - ``the $match filter to apply to incoming change events
   


