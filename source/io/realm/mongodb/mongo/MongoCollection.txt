
.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol



Class MongoCollection
^^^^^^^^^^^^^^^^^^^^^

.. _io_realm_mongodb_mongo_MongoCollection:



io.realm.mongodb.mongo
======================

`java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ 

The MongoCollection interface provides read and write access to documents.Use **MongoDatabase.getCollection (?)** to get a collection instance.



Before any access is possible, there must be an active, logged-in user.




.. seealso::


   
   - :ref:`MongoDatabase <io_realm_mongodb_mongo_MongoDatabase>` 
      
      
      
   
   
   



Method Summary
==============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Method and Description
   
   * - 
       public :ref:`AggregateIterable <io_realm_mongodb_mongo_iterable_AggregateIterable>` 
     - 
       :ref:`aggregate <io_realm_mongodb_mongo_MongoCollection_aggregate_List___extends_Bson___Class_ResultT__>`  <**ResultT (?)** >(`java.util.List\<? extends Bson> <https://docs.oracle.com/javase/7/docs/api/java/util/List.html>`__  pipeline,
                                            `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
       
       Aggregates documents according to the specified aggregation pipeline specifying an output class.
       
       
       
   
   * - 
       public :ref:`AggregateIterable <io_realm_mongodb_mongo_iterable_AggregateIterable>` 
     - 
       :ref:`aggregate <io_realm_mongodb_mongo_MongoCollection_aggregate_List___extends_Bson__>`  (`java.util.List\<? extends Bson> <https://docs.oracle.com/javase/7/docs/api/java/util/List.html>`__  pipeline)
       
       Aggregates documents according to the specified aggregation pipeline.
       
       
       
   
   * - 
       public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` 
     - 
       :ref:`count <io_realm_mongodb_mongo_MongoCollection_count_Bson__CountOptions_>`  (**Bson (?)** filter,
                                      :ref:`CountOptions <io_realm_mongodb_mongo_options_CountOptions>`  options)
       
       Counts the number of documents in the collection according to the given options.
       
       
       
   
   * - 
       public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` 
     - 
       :ref:`count <io_realm_mongodb_mongo_MongoCollection_count_Bson_>`  (**Bson (?)** filter)
       
       Counts the number of documents in the collection according to the given options.
       
       
       
   
   * - 
       public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` 
     - 
       :ref:`count <io_realm_mongodb_mongo_MongoCollection_count__>`  ()
       
       Counts the number of documents in the collection.
       
       
       
   
   * - 
       public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` 
     - 
       :ref:`deleteMany <io_realm_mongodb_mongo_MongoCollection_deleteMany_Bson_>`  (**Bson (?)** filter)
       
       Removes all documents from the collection that match the given query filter.
       
       
       
   
   * - 
       public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` 
     - 
       :ref:`deleteOne <io_realm_mongodb_mongo_MongoCollection_deleteOne_Bson_>`  (**Bson (?)** filter)
       
       Removes at most one document from the collection that matches the given filter.
       
       
       
   
   * - 
       public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` 
     - 
       :ref:`find <io_realm_mongodb_mongo_MongoCollection_find_Bson__Class_ResultT___FindOptions_>`  <**ResultT (?)** >(**Bson (?)** filter,
                                  `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass,
                                  :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>`  options)
       
       Finds all documents in the collection that match the given filter specifying an output class and also using :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>`  to build the query.
       
       
       
       
       
   
   * - 
       public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` 
     - 
       :ref:`find <io_realm_mongodb_mongo_MongoCollection_find_Bson__Class_ResultT__>`  <**ResultT (?)** >(**Bson (?)** filter,
                                  `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
       
       Finds all documents in the collection that match the given filter specifying an output class.
       
       
       
   
   * - 
       public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` 
     - 
       :ref:`find <io_realm_mongodb_mongo_MongoCollection_find_Bson__FindOptions_>`  (**Bson (?)** filter,
                                  :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>`  options)
       
       Finds all documents in the collection that match the given filter using :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>`  to build the query.
       
       
       
       
       
   
   * - 
       public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` 
     - 
       :ref:`find <io_realm_mongodb_mongo_MongoCollection_find_Bson_>`  (**Bson (?)** filter)
       
       Finds all documents in the collection that match the given filter.
       
       
       
   
   * - 
       public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` 
     - 
       :ref:`find <io_realm_mongodb_mongo_MongoCollection_find_Class_ResultT___FindOptions_>`  <**ResultT (?)** >(`java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass,
                                  :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>`  options)
       
       Finds all documents in the collection specifying an output class and also using :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>`  to build the query.
       
       
       
       
       
   
   * - 
       public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` 
     - 
       :ref:`find <io_realm_mongodb_mongo_MongoCollection_find_Class_ResultT__>`  <**ResultT (?)** >(`java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
       
       Finds all documents in the collection specifying an output class.
       
       
       
   
   * - 
       public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` 
     - 
       :ref:`find <io_realm_mongodb_mongo_MongoCollection_find_FindOptions_>`  (:ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>`  options)
       
       Finds all documents in the collection using :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>`  to build the query.
       
       
       
       
       
   
   * - 
       public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>` 
     - 
       :ref:`find <io_realm_mongodb_mongo_MongoCollection_find__>`  ()
       
       Finds all documents in the collection.
       
       
       
   
   * - 
       public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` 
     - 
       :ref:`findOne <io_realm_mongodb_mongo_MongoCollection_findOne_Bson__FindOptions__Class_ResultT__>`  <**ResultT (?)** >(**Bson (?)** filter,
                                        :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>`  options,
                                        `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
       
       Finds a document in the collection.
       
       
       
   
   * - 
       public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` 
     - 
       :ref:`findOne <io_realm_mongodb_mongo_MongoCollection_findOne_Bson__FindOptions_>`  (**Bson (?)** filter,
                                        :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>`  options)
       
       Finds a document in the collection.
       
       
       
   
   * - 
       public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` 
     - 
       :ref:`findOne <io_realm_mongodb_mongo_MongoCollection_findOne_Bson__Class_ResultT__>`  <**ResultT (?)** >(**Bson (?)** filter,
                                        `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
       
       Finds a document in the collection.
       
       
       
   
   * - 
       public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` 
     - 
       :ref:`findOne <io_realm_mongodb_mongo_MongoCollection_findOne_Bson_>`  (**Bson (?)** filter)
       
       Finds a document in the collection.
       
       
       
   
   * - 
       public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` 
     - 
       :ref:`findOne <io_realm_mongodb_mongo_MongoCollection_findOne_Class_ResultT__>`  <**ResultT (?)** >(`java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
       
       Finds a document in the collection.
       
       
       
   
   * - 
       public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` 
     - 
       :ref:`findOne <io_realm_mongodb_mongo_MongoCollection_findOne__>`  ()
       
       Finds a document in the collection.
       
       
       
   
   * - 
       public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` 
     - 
       :ref:`findOneAndDelete <io_realm_mongodb_mongo_MongoCollection_findOneAndDelete_Bson__FindOneAndModifyOptions__Class_ResultT__>`  <**ResultT (?)** >(**Bson (?)** filter,
                                                 :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>`  options,
                                                 `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
       
       Finds a document in the collection and delete it.
       
       
       
   
   * - 
       public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` 
     - 
       :ref:`findOneAndDelete <io_realm_mongodb_mongo_MongoCollection_findOneAndDelete_Bson__FindOneAndModifyOptions_>`  (**Bson (?)** filter,
                                                 :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>`  options)
       
       Finds a document in the collection and delete it.
       
       
       
   
   * - 
       public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` 
     - 
       :ref:`findOneAndDelete <io_realm_mongodb_mongo_MongoCollection_findOneAndDelete_Bson__Class_ResultT__>`  <**ResultT (?)** >(**Bson (?)** filter,
                                                 `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
       
       Finds a document in the collection and delete it.
       
       
       
   
   * - 
       public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` 
     - 
       :ref:`findOneAndDelete <io_realm_mongodb_mongo_MongoCollection_findOneAndDelete_Bson_>`  (**Bson (?)** filter)
       
       Finds a document in the collection and delete it.
       
       
       
   
   * - 
       public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` 
     - 
       :ref:`findOneAndReplace <io_realm_mongodb_mongo_MongoCollection_findOneAndReplace_Bson__Bson__FindOneAndModifyOptions__Class_ResultT__>`  <**ResultT (?)** >(**Bson (?)** filter,
                                                  **Bson (?)** replacement,
                                                  :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>`  options,
                                                  `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
       
       Finds a document in the collection and replaces it with the given document.
       
       
       
   
   * - 
       public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` 
     - 
       :ref:`findOneAndReplace <io_realm_mongodb_mongo_MongoCollection_findOneAndReplace_Bson__Bson__FindOneAndModifyOptions_>`  (**Bson (?)** filter,
                                                  **Bson (?)** replacement,
                                                  :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>`  options)
       
       Finds a document in the collection and replaces it with the given document.
       
       
       
   
   * - 
       public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` 
     - 
       :ref:`findOneAndReplace <io_realm_mongodb_mongo_MongoCollection_findOneAndReplace_Bson__Bson__Class_ResultT__>`  <**ResultT (?)** >(**Bson (?)** filter,
                                                  **Bson (?)** replacement,
                                                  `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
       
       Finds a document in the collection and replaces it with the given document.
       
       
       
   
   * - 
       public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` 
     - 
       :ref:`findOneAndReplace <io_realm_mongodb_mongo_MongoCollection_findOneAndReplace_Bson__Bson_>`  (**Bson (?)** filter,
                                                  **Bson (?)** replacement)
       
       Finds a document in the collection and replaces it with the given document.
       
       
       
   
   * - 
       public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` 
     - 
       :ref:`findOneAndUpdate <io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate_Bson__Bson__FindOneAndModifyOptions__Class_ResultT__>`  <**ResultT (?)** >(**Bson (?)** filter,
                                                 **Bson (?)** update,
                                                 :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>`  options,
                                                 `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
       
       Finds a document in the collection and performs the given update.
       
       
       
   
   * - 
       public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` 
     - 
       :ref:`findOneAndUpdate <io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate_Bson__Bson__FindOneAndModifyOptions_>`  (**Bson (?)** filter,
                                                 **Bson (?)** update,
                                                 :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>`  options)
       
       Finds a document in the collection and performs the given update.
       
       
       
   
   * - 
       public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` 
     - 
       :ref:`findOneAndUpdate <io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate_Bson__Bson__Class_ResultT__>`  <**ResultT (?)** >(**Bson (?)** filter,
                                                 **Bson (?)** update,
                                                 `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
       
       Finds a document in the collection and performs the given update.
       
       
       
   
   * - 
       public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` 
     - 
       :ref:`findOneAndUpdate <io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate_Bson__Bson_>`  (**Bson (?)** filter,
                                                 **Bson (?)** update)
       
       Finds a document in the collection and performs the given update.
       
       
       
   
   * - 
       public **CodecRegistry (?)**
     - 
       :ref:`getCodecRegistry <io_realm_mongodb_mongo_MongoCollection_getCodecRegistry__>`  ()
       
       Gets the codec registry for the MongoCollection.
       
       
       
   
   * - 
       public `Class <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__ 
     - 
       :ref:`getDocumentClass <io_realm_mongodb_mongo_MongoCollection_getDocumentClass__>`  ()
       
       Gets the class of documents stored in this collection.
       
       
       
   
   * - 
       public `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ 
     - 
       :ref:`getName <io_realm_mongodb_mongo_MongoCollection_getName__>`  ()
       
       Gets the name of this collection
       
       
       
   
   * - 
       public :ref:`MongoNamespace <io_realm_mongodb_mongo_MongoNamespace>` 
     - 
       :ref:`getNamespace <io_realm_mongodb_mongo_MongoCollection_getNamespace__>`  ()
       
       Gets the namespace of this collection, i.e.
       
       
       
   
   * - 
       public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` 
     - 
       :ref:`insertMany <io_realm_mongodb_mongo_MongoCollection_insertMany_List___extends_DocumentT__>`  (`java.util.List\<? extends DocumentT> <https://docs.oracle.com/javase/7/docs/api/java/util/List.html>`__  documents)
       
       Inserts one or more documents.
       
       
       
   
   * - 
       public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` 
     - 
       :ref:`insertOne <io_realm_mongodb_mongo_MongoCollection_insertOne_DocumentT_>`  (**DocumentT (?)** document)
       
       Inserts the provided document.
       
       
       
   
   * - 
       public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` 
     - 
       :ref:`updateMany <io_realm_mongodb_mongo_MongoCollection_updateMany_Bson__Bson__UpdateOptions_>`  (**Bson (?)** filter,
                                           **Bson (?)** update,
                                           :ref:`UpdateOptions <io_realm_mongodb_mongo_options_UpdateOptions>`  updateOptions)
       
       Update all documents in the collection according to the specified arguments.
       
       
       
   
   * - 
       public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` 
     - 
       :ref:`updateMany <io_realm_mongodb_mongo_MongoCollection_updateMany_Bson__Bson_>`  (**Bson (?)** filter,
                                           **Bson (?)** update)
       
       Update all documents in the collection according to the specified arguments.
       
       
       
   
   * - 
       public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` 
     - 
       :ref:`updateOne <io_realm_mongodb_mongo_MongoCollection_updateOne_Bson__Bson__UpdateOptions_>`  (**Bson (?)** filter,
                                          **Bson (?)** update,
                                          :ref:`UpdateOptions <io_realm_mongodb_mongo_options_UpdateOptions>`  updateOptions)
       
       Update a single document in the collection according to the specified arguments.
       
       
       
   
   * - 
       public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>` 
     - 
       :ref:`updateOne <io_realm_mongodb_mongo_MongoCollection_updateOne_Bson__Bson_>`  (**Bson (?)** filter,
                                          **Bson (?)** update)
       
       Update a single document in the collection according to the specified arguments.
       
       
       
   
   * - 
       public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>` 
     - 
       :ref:`watch <io_realm_mongodb_mongo_MongoCollection_watch_ObjectId____>`  (**ObjectId[] (?)** ids)
       
       Watches specified IDs in a collection.
       
       
       
   
   * - 
       public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>` 
     - 
       :ref:`watch <io_realm_mongodb_mongo_MongoCollection_watch_BsonValue____>`  (**BsonValue[] (?)** ids)
       
       Watches specified IDs in a collection.
       
       
       
   
   * - 
       public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>` 
     - 
       :ref:`watch <io_realm_mongodb_mongo_MongoCollection_watch__>`  ()
       
       Watches a collection.
       
       
       
   
   * - 
       public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>` 
     - 
       :ref:`watchAsync <io_realm_mongodb_mongo_MongoCollection_watchAsync_ObjectId____>`  (**ObjectId[] (?)** ids)
       
       Watches specified IDs in a collection asynchronously.
       
       
       
   
   * - 
       public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>` 
     - 
       :ref:`watchAsync <io_realm_mongodb_mongo_MongoCollection_watchAsync_BsonValue____>`  (**BsonValue[] (?)** ids)
       
       Watches specified IDs in a collection asynchronously.
       
       
       
   
   * - 
       public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>` 
     - 
       :ref:`watchAsync <io_realm_mongodb_mongo_MongoCollection_watchAsync__>`  ()
       
       Watches a collection asynchronously.
       
       
       
   
   * - 
       public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>` 
     - 
       :ref:`watchWithFilter <io_realm_mongodb_mongo_MongoCollection_watchWithFilter_BsonDocument_>`  (**BsonDocument (?)** matchFilter)
       
       Watches a collection.
       
       
       
   
   * - 
       public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>` 
     - 
       :ref:`watchWithFilter <io_realm_mongodb_mongo_MongoCollection_watchWithFilter_Document_>`  (**Document (?)** matchFilter)
       
       Watches a collection.
       
       
       
   
   * - 
       public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>` 
     - 
       :ref:`watchWithFilterAsync <io_realm_mongodb_mongo_MongoCollection_watchWithFilterAsync_BsonDocument_>`  (**BsonDocument (?)** matchFilter)
       
       Watches a collection asynchronously.
       
       
       
   
   * - 
       public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>` 
     - 
       :ref:`watchWithFilterAsync <io_realm_mongodb_mongo_MongoCollection_watchWithFilterAsync_Document_>`  (**Document (?)** matchFilter)
       
       Watches a collection asynchronously.
       
       
       
   
   * - 
       public :ref:`MongoCollection <io_realm_mongodb_mongo_MongoCollection>` 
     - 
       :ref:`withCodecRegistry <io_realm_mongodb_mongo_MongoCollection_withCodecRegistry_CodecRegistry_>`  (**CodecRegistry (?)** codecRegistry)
       
       Creates a new MongoCollection instance with a different codec registry.
       
       
       
   
   * - 
       public :ref:`MongoCollection <io_realm_mongodb_mongo_MongoCollection>` 
     - 
       :ref:`withDocumentClass <io_realm_mongodb_mongo_MongoCollection_withDocumentClass_Class_NewDocumentT__>`  <**NewDocumentT (?)** >(`java.lang.Class\<NewDocumentT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  clazz)
       
       Creates a new MongoCollection instance with a different default class to cast any documents returned from the database into.
       
       
       
   
   


Inherited Methods
=================



- Methods inherited from interface `java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__ : ``getClass`` , ``hashCode`` , ``equals`` , ``clone`` , ``toString`` , ``notify`` , ``notifyAll`` , ``wait`` , ``wait`` , ``wait`` , ``finalize`` 




Method Detail
=============

.. _aggregate:

.. _aggregate__:

.. _MongoCollection_aggregate:

.. _MongoCollection_aggregate__:



aggregate
---------

.. _io_realm_mongodb_mongo_MongoCollection_aggregate_List___extends_Bson___Class_ResultT__:

.. _io_realm_mongodb_mongo_MongoCollection_aggregate_List_Class_:

.. _io_realm_mongodb_mongo_MongoCollection_aggregate_List__Class_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`AggregateIterable <io_realm_mongodb_mongo_iterable_AggregateIterable>`  aggregate <**ResultT (?)** >(`java.util.List\<? extends Bson> <https://docs.oracle.com/javase/7/docs/api/java/util/List.html>`__  pipeline,
                                            `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
   
   * - Aggregates documents according to the specified aggregation pipeline specifying an output class.All documents will be delivered in the form of an :ref:`AggregateIterable <io_realm_mongodb_mongo_iterable_AggregateIterable>`  from which individual elements can be extracted.
       
       
       
       
       
       
       **Type Parameters**
       
       - ``ResultT`` - the target document type of the iterable.
          
          
          
       
       
       
       
       **Parameters**
       
       - ``pipeline`` - the aggregation pipeline
          
          
          
       - ``resultClass`` - the class to decode each document into
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_mongo_MongoCollection_aggregate_List___extends_Bson__:

.. _io_realm_mongodb_mongo_MongoCollection_aggregate_List_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`AggregateIterable <io_realm_mongodb_mongo_iterable_AggregateIterable>`  aggregate (`java.util.List\<? extends Bson> <https://docs.oracle.com/javase/7/docs/api/java/util/List.html>`__  pipeline)
   
   * - Aggregates documents according to the specified aggregation pipeline.All documents will be delivered in the form of an :ref:`AggregateIterable <io_realm_mongodb_mongo_iterable_AggregateIterable>`  from which individual elements can be extracted.
       
       
       
       
       
       
       
       
       **Parameters**
       
       - ``pipeline`` - the aggregation pipeline
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _count:

.. _count__:

.. _MongoCollection_count:

.. _MongoCollection_count__:

.. _io_realm_mongodb_mongo_MongoCollection_count:

.. _io_realm_mongodb_mongo_MongoCollection_count__:



count
-----

.. _io_realm_mongodb_mongo_MongoCollection_count_Bson__CountOptions_:

.. _io_realm_mongodb_mongo_MongoCollection_count_Bson_CountOptions_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`  count (**Bson (?)** filter,
                                      :ref:`CountOptions <io_realm_mongodb_mongo_options_CountOptions>`  options)
   
   * - Counts the number of documents in the collection according to the given options.
       
       
       
       
       **Parameters**
       
       - ``filter`` - the query filter
          
          
          
       - ``options`` - the options describing the count
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_mongo_MongoCollection_count_Bson_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`  count (**Bson (?)** filter)
   
   * - Counts the number of documents in the collection according to the given options.
       
       
       
       
       **Parameters**
       
       - ``filter`` - the query filter
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`  count ()
   
   * - Counts the number of documents in the collection.
       
       
       
       
       
       
       
       
       
       
       
   
   
.. _deleteMany:

.. _deleteMany__:

.. _MongoCollection_deleteMany:

.. _MongoCollection_deleteMany__:



deleteMany
----------

.. _io_realm_mongodb_mongo_MongoCollection_deleteMany_Bson_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`  deleteMany (**Bson (?)** filter)
   
   * - Removes all documents from the collection that match the given query filter. If no documents match, the collection is not modified.
       
       
       
       
       **Parameters**
       
       - ``filter`` - the query filter to apply the the delete operation
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _deleteOne:

.. _deleteOne__:

.. _MongoCollection_deleteOne:

.. _MongoCollection_deleteOne__:



deleteOne
---------

.. _io_realm_mongodb_mongo_MongoCollection_deleteOne_Bson_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`  deleteOne (**Bson (?)** filter)
   
   * - Removes at most one document from the collection that matches the given filter. If no documents match, the collection is not modified.
       
       
       
       
       **Parameters**
       
       - ``filter`` - the query filter to apply the the delete operation
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _find:

.. _find__:

.. _MongoCollection_find:

.. _MongoCollection_find__:

.. _io_realm_mongodb_mongo_MongoCollection_find:

.. _io_realm_mongodb_mongo_MongoCollection_find__:



find
----

.. _io_realm_mongodb_mongo_MongoCollection_find_Bson__Class_ResultT___FindOptions_:

.. _io_realm_mongodb_mongo_MongoCollection_find_Bson_Class_FindOptions_:

.. _io_realm_mongodb_mongo_MongoCollection_find_Bson__Class__FindOptions_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`  find <**ResultT (?)** >(**Bson (?)** filter,
                                  `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass,
                                  :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>`  options)
   
   * - Finds all documents in the collection that match the given filter specifying an output class and also using :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>`  to build the query.
       
       All documents will be delivered in the form of a :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`  from which individual elements can be extracted.
       
       
       
       
       
       
       **Type Parameters**
       
       - ``ResultT`` - the target document type of the iterable.
          
          
          
       
       
       
       
       **Parameters**
       
       - ``filter`` - the query filter
          
          
          
       - ``resultClass`` - the class to decode each document into
          
          
          
       - ``options`` - a :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>`  struct
          
          
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_mongo_MongoCollection_find_Bson__Class_ResultT__:

.. _io_realm_mongodb_mongo_MongoCollection_find_Bson_Class_:

.. _io_realm_mongodb_mongo_MongoCollection_find_Bson__Class_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`  find <**ResultT (?)** >(**Bson (?)** filter,
                                  `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
   
   * - Finds all documents in the collection that match the given filter specifying an output class.All documents will be delivered in the form of a :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`  from which individual elements can be extracted.
       
       
       
       
       
       
       **Type Parameters**
       
       - ``ResultT`` - the target document type of the iterable.
          
          
          
       
       
       
       
       **Parameters**
       
       - ``filter`` - the query filter
          
          
          
       - ``resultClass`` - the class to decode each document into
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_mongo_MongoCollection_find_Bson__FindOptions_:

.. _io_realm_mongodb_mongo_MongoCollection_find_Bson_FindOptions_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`  find (**Bson (?)** filter,
                                  :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>`  options)
   
   * - Finds all documents in the collection that match the given filter using :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>`  to build the query.
       
       All documents will be delivered in the form of a :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`  from which individual elements can be extracted.
       
       
       
       
       
       
       
       
       **Parameters**
       
       - ``filter`` - the query filter
          
          
          
       - ``options`` - a :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>`  struct
          
          
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_mongo_MongoCollection_find_Bson_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`  find (**Bson (?)** filter)
   
   * - Finds all documents in the collection that match the given filter.All documents will be delivered in the form of a :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`  from which individual elements can be extracted.
       
       
       
       
       
       
       
       
       **Parameters**
       
       - ``filter`` - the query filter
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_mongo_MongoCollection_find_Class_ResultT___FindOptions_:

.. _io_realm_mongodb_mongo_MongoCollection_find_Class_FindOptions_:

.. _io_realm_mongodb_mongo_MongoCollection_find_Class__FindOptions_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`  find <**ResultT (?)** >(`java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass,
                                  :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>`  options)
   
   * - Finds all documents in the collection specifying an output class and also using :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>`  to build the query.
       
       All documents will be delivered in the form of a :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`  from which individual elements can be extracted.
       
       
       
       
       
       
       **Type Parameters**
       
       - ``ResultT`` - the target document type of the iterable.
          
          
          
       
       
       
       
       **Parameters**
       
       - ``resultClass`` - the class to decode each document into
          
          
          
       - ``options`` - a :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>`  struct for building the query
          
          
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_mongo_MongoCollection_find_Class_ResultT__:

.. _io_realm_mongodb_mongo_MongoCollection_find_Class_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`  find <**ResultT (?)** >(`java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
   
   * - Finds all documents in the collection specifying an output class.All documents will be delivered in the form of a :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`  from which individual elements can be extracted.
       
       
       
       
       
       
       **Type Parameters**
       
       - ``ResultT`` - the target document type of the iterable.
          
          
          
       
       
       
       
       **Parameters**
       
       - ``resultClass`` - the class to decode each document into
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_mongo_MongoCollection_find_FindOptions_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`  find (:ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>`  options)
   
   * - Finds all documents in the collection using :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>`  to build the query.
       
       All documents will be delivered in the form of a :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`  from which individual elements can be extracted.
       
       
       
       
       
       
       
       
       **Parameters**
       
       - ``options`` - a :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>`  struct for building the query
          
          
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. list-table::
   :header-rows: 1
   
   * -    public :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`  find ()
   
   * - Finds all documents in the collection.All documents will be delivered in the form of a :ref:`FindIterable <io_realm_mongodb_mongo_iterable_FindIterable>`  from which individual elements can be extracted.
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   
.. _findOne:

.. _findOne__:

.. _MongoCollection_findOne:

.. _MongoCollection_findOne__:

.. _io_realm_mongodb_mongo_MongoCollection_findOne:

.. _io_realm_mongodb_mongo_MongoCollection_findOne__:



findOne
-------

.. _io_realm_mongodb_mongo_MongoCollection_findOne_Bson__FindOptions__Class_ResultT__:

.. _io_realm_mongodb_mongo_MongoCollection_findOne_Bson_FindOptions_Class_:

.. _io_realm_mongodb_mongo_MongoCollection_findOne_Bson__FindOptions__Class_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`  findOne <**ResultT (?)** >(**Bson (?)** filter,
                                        :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>`  options,
                                        `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
   
   * - Finds a document in the collection.
       
       
       **Type Parameters**
       
       - ``ResultT`` - the target document type of the iterable.
          
          
          
       
       
       
       
       **Parameters**
       
       - ``filter`` - the query filter
          
          
          
       - ``options`` - a :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>`  struct
          
          
          
          
          
       - ``resultClass`` - the class to decode each document into
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_mongo_MongoCollection_findOne_Bson__FindOptions_:

.. _io_realm_mongodb_mongo_MongoCollection_findOne_Bson_FindOptions_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`  findOne (**Bson (?)** filter,
                                        :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>`  options)
   
   * - Finds a document in the collection.
       
       
       
       
       **Parameters**
       
       - ``filter`` - the query filter
          
          
          
       - ``options`` - a :ref:`FindOptions <io_realm_mongodb_mongo_options_FindOptions>`  struct
          
          
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_mongo_MongoCollection_findOne_Bson__Class_ResultT__:

.. _io_realm_mongodb_mongo_MongoCollection_findOne_Bson_Class_:

.. _io_realm_mongodb_mongo_MongoCollection_findOne_Bson__Class_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`  findOne <**ResultT (?)** >(**Bson (?)** filter,
                                        `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
   
   * - Finds a document in the collection.
       
       
       **Type Parameters**
       
       - ``ResultT`` - the target document type of the iterable.
          
          
          
       
       
       
       
       **Parameters**
       
       - ``filter`` - the query filter
          
          
          
       - ``resultClass`` - the class to decode each document into
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_mongo_MongoCollection_findOne_Bson_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`  findOne (**Bson (?)** filter)
   
   * - Finds a document in the collection.
       
       
       
       
       **Parameters**
       
       - ``filter`` - the query filter
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_mongo_MongoCollection_findOne_Class_ResultT__:

.. _io_realm_mongodb_mongo_MongoCollection_findOne_Class_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`  findOne <**ResultT (?)** >(`java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
   
   * - Finds a document in the collection.
       
       
       **Type Parameters**
       
       - ``ResultT`` - the target document type
          
          
          
       
       
       
       
       **Parameters**
       
       - ``resultClass`` - the class to decode each document into
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`  findOne ()
   
   * - Finds a document in the collection.
       
       
       
       
       
       
       
       
       
       
       
   
   
.. _findOneAndDelete:

.. _findOneAndDelete__:

.. _MongoCollection_findOneAndDelete:

.. _MongoCollection_findOneAndDelete__:



findOneAndDelete
----------------

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndDelete_Bson__FindOneAndModifyOptions__Class_ResultT__:

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndDelete_Bson_FindOneAndModifyOptions_Class_:

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndDelete_Bson__FindOneAndModifyOptions__Class_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`  findOneAndDelete <**ResultT (?)** >(**Bson (?)** filter,
                                                 :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>`  options,
                                                 `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
   
   * - Finds a document in the collection and delete it.
       
       
       **Type Parameters**
       
       - ``ResultT`` - the target document type of the iterable.
          
          
          
       
       
       
       
       **Parameters**
       
       - ``filter`` - the query filter
          
          
          
       - ``options`` - a :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>`  struct
          
          
          
          
          
       - ``resultClass`` - the class to decode each document into
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_mongo_MongoCollection_findOneAndDelete_Bson__FindOneAndModifyOptions_:

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndDelete_Bson_FindOneAndModifyOptions_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`  findOneAndDelete (**Bson (?)** filter,
                                                 :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>`  options)
   
   * - Finds a document in the collection and delete it.
       
       
       
       
       **Parameters**
       
       - ``filter`` - the query filter
          
          
          
       - ``options`` - a :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>`  struct
          
          
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_mongo_MongoCollection_findOneAndDelete_Bson__Class_ResultT__:

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndDelete_Bson_Class_:

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndDelete_Bson__Class_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`  findOneAndDelete <**ResultT (?)** >(**Bson (?)** filter,
                                                 `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
   
   * - Finds a document in the collection and delete it.
       
       
       **Type Parameters**
       
       - ``ResultT`` - the target document type of the iterable.
          
          
          
       
       
       
       
       **Parameters**
       
       - ``filter`` - the query filter
          
          
          
       - ``resultClass`` - the class to decode each document into
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_mongo_MongoCollection_findOneAndDelete_Bson_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`  findOneAndDelete (**Bson (?)** filter)
   
   * - Finds a document in the collection and delete it.
       
       
       
       
       **Parameters**
       
       - ``filter`` - the query filter
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _findOneAndReplace:

.. _findOneAndReplace__:

.. _MongoCollection_findOneAndReplace:

.. _MongoCollection_findOneAndReplace__:



findOneAndReplace
-----------------

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndReplace_Bson__Bson__FindOneAndModifyOptions__Class_ResultT__:

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndReplace_Bson_Bson_FindOneAndModifyOptions_Class_:

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndReplace_Bson__Bson__FindOneAndModifyOptions__Class_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`  findOneAndReplace <**ResultT (?)** >(**Bson (?)** filter,
                                                  **Bson (?)** replacement,
                                                  :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>`  options,
                                                  `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
   
   * - Finds a document in the collection and replaces it with the given document.
       
       
       **Type Parameters**
       
       - ``ResultT`` - the target document type of the iterable.
          
          
          
       
       
       
       
       **Parameters**
       
       - ``filter`` - the query filter
          
          
          
       - ``replacement`` - the document to replace the matched document with
          
          
          
       - ``options`` - a :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>`  struct
          
          
          
          
          
       - ``resultClass`` - the class to decode each document into
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_mongo_MongoCollection_findOneAndReplace_Bson__Bson__FindOneAndModifyOptions_:

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndReplace_Bson_Bson_FindOneAndModifyOptions_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`  findOneAndReplace (**Bson (?)** filter,
                                                  **Bson (?)** replacement,
                                                  :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>`  options)
   
   * - Finds a document in the collection and replaces it with the given document.
       
       
       
       
       **Parameters**
       
       - ``filter`` - the query filter
          
          
          
       - ``replacement`` - the document to replace the matched document with
          
          
          
       - ``options`` - a :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>`  struct
          
          
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_mongo_MongoCollection_findOneAndReplace_Bson__Bson__Class_ResultT__:

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndReplace_Bson_Bson_Class_:

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndReplace_Bson__Bson__Class_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`  findOneAndReplace <**ResultT (?)** >(**Bson (?)** filter,
                                                  **Bson (?)** replacement,
                                                  `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
   
   * - Finds a document in the collection and replaces it with the given document.
       
       
       **Type Parameters**
       
       - ``ResultT`` - the target document type of the iterable.
          
          
          
       
       
       
       
       **Parameters**
       
       - ``filter`` - the query filter
          
          
          
       - ``replacement`` - the document to replace the matched document with
          
          
          
       - ``resultClass`` - the class to decode each document into
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_mongo_MongoCollection_findOneAndReplace_Bson__Bson_:

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndReplace_Bson_Bson_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`  findOneAndReplace (**Bson (?)** filter,
                                                  **Bson (?)** replacement)
   
   * - Finds a document in the collection and replaces it with the given document.
       
       
       
       
       **Parameters**
       
       - ``filter`` - the query filter
          
          
          
       - ``replacement`` - the document to replace the matched document with
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _findOneAndUpdate:

.. _findOneAndUpdate__:

.. _MongoCollection_findOneAndUpdate:

.. _MongoCollection_findOneAndUpdate__:



findOneAndUpdate
----------------

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate_Bson__Bson__FindOneAndModifyOptions__Class_ResultT__:

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate_Bson_Bson_FindOneAndModifyOptions_Class_:

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate_Bson__Bson__FindOneAndModifyOptions__Class_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`  findOneAndUpdate <**ResultT (?)** >(**Bson (?)** filter,
                                                 **Bson (?)** update,
                                                 :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>`  options,
                                                 `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
   
   * - Finds a document in the collection and performs the given update.
       
       
       **Type Parameters**
       
       - ``ResultT`` - the target document type of the iterable.
          
          
          
       
       
       
       
       **Parameters**
       
       - ``filter`` - the query filter
          
          
          
       - ``update`` - the update document
          
          
          
       - ``options`` - a :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>`  struct
          
          
          
          
          
       - ``resultClass`` - the class to decode each document into
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate_Bson__Bson__FindOneAndModifyOptions_:

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate_Bson_Bson_FindOneAndModifyOptions_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`  findOneAndUpdate (**Bson (?)** filter,
                                                 **Bson (?)** update,
                                                 :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>`  options)
   
   * - Finds a document in the collection and performs the given update.
       
       
       
       
       **Parameters**
       
       - ``filter`` - the query filter
          
          
          
       - ``update`` - the update document
          
          
          
       - ``options`` - a :ref:`FindOneAndModifyOptions <io_realm_mongodb_mongo_options_FindOneAndModifyOptions>`  struct
          
          
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate_Bson__Bson__Class_ResultT__:

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate_Bson_Bson_Class_:

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate_Bson__Bson__Class_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`  findOneAndUpdate <**ResultT (?)** >(**Bson (?)** filter,
                                                 **Bson (?)** update,
                                                 `java.lang.Class\<ResultT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  resultClass)
   
   * - Finds a document in the collection and performs the given update.
       
       
       **Type Parameters**
       
       - ``ResultT`` - the target document type of the iterable.
          
          
          
       
       
       
       
       **Parameters**
       
       - ``filter`` - the query filter
          
          
          
       - ``update`` - the update document
          
          
          
       - ``resultClass`` - the class to decode each document into
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate_Bson__Bson_:

.. _io_realm_mongodb_mongo_MongoCollection_findOneAndUpdate_Bson_Bson_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`  findOneAndUpdate (**Bson (?)** filter,
                                                 **Bson (?)** update)
   
   * - Finds a document in the collection and performs the given update.
       
       
       
       
       **Parameters**
       
       - ``filter`` - the query filter
          
          
          
       - ``update`` - the update document
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _getCodecRegistry:

.. _getCodecRegistry__:

.. _MongoCollection_getCodecRegistry:

.. _MongoCollection_getCodecRegistry__:

.. _io_realm_mongodb_mongo_MongoCollection_getCodecRegistry:

.. _io_realm_mongodb_mongo_MongoCollection_getCodecRegistry__:



getCodecRegistry
----------------

.. list-table::
   :header-rows: 1
   
   * -    public **CodecRegistry (?)** getCodecRegistry ()
   
   * - Gets the codec registry for the MongoCollection.
       
       
       
       
       
       
       
       
       
       
       
   
   
.. _getDocumentClass:

.. _getDocumentClass__:

.. _MongoCollection_getDocumentClass:

.. _MongoCollection_getDocumentClass__:

.. _io_realm_mongodb_mongo_MongoCollection_getDocumentClass:

.. _io_realm_mongodb_mongo_MongoCollection_getDocumentClass__:



getDocumentClass
----------------

.. list-table::
   :header-rows: 1
   
   * -    public `Class <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  getDocumentClass ()
   
   * - Gets the class of documents stored in this collection.If you used the simple :ref:`MongoDatabase.getCollection(String) <io_realm_mongodb_mongo_MongoDatabase_getCollection_String_>`  to get this collection, this is **org.bson.Document (?)**.
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
   
   
.. _getName:

.. _getName__:

.. _MongoCollection_getName:

.. _MongoCollection_getName__:

.. _io_realm_mongodb_mongo_MongoCollection_getName:

.. _io_realm_mongodb_mongo_MongoCollection_getName__:



getName
-------

.. list-table::
   :header-rows: 1
   
   * -    public `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__  getName ()
   
   * - Gets the name of this collection
       
       
       
       
       
       
       
       
       
       
       
   
   
.. _getNamespace:

.. _getNamespace__:

.. _MongoCollection_getNamespace:

.. _MongoCollection_getNamespace__:

.. _io_realm_mongodb_mongo_MongoCollection_getNamespace:

.. _io_realm_mongodb_mongo_MongoCollection_getNamespace__:



getNamespace
------------

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`MongoNamespace <io_realm_mongodb_mongo_MongoNamespace>`  getNamespace ()
   
   * - Gets the namespace of this collection, i.e. the database and collection names together.
       
       
       
       
       
       
       
       
       
       
       
   
   
.. _insertMany:

.. _insertMany__:

.. _MongoCollection_insertMany:

.. _MongoCollection_insertMany__:



insertMany
----------

.. _io_realm_mongodb_mongo_MongoCollection_insertMany_List___extends_DocumentT__:

.. _io_realm_mongodb_mongo_MongoCollection_insertMany_List_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`  insertMany (`java.util.List\<? extends DocumentT> <https://docs.oracle.com/javase/7/docs/api/java/util/List.html>`__  documents)
   
   * - Inserts one or more documents.
       
       
       
       
       **Parameters**
       
       - ``documents`` - the documents to insert
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _insertOne:

.. _insertOne__:

.. _MongoCollection_insertOne:

.. _MongoCollection_insertOne__:



insertOne
---------

.. _io_realm_mongodb_mongo_MongoCollection_insertOne_DocumentT_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`  insertOne (**DocumentT (?)** document)
   
   * - Inserts the provided document. If the document is missing an identifier, the client should generate one.
       
       
       
       
       **Parameters**
       
       - ``document`` - the document to insert
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _updateMany:

.. _updateMany__:

.. _MongoCollection_updateMany:

.. _MongoCollection_updateMany__:



updateMany
----------

.. _io_realm_mongodb_mongo_MongoCollection_updateMany_Bson__Bson__UpdateOptions_:

.. _io_realm_mongodb_mongo_MongoCollection_updateMany_Bson_Bson_UpdateOptions_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`  updateMany (**Bson (?)** filter,
                                           **Bson (?)** update,
                                           :ref:`UpdateOptions <io_realm_mongodb_mongo_options_UpdateOptions>`  updateOptions)
   
   * - Update all documents in the collection according to the specified arguments.
       
       
       
       
       **Parameters**
       
       - ``filter`` - a document describing the query filter, which may not be null.
          
          
          
       - ``update`` - a document describing the update, which may not be null. The update to apply must include only update operators.
          
          
          
       - ``updateOptions`` - the options to apply to the update operation
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_mongo_MongoCollection_updateMany_Bson__Bson_:

.. _io_realm_mongodb_mongo_MongoCollection_updateMany_Bson_Bson_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`  updateMany (**Bson (?)** filter,
                                           **Bson (?)** update)
   
   * - Update all documents in the collection according to the specified arguments.
       
       
       
       
       **Parameters**
       
       - ``filter`` - a document describing the query filter, which may not be null.
          
          
          
       - ``update`` - a document describing the update, which may not be null. The update to apply must include only update operators.
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _updateOne:

.. _updateOne__:

.. _MongoCollection_updateOne:

.. _MongoCollection_updateOne__:



updateOne
---------

.. _io_realm_mongodb_mongo_MongoCollection_updateOne_Bson__Bson__UpdateOptions_:

.. _io_realm_mongodb_mongo_MongoCollection_updateOne_Bson_Bson_UpdateOptions_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`  updateOne (**Bson (?)** filter,
                                          **Bson (?)** update,
                                          :ref:`UpdateOptions <io_realm_mongodb_mongo_options_UpdateOptions>`  updateOptions)
   
   * - Update a single document in the collection according to the specified arguments.
       
       
       
       
       **Parameters**
       
       - ``filter`` - a document describing the query filter, which may not be null.
          
          
          
       - ``update`` - a document describing the update, which may not be null. The update to apply must include only update operators.
          
          
          
       - ``updateOptions`` - the options to apply to the update operation
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_mongo_MongoCollection_updateOne_Bson__Bson_:

.. _io_realm_mongodb_mongo_MongoCollection_updateOne_Bson_Bson_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmResultTask <io_realm_mongodb_RealmResultTask>`  updateOne (**Bson (?)** filter,
                                          **Bson (?)** update)
   
   * - Update a single document in the collection according to the specified arguments.
       
       
       
       
       **Parameters**
       
       - ``filter`` - a document describing the query filter, which may not be null.
          
          
          
       - ``update`` - a document describing the update, which may not be null. The update to apply must include only update operators.
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _watch:

.. _watch__:

.. _MongoCollection_watch:

.. _MongoCollection_watch__:

.. _io_realm_mongodb_mongo_MongoCollection_watch:

.. _io_realm_mongodb_mongo_MongoCollection_watch__:



watch
-----

.. _io_realm_mongodb_mongo_MongoCollection_watch_ObjectId____:

.. _io_realm_mongodb_mongo_MongoCollection_watch_ObjectId_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>`  watch (**ObjectId[] (?)** ids)
   
   * - Watches specified IDs in a collection. This convenience overload supports the use case of non-**BsonValue (?)** instances of **ObjectId (?)** by wrapping them in **BsonObjectId (?)** instances for the user.
       
       
       
       
       
       
       **Parameters**
       
       - ``ids`` - unique object identifiers of the IDs to watch.
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_mongo_MongoCollection_watch_BsonValue____:

.. _io_realm_mongodb_mongo_MongoCollection_watch_BsonValue_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>`  watch (**BsonValue[] (?)** ids)
   
   * - Watches specified IDs in a collection.
       
       
       
       
       **Parameters**
       
       - ``ids`` - the ids to watch.
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>`  watch ()
   
   * - Watches a collection. The resulting stream will be notified of all events on this collection that the active user is authorized to see based on the configured MongoDB Realm rules.
       
       
       
       
       
       
       
       
       
       
       
   
   
.. _watchAsync:

.. _watchAsync__:

.. _MongoCollection_watchAsync:

.. _MongoCollection_watchAsync__:

.. _io_realm_mongodb_mongo_MongoCollection_watchAsync:

.. _io_realm_mongodb_mongo_MongoCollection_watchAsync__:



watchAsync
----------

.. _io_realm_mongodb_mongo_MongoCollection_watchAsync_ObjectId____:

.. _io_realm_mongodb_mongo_MongoCollection_watchAsync_ObjectId_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>`  watchAsync (**ObjectId[] (?)** ids)
   
   * - Watches specified IDs in a collection asynchronously. This convenience overload supports the use case of non-**BsonValue (?)** instances of **ObjectId (?)** by wrapping them in **BsonObjectId (?)** instances for the user.
       
       
       
       
       
       
       **Parameters**
       
       - ``ids`` - unique object identifiers of the IDs to watch.
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_mongo_MongoCollection_watchAsync_BsonValue____:

.. _io_realm_mongodb_mongo_MongoCollection_watchAsync_BsonValue_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>`  watchAsync (**BsonValue[] (?)** ids)
   
   * - Watches specified IDs in a collection asynchronously.
       
       
       
       
       **Parameters**
       
       - ``ids`` - the ids to watch.
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>`  watchAsync ()
   
   * - Watches a collection asynchronously. The resulting stream will be notified of all events on this collection that the active user is authorized to see based on the configured MongoDB Realm rules.
       
       
       
       
       
       
       
       
       
       
       
   
   
.. _watchWithFilter:

.. _watchWithFilter__:

.. _MongoCollection_watchWithFilter:

.. _MongoCollection_watchWithFilter__:



watchWithFilter
---------------

.. _io_realm_mongodb_mongo_MongoCollection_watchWithFilter_BsonDocument_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>`  watchWithFilter (**BsonDocument (?)** matchFilter)
   
   * - Watches a collection. The provided BSON document will be used as a match expression filter on the change events coming from the stream.See `how to define a match filter <https://docs.mongodb.com/manual/reference/operator/aggregation/match/>`__ .
       
       Defining the match expression to filter ChangeEvents is similar to `how to define the match expression for triggers <https://docs.mongodb.com/realm/triggers/database-triggers/>`__ 
       
       
       
       
       
       
       **Parameters**
       
       - ``matchFilter`` - the $match filter to apply to incoming change events
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_mongo_MongoCollection_watchWithFilter_Document_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmEventStreamTask <io_realm_mongodb_RealmEventStreamTask>`  watchWithFilter (**Document (?)** matchFilter)
   
   * - Watches a collection. The provided document will be used as a match expression filter on the change events coming from the stream. This convenience overload supports the use of non-**BsonDocument (?)** instances for the user.
       
       See `how to define a match filter <https://docs.mongodb.com/manual/reference/operator/aggregation/match/>`__ .
       
       Defining the match expression to filter ChangeEvents is similar to `how to define the match expression for triggers <https://docs.mongodb.com/realm/triggers/database-triggers/>`__ 
       
       
       
       
       
       
       **Parameters**
       
       - ``matchFilter`` - the $match filter to apply to incoming change events
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _watchWithFilterAsync:

.. _watchWithFilterAsync__:

.. _MongoCollection_watchWithFilterAsync:

.. _MongoCollection_watchWithFilterAsync__:



watchWithFilterAsync
--------------------

.. _io_realm_mongodb_mongo_MongoCollection_watchWithFilterAsync_BsonDocument_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>`  watchWithFilterAsync (**BsonDocument (?)** matchFilter)
   
   * - Watches a collection asynchronously. The provided BSON document will be used as a match expression filter on the change events coming from the stream.See `how to define a match filter <https://docs.mongodb.com/manual/reference/operator/aggregation/match/>`__ .
       
       Defining the match expression to filter ChangeEvents is similar to `how to define the match expression for triggers <https://docs.mongodb.com/realm/triggers/database-triggers/>`__ 
       
       
       
       
       
       
       **Parameters**
       
       - ``matchFilter`` - the $match filter to apply to incoming change events
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _io_realm_mongodb_mongo_MongoCollection_watchWithFilterAsync_Document_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`RealmEventStreamAsyncTask <io_realm_mongodb_RealmEventStreamAsyncTask>`  watchWithFilterAsync (**Document (?)** matchFilter)
   
   * - Watches a collection asynchronously. The provided document will be used as a match expression filter on the change events coming from the stream. This convenience overload supports the use of non-**BsonDocument (?)** instances for the user.
       
       See `how to define a match filter <https://docs.mongodb.com/manual/reference/operator/aggregation/match/>`__ .
       
       Defining the match expression to filter ChangeEvents is similar to `how to define the match expression for triggers <https://docs.mongodb.com/realm/triggers/database-triggers/>`__ 
       
       
       
       
       
       
       **Parameters**
       
       - ``matchFilter`` - the $match filter to apply to incoming change events
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _withCodecRegistry:

.. _withCodecRegistry__:

.. _MongoCollection_withCodecRegistry:

.. _MongoCollection_withCodecRegistry__:



withCodecRegistry
-----------------

.. _io_realm_mongodb_mongo_MongoCollection_withCodecRegistry_CodecRegistry_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`MongoCollection <io_realm_mongodb_mongo_MongoCollection>`  withCodecRegistry (**CodecRegistry (?)** codecRegistry)
   
   * - Creates a new MongoCollection instance with a different codec registry.
       
       
       
       
       **Parameters**
       
       - ``codecRegistry`` - the new **CodecRegistry (?)** for the collection.
          
          
          
          
          
       
       
       
       
       
       
       
       
       
   
   
.. _withDocumentClass:

.. _withDocumentClass__:

.. _MongoCollection_withDocumentClass:

.. _MongoCollection_withDocumentClass__:



withDocumentClass
-----------------

.. _io_realm_mongodb_mongo_MongoCollection_withDocumentClass_Class_NewDocumentT__:

.. _io_realm_mongodb_mongo_MongoCollection_withDocumentClass_Class_:

.. list-table::
   :header-rows: 1
   
   * -    public :ref:`MongoCollection <io_realm_mongodb_mongo_MongoCollection>`  withDocumentClass <**NewDocumentT (?)** >(`java.lang.Class\<NewDocumentT> <https://docs.oracle.com/javase/7/docs/api/java/lang/Class.html>`__  clazz)
   
   * - Creates a new MongoCollection instance with a different default class to cast any documents returned from the database into.
       
       
       **Type Parameters**
       
       - ``NewDocumentT`` - The type that the new collection will encode documents from and decode documents to.
          
          
          
       
       
       
       
       **Parameters**
       
       - ``clazz`` - the default class to which any documents returned from the database will be cast.
          
          
          
       
       
       
       
       
       
       
       
       
   
   

