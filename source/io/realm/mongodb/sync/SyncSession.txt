
.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

io.realm.mongodb.sync.SyncSession
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _io_realm_mongodb_sync_SyncSession:

*Superclass:*

- `java.lang.Object <https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html>`__

A session controls how data is synchronized between a single Realm on the device and the server Realm on the Realm Object Server.A Session is created by opening a Realm instance using a :ref:`SyncConfiguration <io_realm_mongodb_sync_SyncConfiguration>`. Once a session has been created, it will continue to exist until the app is closed or all threads using this :ref:`SyncConfiguration <io_realm_mongodb_sync_SyncConfiguration>` closes their respective :ref:`Realm <io_realm_Realm>`s.



A session is controlled by Realm, but can provide additional information in case of errors. These errors are passed along in the :ref:`SyncSession.ErrorHandler <io_realm_mongodb_sync_SyncSession_ErrorHandler>`.



When creating a session, Realm will establish a connection to the server. This connection is controlled by Realm and might be shared between multiple sessions. It is possible to get insight into the connection using :ref:`#addConnectionChangeListener(ConnectionListener) <io_realm_mongodb_sync_SyncSession_addConnectionChangeListener_ConnectionListener_>` and :ref:`#isConnected() <io_realm_mongodb_sync_SyncSession_isConnected__>`.



The session itself has a different lifecycle than the underlying connection. The state of the session can be found using :ref:`#getState() <io_realm_mongodb_sync_SyncSession_getState__>`.



The :ref:`SyncSession <io_realm_mongodb_sync_SyncSession>` object is thread safe.




Nested Class Summary
====================

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Class and Description
   
   * - ``public static final``
     - ``io.realm.mongodb.sync.SyncSession.State``
   
   * - ``public static interface``
     - ``io.realm.mongodb.sync.SyncSession.ErrorHandler``
   
   * - ``public static interface``
     - ``io.realm.mongodb.sync.SyncSession.ClientResetHandler``
   
   
Method Summary
==============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Method and Description
   
   * - public :ref:`SyncConfiguration <io_realm_mongodb_sync_SyncConfiguration>`
     - :ref:`getConfiguration <io_realm_mongodb_sync_SyncSession_getConfiguration__>` ()
       
       Returns the :ref:`SyncConfiguration <io_realm_mongodb_sync_SyncConfiguration>` that is responsible for controlling the session.
       
       
       
       
       
   
   * - public :ref:`User <io_realm_mongodb_User>`
     - :ref:`getUser <io_realm_mongodb_sync_SyncSession_getUser__>` ()
       
       Returns the :ref:`User <io_realm_mongodb_User>` defined by the :ref:`SyncConfiguration <io_realm_mongodb_sync_SyncConfiguration>` that is used to connect to MongoDB Realm.
       
       
       
       
       
   
   * - public `URI <https://docs.oracle.com/javase/7/docs/api/java/net/URI.html>`__
     - :ref:`getServerUrl <io_realm_mongodb_sync_SyncSession_getServerUrl__>` ()
       
       Returns the `URI <https://docs.oracle.com/javase/7/docs/api/java/net/URI.html>`__ describing the remote Realm which this session connects to and synchronizes changes with.
       
       
       
       
       
   
   * - public :ref:`SyncSession.State <io_realm_mongodb_sync_SyncSession_State>`
     - :ref:`getState <io_realm_mongodb_sync_SyncSession_getState__>` ()
       
       Get the current session's state, as defined in :ref:`SyncSession.State <io_realm_mongodb_sync_SyncSession_State>`.
       
       
       
       
       
   
   * - public :ref:`ConnectionState <io_realm_mongodb_sync_ConnectionState>`
     - :ref:`getConnectionState <io_realm_mongodb_sync_SyncSession_getConnectionState__>` ()
       
       Get the current state of the connection used by the session as defined in :ref:`ConnectionState <io_realm_mongodb_sync_ConnectionState>`.
       
       
       
       
       
   
   * - public **boolean**
     - :ref:`isConnected <io_realm_mongodb_sync_SyncSession_isConnected__>` ()
       
       Checks if the session is connected to the server and can synchronize data.
       
       
       
   
   * - public synchronized **void**
     - :ref:`addDownloadProgressListener <io_realm_mongodb_sync_SyncSession_addDownloadProgressListener_ProgressMode__ProgressListener_>` (:ref:`ProgressMode <io_realm_mongodb_sync_ProgressMode>` mode, :ref:`ProgressListener <io_realm_mongodb_sync_ProgressListener>` listener)
       
       Adds a progress listener tracking changes that need to be downloaded from the Realm Object Server.
       
       
       
   
   * - public synchronized **void**
     - :ref:`addUploadProgressListener <io_realm_mongodb_sync_SyncSession_addUploadProgressListener_ProgressMode__ProgressListener_>` (:ref:`ProgressMode <io_realm_mongodb_sync_ProgressMode>` mode, :ref:`ProgressListener <io_realm_mongodb_sync_ProgressListener>` listener)
       
       Adds a progress listener tracking changes that need to be uploaded from the device to the Realm Object Server.
       
       
       
   
   * - public synchronized **void**
     - :ref:`removeProgressListener <io_realm_mongodb_sync_SyncSession_removeProgressListener_ProgressListener_>` (:ref:`ProgressListener <io_realm_mongodb_sync_ProgressListener>` listener)
       
       Removes a progress listener.
       
       
       
   
   * - public synchronized **void**
     - :ref:`addConnectionChangeListener <io_realm_mongodb_sync_SyncSession_addConnectionChangeListener_ConnectionListener_>` (:ref:`ConnectionListener <io_realm_mongodb_sync_ConnectionListener>` listener)
       
       Adds a listener tracking changes to the connection backing this session.
       
       
       
   
   * - public synchronized **void**
     - :ref:`removeConnectionChangeListener <io_realm_mongodb_sync_SyncSession_removeConnectionChangeListener_ConnectionListener_>` (:ref:`ConnectionListener <io_realm_mongodb_sync_ConnectionListener>` listener)
       
       Removes a previously registered :ref:`ConnectionListener <io_realm_mongodb_sync_ConnectionListener>`.
       
       
       
       
       
   
   * - public **void**
     - :ref:`downloadAllServerChanges <io_realm_mongodb_sync_SyncSession_downloadAllServerChanges__>` ()
       
       Calling this method will block until all known remote changes have been downloaded and applied to the Realm.
       
       
       
   
   * - public **boolean**
     - :ref:`downloadAllServerChanges <io_realm_mongodb_sync_SyncSession_downloadAllServerChanges_long__TimeUnit_>` (**long** timeout, `TimeUnit <https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/TimeUnit.html>`__ unit)
       
       Calling this method will block until all known remote changes have been downloaded and applied to the Realm or the specified timeout is hit.
       
       
       
   
   * - public **void**
     - :ref:`uploadAllLocalChanges <io_realm_mongodb_sync_SyncSession_uploadAllLocalChanges__>` ()
       
       Calling this method will block until all known local changes have been uploaded to the server.
       
       
       
   
   * - public **boolean**
     - :ref:`uploadAllLocalChanges <io_realm_mongodb_sync_SyncSession_uploadAllLocalChanges_long__TimeUnit_>` (**long** timeout, `TimeUnit <https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/TimeUnit.html>`__ unit)
       
       Calling this method will block until all known local changes have been uploaded to the server or the specified timeout is hit.
       
       
       
   
   * - public synchronized **void**
     - :ref:`start <io_realm_mongodb_sync_SyncSession_start__>` ()
       
       Attempts to start the session and enable synchronization with the Realm Object Server.
       
       
       
   
   * - public synchronized **void**
     - :ref:`stop <io_realm_mongodb_sync_SyncSession_stop__>` ()
       
       Stops any synchronization with the Realm Object Server until the Realm is re-opened again after fully closing it.
       
       
       
   
   
Method Detail
=============

getConfiguration
----------------

.. _io_realm_mongodb_sync_SyncSession_getConfiguration__:

public :ref:`SyncConfiguration <io_realm_mongodb_sync_SyncConfiguration>` getConfiguration ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Returns the :ref:`SyncConfiguration <io_realm_mongodb_sync_SyncConfiguration>` that is responsible for controlling the session.


getUser
-------

.. _io_realm_mongodb_sync_SyncSession_getUser__:

public :ref:`User <io_realm_mongodb_User>` getUser ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Returns the :ref:`User <io_realm_mongodb_User>` defined by the :ref:`SyncConfiguration <io_realm_mongodb_sync_SyncConfiguration>` that is used to connect to MongoDB Realm.


getServerUrl
------------

.. _io_realm_mongodb_sync_SyncSession_getServerUrl__:

public `URI <https://docs.oracle.com/javase/7/docs/api/java/net/URI.html>`__ getServerUrl ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Returns the `URI <https://docs.oracle.com/javase/7/docs/api/java/net/URI.html>`__ describing the remote Realm which this session connects to and synchronizes changes with.


getState
--------

.. _io_realm_mongodb_sync_SyncSession_getState__:

public :ref:`SyncSession.State <io_realm_mongodb_sync_SyncSession_State>` getState ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Get the current session's state, as defined in :ref:`SyncSession.State <io_realm_mongodb_sync_SyncSession_State>`.

Note that the state may change after this method returns.


See Also
________

SyncSession.State

getConnectionState
------------------

.. _io_realm_mongodb_sync_SyncSession_getConnectionState__:

public :ref:`ConnectionState <io_realm_mongodb_sync_ConnectionState>` getConnectionState ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Get the current state of the connection used by the session as defined in :ref:`ConnectionState <io_realm_mongodb_sync_ConnectionState>`.


See Also
________

ConnectionState

isConnected
-----------

.. _io_realm_mongodb_sync_SyncSession_isConnected__:

public **boolean** isConnected ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Checks if the session is connected to the server and can synchronize data. This is a best guess effort. To conserve battery the underlying implementation uses heartbeats to detect if the connection is still available. So if no data is actively being synced and some time has elapsed since the last heartbeat, the connection could have been dropped but this method will still return ``true``.


addDownloadProgressListener
---------------------------

.. _io_realm_mongodb_sync_SyncSession_addDownloadProgressListener_ProgressMode__ProgressListener_:

public synchronized **void** addDownloadProgressListener (:ref:`ProgressMode <io_realm_mongodb_sync_ProgressMode>` mode, :ref:`ProgressListener <io_realm_mongodb_sync_ProgressListener>` listener)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Adds a progress listener tracking changes that need to be downloaded from the Realm Object Server.The :ref:`ProgressListener <io_realm_mongodb_sync_ProgressListener>` will be triggered immediately when registered, and periodically afterwards.




Parameters
__________

- ``mode - ``type of mode used. See :ref:`ProgressMode <io_realm_mongodb_sync_ProgressMode>` for more information.
   
   
   
- ``listener - ``the listener to register.
   

addUploadProgressListener
-------------------------

.. _io_realm_mongodb_sync_SyncSession_addUploadProgressListener_ProgressMode__ProgressListener_:

public synchronized **void** addUploadProgressListener (:ref:`ProgressMode <io_realm_mongodb_sync_ProgressMode>` mode, :ref:`ProgressListener <io_realm_mongodb_sync_ProgressListener>` listener)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Adds a progress listener tracking changes that need to be uploaded from the device to the Realm Object Server.The :ref:`ProgressListener <io_realm_mongodb_sync_ProgressListener>` will be triggered immediately when registered, and periodically afterwards.




Parameters
__________

- ``mode - ``type of mode used. See :ref:`ProgressMode <io_realm_mongodb_sync_ProgressMode>` for more information.
   
   
   
- ``listener - ``the listener to register.
   

removeProgressListener
----------------------

.. _io_realm_mongodb_sync_SyncSession_removeProgressListener_ProgressListener_:

public synchronized **void** removeProgressListener (:ref:`ProgressListener <io_realm_mongodb_sync_ProgressListener>` listener)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Removes a progress listener. If the listener wasn't registered, this method will do nothing.
Parameters
__________

- ``listener - ``listener to remove.
   

addConnectionChangeListener
---------------------------

.. _io_realm_mongodb_sync_SyncSession_addConnectionChangeListener_ConnectionListener_:

public synchronized **void** addConnectionChangeListener (:ref:`ConnectionListener <io_realm_mongodb_sync_ConnectionListener>` listener)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Adds a listener tracking changes to the connection backing this session. See :ref:`ConnectionState <io_realm_mongodb_sync_ConnectionState>` for further details.


Parameters
__________

- ``listener - ``the listener to register.
   

Throws
______

See Also
________

ConnectionState

removeConnectionChangeListener
------------------------------

.. _io_realm_mongodb_sync_SyncSession_removeConnectionChangeListener_ConnectionListener_:

public synchronized **void** removeConnectionChangeListener (:ref:`ConnectionListener <io_realm_mongodb_sync_ConnectionListener>` listener)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Removes a previously registered :ref:`ConnectionListener <io_realm_mongodb_sync_ConnectionListener>`.


Parameters
__________

- ``listener - ``listener to remove
   

Throws
______

downloadAllServerChanges
------------------------

.. _io_realm_mongodb_sync_SyncSession_downloadAllServerChanges__:

public **void** downloadAllServerChanges ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Calling this method will block until all known remote changes have been downloaded and applied to the Realm. This will involve network access, so calling this method should only be done from a non-UI thread.If the device is offline, this method might never return.

This method cannot be called before the session has been started.


Throws
______

.. _io_realm_mongodb_sync_SyncSession_downloadAllServerChanges_long__TimeUnit_:

public **boolean** downloadAllServerChanges (**long** timeout, `TimeUnit <https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/TimeUnit.html>`__ unit)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Calling this method will block until all known remote changes have been downloaded and applied to the Realm or the specified timeout is hit. This will involve network access, so calling this method should only be done from a non-UI thread.This method cannot be called before the Realm has been opened.


Throws
______

uploadAllLocalChanges
---------------------

.. _io_realm_mongodb_sync_SyncSession_uploadAllLocalChanges__:

public **void** uploadAllLocalChanges ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Calling this method will block until all known local changes have been uploaded to the server. This will involve network access, so calling this method should only be done from a non-UI thread.If the device is offline, this method might never return.

This method cannot be called before the Realm has been opened.


Throws
______

.. _io_realm_mongodb_sync_SyncSession_uploadAllLocalChanges_long__TimeUnit_:

public **boolean** uploadAllLocalChanges (**long** timeout, `TimeUnit <https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/TimeUnit.html>`__ unit)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Calling this method will block until all known local changes have been uploaded to the server or the specified timeout is hit. This will involve network access, so calling this method should only be done from a non-UI thread.This method cannot be called before the Realm has been opened.


Throws
______

start
-----

.. _io_realm_mongodb_sync_SyncSession_start__:

public synchronized **void** start ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Attempts to start the session and enable synchronization with the Realm Object Server.This happens automatically when opening the Realm instance, so doing it manually should only be needed if the session was stopped using :ref:`#stop() <io_realm_mongodb_sync_SyncSession_stop__>`.



If the session was already started, calling this method will do nothing.

A session is considered started if :ref:`#getState() <io_realm_mongodb_sync_SyncSession_getState__>` returns :ref:`State#ACTIVE <io_realm_mongodb_sync_SyncSession_State_ACTIVE>`. If the session is :ref:`State#DYING <io_realm_mongodb_sync_SyncSession_State_DYING>`, the session will be moved back to :ref:`State#ACTIVE <io_realm_mongodb_sync_SyncSession_State_ACTIVE>`.




See Also
________

#getState()

#stop()

stop
----

.. _io_realm_mongodb_sync_SyncSession_stop__:

public synchronized **void** stop ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Stops any synchronization with the Realm Object Server until the Realm is re-opened again after fully closing it.Synchronization can be re-enabled by calling :ref:`#start() <io_realm_mongodb_sync_SyncSession_start__>` again.



If the session is already stopped, calling this method will do nothing.



