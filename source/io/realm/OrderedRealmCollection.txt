
.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

io.realm.OrderedRealmCollection<E>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _io_realm_OrderedRealmCollection:

*Implemented interfaces:*

- `java.util.List <https://docs.oracle.com/javase/7/docs/api/java/util/List.html>`__
- :ref:`io.realm.RealmCollection <io_realm_RealmCollection>`

An ``OrderedRealmCollection`` is a collection which maintains an ordering for its elements. Every element in the ``OrderedRealmCollection`` has an index. Each element can thus be accessed by its index, with the first index being zero. Normally, ``OrderedRealmCollection``s allow duplicate elements, as compared to Sets, where elements have to be unique.

There are three types of :ref:`OrderedRealmCollection <io_realm_OrderedRealmCollection>`. :ref:`RealmResults <io_realm_RealmResults>` and :ref:`RealmList <io_realm_RealmList>` are live collections. They are up-to-date all the time and they will never contain an invalid :ref:`RealmObject <io_realm_RealmObject>`. :ref:`OrderedRealmCollectionSnapshot <io_realm_OrderedRealmCollectionSnapshot>` is different. An :ref:`OrderedRealmCollectionSnapshot <io_realm_OrderedRealmCollectionSnapshot>` can be created from another :ref:`OrderedRealmCollection <io_realm_OrderedRealmCollection>`. Its size and elements order stay the same as the original collection's when it was created. :ref:`OrderedRealmCollectionSnapshot <io_realm_OrderedRealmCollectionSnapshot>` may contain invalid :ref:`RealmObject <io_realm_RealmObject>`s if the objects get deleted.



Using iterators to iterate on :ref:`OrderedRealmCollection <io_realm_OrderedRealmCollection>` will always work. You can delete or modify the elements without impacting the iterator. See below example:

 

.. code-block:: java

   
    RealmResults<Dog> dogs = realm.where(Dog.class).findAll();
    int s = dogs.size(); // 10
    realm.beginTransaction();
    for (Dog dog : dogs) {
        dog.deleteFromRealm();
        s = dogs.size(); // This will be decreased by 1 every time after a dog is removed.
    }
    realm.commitTransaction();
    s = dogs.size(); // 0
    


 

An iterator created from a live collection will create a stable view when the iterator is created, allowing you to delete and modify elements while iterating without impacting the iterator. However, the ``RealmResults`` backing the iterator will still be live updated meaning that size and order of elements can change when iterating. :ref:`RealmList <io_realm_RealmList>` has the same behaviour as :ref:`RealmResults <io_realm_RealmResults>` since they are both live collections.



A simple for-loop is different. See below example:

 

.. code-block:: java

   
    RealmResults<Dog> dogs = realm.where(Dog.class).findAll();
    realm.beginTransaction();
    for (int i = 0; i < dogs.size(); i++) {
        dogs.get(i).deleteFromRealm();
    }
    realm.commitTransaction();
    s = dogs.size(); // 5
    


 

The above example only deletes half of elements in the :ref:`RealmResults <io_realm_RealmResults>`. This is because of ``dogs.size()`` decreased by 1 for every loop. The deletion happens in the loop will immediately impact the size of ``RealmResults``. To solve this problem, you can create a :ref:`OrderedRealmCollectionSnapshot <io_realm_OrderedRealmCollectionSnapshot>` from the :ref:`RealmResults <io_realm_RealmResults>` or :ref:`RealmList <io_realm_RealmList>` and do simple for-loop on that instead:



 

.. code-block:: java

   
    RealmResults<Dog> dogs = realm.where(Dog.class).findAll();
    OrderedRealmCollectionSnapshot snapshot = dogs.createSnapshot();
    // dogs.size() == 10 && snapshot.size() == 10
    realm.beginTransaction();
    for (int i = 0; i < snapshot.size(); i++) {
        snapshot.get(0).deleteFromRealm();
        // snapshot.get(0).isValid() == false
    }
    realm.commitTransaction();
    // dogs.size() == 0 && snapshot.size() == 10
    


 

As you can see, after deletion, the size and elements order of snapshot stay the same as before. But the element at the position becomes invalid.


Method Summary
==============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Method and Description
   
   * - public **E (?)**
     - :ref:`first <io_realm_OrderedRealmCollection_first__>` ()
       
       Gets the first object from the collection.
       
       
       
   
   * - public **E (?)**
     - :ref:`first <io_realm_OrderedRealmCollection_first_E_>` (**E (?)** defaultValue)
       
       Gets the first object from the collection.
       
       
       
   
   * - public **E (?)**
     - :ref:`last <io_realm_OrderedRealmCollection_last__>` ()
       
       Gets the last object from the collection.
       
       
       
   
   * - public **E (?)**
     - :ref:`last <io_realm_OrderedRealmCollection_last_E_>` (**E (?)** defaultValue)
       
       Gets the last object from the collection.
       
       
       
   
   * - public :ref:`RealmResults <io_realm_RealmResults>`
     - :ref:`sort <io_realm_OrderedRealmCollection_sort_String_>` (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldName)
       
       Sorts a collection based on the provided field in ascending order.
       
       
       
   
   * - public :ref:`RealmResults <io_realm_RealmResults>`
     - :ref:`sort <io_realm_OrderedRealmCollection_sort_String__Sort_>` (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldName, :ref:`Sort <io_realm_Sort>` sortOrder)
       
       Sorts a collection based on the provided field and sort order.
       
       
       
   
   * - public :ref:`RealmResults <io_realm_RealmResults>`
     - :ref:`sort <io_realm_OrderedRealmCollection_sort_String__Sort__String__Sort_>` (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldName1, :ref:`Sort <io_realm_Sort>` sortOrder1, `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldName2, :ref:`Sort <io_realm_Sort>` sortOrder2)
       
       Sorts a collection based on the provided fields and sort orders.
       
       
       
   
   * - public :ref:`RealmResults <io_realm_RealmResults>`
     - :ref:`sort <io_realm_OrderedRealmCollection_sort_String[]__Sort[]_>` (`java.lang.String[] <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldNames, :ref:`io.realm.Sort[] <io_realm_Sort>` sortOrders)
       
       Sorts a collection based on the provided fields and sort orders.
       
       
       
   
   * - public **void**
     - :ref:`deleteFromRealm <io_realm_OrderedRealmCollection_deleteFromRealm_int_>` (**int** location)
       
       Deletes the object at the given index from the Realm.
       
       
       
   
   * - public **boolean**
     - :ref:`deleteFirstFromRealm <io_realm_OrderedRealmCollection_deleteFirstFromRealm__>` ()
       
       Deletes the first object from the Realm.
       
       
       
   
   * - public **boolean**
     - :ref:`deleteLastFromRealm <io_realm_OrderedRealmCollection_deleteLastFromRealm__>` ()
       
       Deletes the last object from the Realm.
       
       
       
   
   * - public :ref:`OrderedRealmCollectionSnapshot <io_realm_OrderedRealmCollectionSnapshot>`
     - :ref:`createSnapshot <io_realm_OrderedRealmCollection_createSnapshot__>` ()
       
       Creates a snapshot from this :ref:`OrderedRealmCollection <io_realm_OrderedRealmCollection>`.
       
       
       
       
       
   
   
Method Detail
=============

first
-----

.. _io_realm_OrderedRealmCollection_first__:

public **E (?)** first ()
~~~~~~~~~~~~~~~~~~~~~~~~~

Gets the first object from the collection.
Throws
______

.. _io_realm_OrderedRealmCollection_first_E_:

public **E (?)** first (**E (?)** defaultValue)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Gets the first object from the collection. If the collection is empty, the provided default will be used instead.
last
----

.. _io_realm_OrderedRealmCollection_last__:

public **E (?)** last ()
~~~~~~~~~~~~~~~~~~~~~~~~

Gets the last object from the collection.
Throws
______

.. _io_realm_OrderedRealmCollection_last_E_:

public **E (?)** last (**E (?)** defaultValue)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Gets the last object from the collection. If the collection is empty, the provided default will be used instead.
sort
----

.. _io_realm_OrderedRealmCollection_sort_String_:

public :ref:`RealmResults <io_realm_RealmResults>` sort (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldName)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Sorts a collection based on the provided field in ascending order.
Parameters
__________

- ``fieldName - ``the field name to sort by. Only fields of type boolean, short, int, long, float, double, Date, and String are supported.
   

Throws
______

.. _io_realm_OrderedRealmCollection_sort_String__Sort_:

public :ref:`RealmResults <io_realm_RealmResults>` sort (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldName, :ref:`Sort <io_realm_Sort>` sortOrder)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Sorts a collection based on the provided field and sort order.
Parameters
__________

- ``fieldName - ``the field name to sort by. Only fields of type boolean, short, int, long, float, double, Date, and String are supported.
   
- ``sortOrder - ``the direction to sort by.
   

Throws
______

.. _io_realm_OrderedRealmCollection_sort_String__Sort__String__Sort_:

public :ref:`RealmResults <io_realm_RealmResults>` sort (`String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldName1, :ref:`Sort <io_realm_Sort>` sortOrder1, `String <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldName2, :ref:`Sort <io_realm_Sort>` sortOrder2)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Sorts a collection based on the provided fields and sort orders.
Parameters
__________

- ``fieldName1 - ``first field name. Only fields of type boolean, short, int, long, float, double, Date, and String are supported.
   
- ``sortOrder1 - ``sort order for first field.
   
- ``fieldName2 - ``second field name. Only fields of type boolean, short, int, long, float, double, Date, and String are supported.
   
- ``sortOrder2 - ``sort order for second field.
   

Throws
______

.. _io_realm_OrderedRealmCollection_sort_String[]__Sort[]_:

public :ref:`RealmResults <io_realm_RealmResults>` sort (`java.lang.String[] <https://docs.oracle.com/javase/7/docs/api/java/lang/String.html>`__ fieldNames, :ref:`io.realm.Sort[] <io_realm_Sort>` sortOrders)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Sorts a collection based on the provided fields and sort orders.
Parameters
__________

- ``fieldNames - ``an array of field names to sort by. Only fields of type boolean, short, int, long, float, double, Date, and String are supported.
   
- ``sortOrders - ``the directions to sort by.
   

Throws
______

deleteFromRealm
---------------

.. _io_realm_OrderedRealmCollection_deleteFromRealm_int_:

public **void** deleteFromRealm (**int** location)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Deletes the object at the given index from the Realm. This also removes it from the collection.
Parameters
__________

- ``location - ``the array index identifying the object to be removed.
   

Throws
______

deleteFirstFromRealm
--------------------

.. _io_realm_OrderedRealmCollection_deleteFirstFromRealm__:

public **boolean** deleteFirstFromRealm ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Deletes the first object from the Realm. This also removes it from this collection.
Throws
______

deleteLastFromRealm
-------------------

.. _io_realm_OrderedRealmCollection_deleteLastFromRealm__:

public **boolean** deleteLastFromRealm ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Deletes the last object from the Realm. This also removes it from this collection.
Throws
______

createSnapshot
--------------

.. _io_realm_OrderedRealmCollection_createSnapshot__:

public :ref:`OrderedRealmCollectionSnapshot <io_realm_OrderedRealmCollectionSnapshot>` createSnapshot ()
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Creates a snapshot from this :ref:`OrderedRealmCollection <io_realm_OrderedRealmCollection>`.


Throws
______

See Also
________

OrderedRealmCollectionSnapshot


