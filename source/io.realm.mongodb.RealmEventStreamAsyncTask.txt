
.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

io.realm.mongodb.RealmEventStreamAsyncTask<T>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _io_realm_mongodb_RealmEventStreamAsyncTask:

*Implemented interfaces:*

- :ref:`io.realm.RealmAsyncTask <io_realm_RealmAsyncTask>`

The RealmEventStreamAsyncTask is a specific version of **RealmAsyncTask (?)**that provides a non-blocking mechanism to work with asynchronous operations carried out against MongoDB Realm that yield stream results.


``Method Summary``
==================

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Method and Description
   
   * - ``public`` **void (?)**
     - :ref:`get <io_realm_mongodb_RealmEventStreamAsyncTask_get__App_Callback_BaseChangeEvent_T____>` (:ref:`io.realm.mongodb.App.Callback\<io.realm.mongodb.mongo.events.BaseChangeEvent\<T>> <io_realm_mongodb_App_Callback>` callback)
       
       Provides a way to subscribe to asynchronous operations via a callback, which handles both results and errors.
       
       
       
   
   * - ``public`` **boolean (?)**
     - :ref:`isOpen <io_realm_mongodb_RealmEventStreamAsyncTask_isOpen____>` ()
       
       Whether or not the stream is currently open.
       
       
       
   
   
``Method Detail``
=================

.. _io_realm_mongodb_RealmEventStreamAsyncTask_get__App_Callback_BaseChangeEvent_T____:

get
----

``public`` **void (?)** get (:ref:`io.realm.mongodb.App.Callback\<io.realm.mongodb.mongo.events.BaseChangeEvent\<T>> <io_realm_mongodb_App_Callback>` callback)

Provides a way to subscribe to asynchronous operations via a callback, which handles both results and errors.
``Parameters``
~~~~~~~~~~~~~~

- ``callback - ``the **App.Callback (?)**designed to receive event results.
   
   
   

``Throws``
~~~~~~~~~~

.. _io_realm_mongodb_RealmEventStreamAsyncTask_isOpen____:

isOpen
------

``public`` **boolean (?)** isOpen ()

Whether or not the stream is currently open.

