
.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

io.realm.rx.RxObservableFactory
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _io_realm_rx_RxObservableFactory:

Factory interface for creating Rx Observables for Realm classes.
Method Summary
==============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Method and Description
   
   * - public **<any> (?)**
     - :ref:`from <io_realm_rx_RxObservableFactory_from__Realm__>` (:ref:`Realm <io_realm_Realm>` realm)
       
       Creates a Flowable for a **Realm (?)**.
       
       
       
       
       
   
   * - public **<any> (?)**
     - :ref:`from <io_realm_rx_RxObservableFactory_from__DynamicRealm__>` (:ref:`DynamicRealm <io_realm_DynamicRealm>` realm)
       
       Creates a Flowable for a **DynamicRealm (?)**.
       
       
       
       
       
   
   * - public **<any> (?)**
     - :ref:`from <io_realm_rx_RxObservableFactory_from__Realm__RealmResults_E___>` <**E (?)** >(:ref:`Realm <io_realm_Realm>` realm, :ref:`io.realm.RealmResults\<E> <io_realm_RealmResults>` results)
       
       Creates a Flowable for a **RealmResults (?)**.
       
       
       
       
       
   
   * - public **<any> (?)**
     - :ref:`changesetsFrom <io_realm_rx_RxObservableFactory_changesetsFrom__Realm__RealmResults_E___>` <**E (?)** >(:ref:`Realm <io_realm_Realm>` realm, :ref:`io.realm.RealmResults\<E> <io_realm_RealmResults>` results)
       
       Creates an Observable for a **RealmResults (?)**.
       
       
       
       
       
   
   * - public **<any> (?)**
     - :ref:`from <io_realm_rx_RxObservableFactory_from__DynamicRealm__RealmResults_E___>` <**E (?)** >(:ref:`DynamicRealm <io_realm_DynamicRealm>` realm, :ref:`io.realm.RealmResults\<E> <io_realm_RealmResults>` results)
       
       Creates a Flowable for a **RealmResults (?)**.
       
       
       
       
       
   
   * - public **<any> (?)**
     - :ref:`changesetsFrom <io_realm_rx_RxObservableFactory_changesetsFrom__DynamicRealm__RealmResults_E___>` <**E (?)** >(:ref:`DynamicRealm <io_realm_DynamicRealm>` realm, :ref:`io.realm.RealmResults\<E> <io_realm_RealmResults>` results)
       
       Creates an Observable for a **RealmResults (?)**.
       
       
       
       
       
   
   * - public **<any> (?)**
     - :ref:`from <io_realm_rx_RxObservableFactory_from__Realm__RealmList_E___>` <**E (?)** >(:ref:`Realm <io_realm_Realm>` realm, :ref:`io.realm.RealmList\<E> <io_realm_RealmList>` list)
       
       Creates an Observable for a **RealmList (?)**.
       
       
       
       
       
   
   * - public **<any> (?)**
     - :ref:`changesetsFrom <io_realm_rx_RxObservableFactory_changesetsFrom__Realm__RealmList_E___>` <**E (?)** >(:ref:`Realm <io_realm_Realm>` realm, :ref:`io.realm.RealmList\<E> <io_realm_RealmList>` list)
       
       Creates an Observable for a **RealmList (?)**.
       
       
       
       
       
   
   * - public **<any> (?)**
     - :ref:`from <io_realm_rx_RxObservableFactory_from__DynamicRealm__RealmList_E___>` <**E (?)** >(:ref:`DynamicRealm <io_realm_DynamicRealm>` realm, :ref:`io.realm.RealmList\<E> <io_realm_RealmList>` list)
       
       Creates a Flowable for a **RealmList (?)**.
       
       
       
       
       
   
   * - public **<any> (?)**
     - :ref:`changesetsFrom <io_realm_rx_RxObservableFactory_changesetsFrom__DynamicRealm__RealmList_E___>` <**E (?)** >(:ref:`DynamicRealm <io_realm_DynamicRealm>` realm, :ref:`io.realm.RealmList\<E> <io_realm_RealmList>` list)
       
       Creates an Observable for a **RealmList (?)**.
       
       
       
       
       
   
   * - public **<any> (?)**
     - :ref:`from <io_realm_rx_RxObservableFactory_from__Realm__E__>` <**E (?)** >(:ref:`Realm <io_realm_Realm>` realm, **E (?)** object)
       
       Creates a Flowable for a **RealmObject (?)**.
       
       
       
       
       
   
   * - public **<any> (?)**
     - :ref:`changesetsFrom <io_realm_rx_RxObservableFactory_changesetsFrom__Realm__E__>` <**E (?)** >(:ref:`Realm <io_realm_Realm>` realm, **E (?)** object)
       
       Creates an Observable for a **RealmObject (?)**.
       
       
       
       
       
   
   * - public **<any> (?)**
     - :ref:`from <io_realm_rx_RxObservableFactory_from__DynamicRealm__DynamicRealmObject__>` (:ref:`DynamicRealm <io_realm_DynamicRealm>` realm, :ref:`DynamicRealmObject <io_realm_DynamicRealmObject>` object)
       
       Creates a Flowable for a **DynamicRealmObject (?)**.
       
       
       
       
       
   
   * - public **<any> (?)**
     - :ref:`changesetsFrom <io_realm_rx_RxObservableFactory_changesetsFrom__DynamicRealm__DynamicRealmObject__>` (:ref:`DynamicRealm <io_realm_DynamicRealm>` realm, :ref:`DynamicRealmObject <io_realm_DynamicRealmObject>` object)
       
       Creates an Observable for a **RealmObject (?)**.
       
       
       
       
       
   
   * - public **<any> (?)**
     - :ref:`from <io_realm_rx_RxObservableFactory_from__Realm__RealmQuery_E___>` <**E (?)** >(:ref:`Realm <io_realm_Realm>` realm, :ref:`io.realm.RealmQuery\<E> <io_realm_RealmQuery>` query)
       
       Creates a Single from a **RealmQuery (?)**.
       
       
       
       
       
   
   * - public **<any> (?)**
     - :ref:`from <io_realm_rx_RxObservableFactory_from__DynamicRealm__RealmQuery_E___>` <**E (?)** >(:ref:`DynamicRealm <io_realm_DynamicRealm>` realm, :ref:`io.realm.RealmQuery\<E> <io_realm_RealmQuery>` query)
       
       Creates a Single from a **RealmQuery (?)**.
       
       
       
       
       
   
   
Method Detail
=============

.. _io_realm_rx_RxObservableFactory_from__Realm__:

``from``
--------

public **<any> (?)** from (:ref:`Realm <io_realm_Realm>` realm)

Creates a Flowable for a **Realm (?)**. It should emit the initial state of the Realm when subscribed to and on each subsequent update of the Realm.

Realm flowables are hot as Realms are automatically kept up to date.


Parameters
~~~~~~~~~~

- ``realm - ``**Realm (?)**to listen to changes for.
   
   
   

.. _io_realm_rx_RxObservableFactory_from__DynamicRealm__:

``from``
--------

public **<any> (?)** from (:ref:`DynamicRealm <io_realm_DynamicRealm>` realm)

Creates a Flowable for a **DynamicRealm (?)**. It should emit the initial state of the Realm when subscribed to and on each subsequent update of the Realm.

DynamicRealm observables are hot as DynamicRealms are automatically kept up to date.


Parameters
~~~~~~~~~~

- ``realm - ``**DynamicRealm (?)**to listen to changes for.
   
   
   

.. _io_realm_rx_RxObservableFactory_from__Realm__RealmResults_E___:

``from``
--------

public **<any> (?)** from <**E (?)** >(:ref:`Realm <io_realm_Realm>` realm, :ref:`io.realm.RealmResults\<E> <io_realm_RealmResults>` results)

Creates a Flowable for a **RealmResults (?)**. It should emit the initial RealmResult when subscribed to and on each subsequent update of the RealmResults.

RealmResults observables are hot as RealmResults are automatically kept up to date.


Type Parameters
~~~~~~~~~~~~~~~

- E - type of RealmObject
   

Parameters
~~~~~~~~~~

- ``results - ``**RealmResults (?)**to listen to changes for.
   
   
   
- ``realm - ``**Realm (?)**instance results are coming from.
   
   
   

.. _io_realm_rx_RxObservableFactory_changesetsFrom__Realm__RealmResults_E___:

``changesetsFrom``
------------------

public **<any> (?)** changesetsFrom <**E (?)** >(:ref:`Realm <io_realm_Realm>` realm, :ref:`io.realm.RealmResults\<E> <io_realm_RealmResults>` results)

Creates an Observable for a **RealmResults (?)**. It should emit the initial RealmResult when subscribed to and on each subsequent update of the RealmResults it should emit the RealmResults + the **OrderedCollectionChangeSet (?)**that describes the update.

Changeset observables do not support backpressure as a changeset depends on the state of the previous changeset. Handling backpressure should therefor be left to users.


Type Parameters
~~~~~~~~~~~~~~~

- E - type of RealmObject
   

Parameters
~~~~~~~~~~

- ``results - ``**RealmResults (?)**to listen to changes for.
   
   
   
- ``realm - ``**Realm (?)**instance results are coming from.
   
   
   

.. _io_realm_rx_RxObservableFactory_from__DynamicRealm__RealmResults_E___:

``from``
--------

public **<any> (?)** from <**E (?)** >(:ref:`DynamicRealm <io_realm_DynamicRealm>` realm, :ref:`io.realm.RealmResults\<E> <io_realm_RealmResults>` results)

Creates a Flowable for a **RealmResults (?)**. It should emit the initial RealmResult when subscribed to and on each subsequent update of the RealmResults.

Realm observables are hot as RealmResults are automatically kept up to date.


Parameters
~~~~~~~~~~

- ``results - ``**RealmResults (?)**to listen to changes for.
   
   
   
- ``realm - ``**DynamicRealm (?)**instance results are coming from.
   
   
   

.. _io_realm_rx_RxObservableFactory_changesetsFrom__DynamicRealm__RealmResults_E___:

``changesetsFrom``
------------------

public **<any> (?)** changesetsFrom <**E (?)** >(:ref:`DynamicRealm <io_realm_DynamicRealm>` realm, :ref:`io.realm.RealmResults\<E> <io_realm_RealmResults>` results)

Creates an Observable for a **RealmResults (?)**. It should emit the initial RealmResult when subscribed to and on each subsequent update of the RealmResults it should emit the RealmResults + the **OrderedCollectionChangeSet (?)**that describes the update.

Changeset observables do not support backpressure as a changeset depends on the state of the previous changeset. Handling backpressure should therefor be left to users.


Parameters
~~~~~~~~~~

- ``results - ``**RealmResults (?)**to listen to changes for.
   
   
   
- ``realm - ``**Realm (?)**instance results are coming from.
   
   
   

.. _io_realm_rx_RxObservableFactory_from__Realm__RealmList_E___:

``from``
--------

public **<any> (?)** from <**E (?)** >(:ref:`Realm <io_realm_Realm>` realm, :ref:`io.realm.RealmList\<E> <io_realm_RealmList>` list)

Creates an Observable for a **RealmList (?)**. It should emit the initial list when subscribed to and on each subsequent update of the RealmList.

RealmList observables are hot as RealmLists are automatically kept up to date.

Note: **io.realm.RealmChangeListener (?)**is currently not supported on RealmLists.




Type Parameters
~~~~~~~~~~~~~~~

- E - type of query target
   

Parameters
~~~~~~~~~~

- ``list - ``RealmObject to listen to changes for.
   
- ``realm - ``**Realm (?)**instance list is coming from.
   
   
   

.. _io_realm_rx_RxObservableFactory_changesetsFrom__Realm__RealmList_E___:

``changesetsFrom``
------------------

public **<any> (?)** changesetsFrom <**E (?)** >(:ref:`Realm <io_realm_Realm>` realm, :ref:`io.realm.RealmList\<E> <io_realm_RealmList>` list)

Creates an Observable for a **RealmList (?)**. It should emit the initial RealmList when subscribed to and on each subsequent update of the RealmIst it should emit the RealmList + the **OrderedCollectionChangeSet (?)**that describes the update.

Changeset observables do not support backpressure as a changeset depends on the state of the previous changeset. Handling backpressure should therefor be left to users.


Type Parameters
~~~~~~~~~~~~~~~

- E - type of RealmObject
   

Parameters
~~~~~~~~~~

- ``list - ``**RealmList (?)**to listen to changes for.
   
   
   
- ``realm - ``**Realm (?)**instance list is coming from.
   
   
   

.. _io_realm_rx_RxObservableFactory_from__DynamicRealm__RealmList_E___:

``from``
--------

public **<any> (?)** from <**E (?)** >(:ref:`DynamicRealm <io_realm_DynamicRealm>` realm, :ref:`io.realm.RealmList\<E> <io_realm_RealmList>` list)

Creates a Flowable for a **RealmList (?)**. It should emit the initial list when subscribed to and on each subsequent update of the RealmList.

RealmList observables are hot as RealmLists are automatically kept up to date.

Note: **io.realm.RealmChangeListener (?)**is currently not supported on RealmLists.




Parameters
~~~~~~~~~~

- ``list - ``RealmList to listen to changes for.
   
- ``realm - ``**DynamicRealm (?)**instance list is coming from.
   
   
   

.. _io_realm_rx_RxObservableFactory_changesetsFrom__DynamicRealm__RealmList_E___:

``changesetsFrom``
------------------

public **<any> (?)** changesetsFrom <**E (?)** >(:ref:`DynamicRealm <io_realm_DynamicRealm>` realm, :ref:`io.realm.RealmList\<E> <io_realm_RealmList>` list)

Creates an Observable for a **RealmList (?)**. It should emit the initial RealmList when subscribed to and on each subsequent update of the RealmList it should emit the RealmList + the **OrderedCollectionChangeSet (?)**that describes the update.

Changeset observables do not support backpressure as a changeset depends on the state of the previous changeset. Handling backpressure should therefor be left to users.


Parameters
~~~~~~~~~~

- ``list - ``**RealmList (?)**to listen to changes for.
   
   
   
- ``realm - ``**Realm (?)**instance list is coming from.
   
   
   

.. _io_realm_rx_RxObservableFactory_from__Realm__E__:

``from``
--------

public **<any> (?)** from <**E (?)** >(:ref:`Realm <io_realm_Realm>` realm, **E (?)** object)

Creates a Flowable for a **RealmObject (?)**. It should emit the initial object when subscribed to and on each subsequent update of the object.

RealmObject observables are hot as RealmObjects are automatically kept up to date.


Type Parameters
~~~~~~~~~~~~~~~

- E - type of query target
   

Parameters
~~~~~~~~~~

- ``object - ``RealmObject to listen to changes for.
   
- ``realm - ``**Realm (?)**instance object is coming from.
   
   
   

.. _io_realm_rx_RxObservableFactory_changesetsFrom__Realm__E__:

``changesetsFrom``
------------------

public **<any> (?)** changesetsFrom <**E (?)** >(:ref:`Realm <io_realm_Realm>` realm, **E (?)** object)

Creates an Observable for a **RealmObject (?)**. It should emit the initial object when subscribed to and on each subsequent update of the object it should emit the object + the **io.realm.ObjectChangeSet (?)**that describes the update.

Changeset observables do not support backpressure as a changeset depends on the state of the previous changeset. Handling backpressure should therefore be left to the user.


Type Parameters
~~~~~~~~~~~~~~~

- E - type of RealmObject
   

Parameters
~~~~~~~~~~

- ``object - ``RealmObject to listen to changes for.
   
- ``realm - ``**Realm (?)**instance object is coming from.
   
   
   

.. _io_realm_rx_RxObservableFactory_from__DynamicRealm__DynamicRealmObject__:

``from``
--------

public **<any> (?)** from (:ref:`DynamicRealm <io_realm_DynamicRealm>` realm, :ref:`DynamicRealmObject <io_realm_DynamicRealmObject>` object)

Creates a Flowable for a **DynamicRealmObject (?)**. It should emit the initial object when subscribed to and on each subsequent update of the object.

DynamicRealmObject observables are hot as DynamicRealmObjects automatically are kept up to date.


Parameters
~~~~~~~~~~

- ``object - ``DynamicRealmObject to listen to changes for.
   
- ``realm - ``**DynamicRealm (?)**instance object is coming from.
   
   
   

.. _io_realm_rx_RxObservableFactory_changesetsFrom__DynamicRealm__DynamicRealmObject__:

``changesetsFrom``
------------------

public **<any> (?)** changesetsFrom (:ref:`DynamicRealm <io_realm_DynamicRealm>` realm, :ref:`DynamicRealmObject <io_realm_DynamicRealmObject>` object)

Creates an Observable for a **RealmObject (?)**. It should emit the initial object when subscribed to and on each subsequent update of the object it should emit the object + the **io.realm.ObjectChangeSet (?)**that describes the update.

Changeset observables do not support backpressure as a changeset depends on the state of the previous changeset. Handling backpressure should therefore be left to the user.


Parameters
~~~~~~~~~~

- ``object - ``RealmObject to listen to changes for.
   
- ``realm - ``**Realm (?)**instance object is coming from.
   
   
   

.. _io_realm_rx_RxObservableFactory_from__Realm__RealmQuery_E___:

``from``
--------

public **<any> (?)** from <**E (?)** >(:ref:`Realm <io_realm_Realm>` realm, :ref:`io.realm.RealmQuery\<E> <io_realm_RealmQuery>` query)

Creates a Single from a **RealmQuery (?)**. It should emit the query and then complete.

A RealmQuery observable is cold.


Type Parameters
~~~~~~~~~~~~~~~

- E - type of query target
   

Parameters
~~~~~~~~~~

- ``query - ``RealmQuery to emit.
   
- ``realm - ``**Realm (?)**instance query is coming from.
   
   
   

.. _io_realm_rx_RxObservableFactory_from__DynamicRealm__RealmQuery_E___:

``from``
--------

public **<any> (?)** from <**E (?)** >(:ref:`DynamicRealm <io_realm_DynamicRealm>` realm, :ref:`io.realm.RealmQuery\<E> <io_realm_RealmQuery>` query)

Creates a Single from a **RealmQuery (?)**. It should emit the query and then complete.

A RealmQuery observable is cold.


Parameters
~~~~~~~~~~

- ``query - ``RealmObject to listen to changes for.
   
- ``realm - ``**DynamicRealm (?)**instance query is coming from.
   
   
   


