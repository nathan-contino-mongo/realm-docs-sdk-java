
.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

io.realm.mongodb.RealmResultTask<T>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _io_realm_mongodb_RealmResultTask:

*Implemented interfaces:*

- :ref:`io.realm.RealmAsyncTask <io_realm_RealmAsyncTask>`

The RealmResultTask is a specific version of **RealmAsyncTask (?)**that provides a mechanism to work with asynchronous operations carried out against MongoDB Realm that yield a result.

This class offers both blocking (``get``) and non-blocking (``getAsync``) method calls.




Method Summary
==============

.. list-table::
   :header-rows: 1
   
   * - Modifier and Type
     - Method and Description
   
   * - public **T (?)**
     - :ref:`get <io_realm_mongodb_RealmResultTask_get____>` ()
       
       Blocks the thread on which the call is made until the result of the operation arrives.
       
       
       
   
   * - public **void (?)**
     - :ref:`getAsync <io_realm_mongodb_RealmResultTask_getAsync__App_Callback_T___>` (:ref:`io.realm.mongodb.App.Callback\<T> <io_realm_mongodb_App_Callback>` callback)
       
       Provides a way to subscribe to asynchronous operations via a callback, which handles both results and errors.
       
       
       
   
   
Method Detail
=============

.. _io_realm_mongodb_RealmResultTask_get____:

get
----

public **T (?)** get ()

Blocks the thread on which the call is made until the result of the operation arrives.
.. _io_realm_mongodb_RealmResultTask_getAsync__App_Callback_T___:

getAsync
--------

public **void (?)** getAsync (:ref:`io.realm.mongodb.App.Callback\<T> <io_realm_mongodb_App_Callback>` callback)

Provides a way to subscribe to asynchronous operations via a callback, which handles both results and errors.
Parameters
~~~~~~~~~~

- callback - the **App.Callback (?)**designed to receive results.
   
   
   

Throws
~~~~~~


